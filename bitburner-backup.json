{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":4006,\"hp\":72,\"max_hp\":72,\"strength\":572,\"defense\":628,\"dexterity\":422,\"agility\":708,\"charisma\":244,\"intelligence\":0,\"hacking_chance_mult\":4.09809163020557,\"hacking_speed_mult\":3.507915527489145,\"hacking_money_mult\":19.741503902354825,\"hacking_grow_mult\":4.7072287430626165,\"hacking_exp\":303982243.76214975,\"strength_exp\":610.3952813983173,\"defense_exp\":626.5646928260871,\"dexterity_exp\":1143.5816232290333,\"agility_exp\":622.5223399691447,\"charisma_exp\":5029.59489643163,\"intelligence_exp\":0,\"hacking_mult\":9.425653804933916,\"strength_mult\":22.5525855464383,\"defense_mult\":24.33768429091671,\"dexterity_mult\":11.225413948957002,\"agility_mult\":27.566678313269996,\"charisma_mult\":3.2142403918301428,\"hacking_exp_mult\":11.818953653110475,\"strength_exp_mult\":4.042352856942494,\"defense_exp_mult\":4.042352856942494,\"dexterity_exp_mult\":4.648705785483868,\"agility_exp_mult\":4.042352856942494,\"charisma_exp_mult\":3.2269953140199448,\"company_rep_mult\":4.453253533347524,\"faction_rep_mult\":3.3736769192026688,\"money\":543558450.6449407,\"city\":\"Sector-12\",\"location\":\"Four Sigma\",\"jobs\":{\"Four Sigma\":\"Software Engineering Intern\"},\"companyName\":\"Four Sigma\",\"currentServer\":\"home\",\"purchasedServers\":[\"lauren-4\",\"lauren-18\",\"lauren-13\",\"lauren-9\",\"lauren-0\",\"lauren-15\",\"lauren-14\",\"lauren-1\",\"lauren-6\",\"lauren-16\",\"lauren-8\",\"lauren-5\",\"lauren-22\",\"lauren-17\",\"lauren-11\",\"lauren-20\",\"lauren-2\",\"lauren-23\",\"lauren\",\"lauren-3\",\"lauren-19\",\"lauren-7\",\"lauren-12\",\"lauren-21\",\"lauren-10\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91669086.41197404,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91683764.46130334,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91634109.43378912,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91710165.27148722,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91639542.80264285,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91726135.83289325,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91706817.35742137,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91618736.25813758,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91725866.4816884,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91723208.24298,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91712008.84079103,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36939.1999999924,\"ram\":64,\"totalMoneyGenerated\":91751861.91174804,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36901.19999999243,\"ram\":64,\"totalMoneyGenerated\":91668980.97560823,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36901.19999999243,\"ram\":64,\"totalMoneyGenerated\":91775856.64651597,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36901.19999999243,\"ram\":64,\"totalMoneyGenerated\":91738406.23291305,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36901.19999999243,\"ram\":64,\"totalMoneyGenerated\":91686986.22551954,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36814.5999999925,\"ram\":64,\"totalMoneyGenerated\":91576241.21409062,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36814.5999999925,\"ram\":64,\"totalMoneyGenerated\":91573752.8795314,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36772.59999999253,\"ram\":64,\"totalMoneyGenerated\":91446114.35126196,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36772.59999999253,\"ram\":64,\"totalMoneyGenerated\":91409948.69098249,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36772.59999999253,\"ram\":64,\"totalMoneyGenerated\":91385581.07152781,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36772.59999999253,\"ram\":64,\"totalMoneyGenerated\":91386216.95627709,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36772.59999999253,\"ram\":64,\"totalMoneyGenerated\":91384057.8601938,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36716.799999992574,\"ram\":64,\"totalMoneyGenerated\":91242105.400528,\"name\":\"hacknet-node-23\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":36716.799999992574,\"ram\":64,\"totalMoneyGenerated\":91307461.27294017,\"name\":\"hacknet-node-24\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":35674.99999999392,\"ram\":64,\"totalMoneyGenerated\":88711206.60390526,\"name\":\"hacknet-node-25\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":35581.79999999529,\"ram\":64,\"totalMoneyGenerated\":88437949.53294359,\"name\":\"hacknet-node-26\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":2488.7416017008854,\"onlineTimeSeconds\":34681.59999999941,\"ram\":64,\"totalMoneyGenerated\":86231923.36000976,\"name\":\"hacknet-node-27\"}}],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"MegaCorp\",\"Netburners\",\"NiteSec\",\"CyberSec\",\"The Black Hand\",\"Sector-12\",\"BitRunners\",\"The Syndicate\",\"Slum Snakes\",\"The Dark Army\",\"Speakers for the Dead\",\"Tian Di Hui\",\"Tetrads\"],\"factionInvitations\":[],\"queuedAugmentations\":[],\"augmentations\":[{\"level\":62,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Augmented Targeting II\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"LuminCloaking-V1 Skin Implant\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"LuminCloaking-V2 Skin Implant\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"SmartSonar Implant\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"BrachiBlades\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"The Shadow's Simulacrum\"},{\"level\":1,\"name\":\"Power Recirculation Core\"},{\"level\":1,\"name\":\"Bionic Spine\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"HemoRecirculator\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Embedded Netburner Module Analyze Engine\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V2 Upgrade\"},{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V3 Upgrade\"},{\"level\":1,\"name\":\"Embedded Netburner Module Direct Memory Access Upgrade\"},{\"level\":1,\"name\":\"CordiARC Fusion Reactor\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"PCMatrix\"},{\"level\":1,\"name\":\"Synfibril Muscle\"},{\"level\":1,\"name\":\"Bionic Legs\"},{\"level\":1,\"name\":\"Augmented Targeting III\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":1,\"name\":\"Combat Rib III\"},{\"level\":1,\"name\":\"The Red Pill\"},{\"level\":1,\"name\":\"NEMEAN Subdermal Weave\"},{\"level\":1,\"name\":\"Synthetic Heart\"},{\"level\":1,\"name\":\"Graphene Bionic Legs Upgrade\"},{\"level\":1,\"name\":\"Bionic Arms\"}],\"sourceFiles\":[{\"lvl\":1,\"n\":1}],\"numPeopleKilled\":40,\"karma\":-2106.749999999999,\"crime_money_mult\":4.5838001619601485,\"crime_success_mult\":2.5509844379604307,\"isWorking\":true,\"focus\":false,\"workType\":\"Studying or Taking a class at university\",\"workCostMult\":3,\"workExpMult\":2,\"currentWorkFactionName\":\"\",\"currentWorkFactionDescription\":\"\",\"workHackExpGainRate\":9.45516292248838,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0,\"workRepGainRate\":0,\"workMoneyGainRate\":0,\"workMoneyLossRate\":192,\"workHackExpGained\":1622146.6613076783,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":0,\"workRepGained\":0,\"workMoneyGained\":-32939904,\"createProgramName\":\"\",\"createProgramReqLvl\":100,\"className\":\"taking an Algorithms course\",\"crimeType\":\"\",\"timeWorked\":34312400,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":72000000,\"work_money_mult\":4.206272011000914,\"hacknet_node_money_mult\":5.427233002376496,\"hacknet_node_purchase_cost_mult\":0.3442613555566189,\"hacknet_node_ram_cost_mult\":0.45001484386486135,\"hacknet_node_core_cost_mult\":0.45001484386486135,\"hacknet_node_level_cost_mult\":0.38251261728513214,\"hasWseAccount\":true,\"hasTixApiAccess\":true,\"has4SData\":true,\"has4SDataTixApi\":true,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":4,\"lastUpdate\":1642697079969,\"totalPlaytime\":2477590000,\"playtimeSinceLastAug\":36944200,\"playtimeSinceLastBitnode\":1442736800,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-34125648,\"codingcontract\":0,\"corporation\":0,\"crime\":1650168.058305653,\"gang\":0,\"hacking\":425217574129.55634,\"hacknet\":2553264092.563966,\"hacknet_expenses\":-17349554645.283684,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-350977760351.0928,\"total\":542558450.6449407,\"work\":41364.47895618367,\"servers\":-58586730659.63522,\"other\":-281800000,\"augmentations\":0}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-545938224,\"codingcontract\":16275000000,\"corporation\":0,\"crime\":2244073381.36415,\"gang\":0,\"hacking\":27081170872538.594,\"hacknet\":25803077617.600346,\"hacknet_expenses\":-1058549377410.9642,\"hospitalization\":-22337481.706410915,\"infiltration\":148569665.6408787,\"sleeves\":0,\"stock\":576451580862.1326,\"total\":61245729694.71535,\"work\":123583749.84465986,\"servers\":-13877273186714.645,\"other\":-5615193580566.559,\"augmentations\":-7089386607726.663}},\"scriptProdSinceLastAug\":515103998068.5332,\"exploits\":[\"N00dles\"],\"achievements\":[{\"ID\":\"CYBERSEC\",\"unlockedOn\":1641675126871},{\"ID\":\"NITESEC\",\"unlockedOn\":1641675126890},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1641675126893},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1641675126897},{\"ID\":\"SF1.1\",\"unlockedOn\":1641675126901},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1641675126906},{\"ID\":\"NS2\",\"unlockedOn\":1641675126910},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1641675126915},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1641675126920},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1641675126925},{\"ID\":\"TOR\",\"unlockedOn\":1641675126930},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1641675126934},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1641683001577},{\"ID\":\"WORKOUT\",\"unlockedOn\":1641683661513},{\"ID\":\"TRAVEL\",\"unlockedOn\":1641699444909},{\"ID\":\"N00DLES\",\"unlockedOn\":1641699444911},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1641711726317},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1641713166320},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1641748014946},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1641858253775},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1641872767788},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1641941669460},{\"ID\":\"4S\",\"unlockedOn\":1641943349663},{\"ID\":\"DONATION\",\"unlockedOn\":1642017508846},{\"ID\":\"FROZE\",\"unlockedOn\":1642193609462},{\"ID\":\"DISCOUNT\",\"unlockedOn\":1642523664057},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1642573834102},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1642619100874},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1642634100595}],\"factionWorkType\":\"Faction Hacking Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":5,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":true,\"ip\":\"98.8.9.1\",\"isConnectedTo\":true,\"maxRam\":131072,\"messages\":[\"hackers-starting-handbook.lit\",\"icarus.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"BruteSSH.exe\",\"DeepscanV1.exe\",\"AutoLink.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\"],\"ramUsed\":125065.99999999999,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"manage-hacking.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":301686506.1859032,\"onlineMoneyMade\":425217574129.55634,\"onlineRunningTime\":36939.4099999924,\"pid\":3,\"ramUsage\":15.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/utils/ports.js\",\"url\":\"blob:file:///66178739-69b4-46b4-b2f7-e955d181f32c\",\"moduleSequenceNumber\":243364},{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///d0157a27-0066-4e81-94c8-d679d193bb57\",\"moduleSequenceNumber\":243333},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243336},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":243353},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":243335},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243336},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243336},{\"filename\":\"/utils/hacking.js\",\"url\":\"blob:file:///fff5f2c6-2c61-44f0-a89b-c69215171a22\",\"moduleSequenceNumber\":243334},{\"filename\":\"manage-hacking.js\",\"url\":\"blob:file:///a1aa09ad-1554-4725-9cd6-e81e47eb080a\",\"moduleSequenceNumber\":243380}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"manage-hacknet.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36939.4099999924,\"pid\":4,\"ramUsage\":5.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":243807},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":243803},{\"filename\":\"manage-hacknet.js\",\"url\":\"blob:file:///48d2a800-3690-46d4-83a4-cd16531446c5\",\"moduleSequenceNumber\":269915}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"manage-servers.js\",\"logs\":[],\"logUpd\":false,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36939.4099999924,\"pid\":7,\"ramUsage\":7.25,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":243807},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":243803},{\"filename\":\"/utils/ports.js\",\"url\":\"blob:file:///66178739-69b4-46b4-b2f7-e955d181f32c\",\"moduleSequenceNumber\":243805},{\"filename\":\"manage-servers.js\",\"url\":\"blob:file:///2cae8a14-106c-49e1-a363-45a9529938b1\",\"moduleSequenceNumber\":269916}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"manage-stocks.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":89886423938.97705,\"onlineRunningTime\":36939.4099999924,\"pid\":8,\"ramUsage\":21.2,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/utils/organizations.js\",\"url\":\"blob:file:///6e45947b-f432-4353-9719-391d1f6cf7f2\",\"moduleSequenceNumber\":243804},{\"filename\":\"/utils/ports.js\",\"url\":\"blob:file:///66178739-69b4-46b4-b2f7-e955d181f32c\",\"moduleSequenceNumber\":243805},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":243807},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///d0157a27-0066-4e81-94c8-d679d193bb57\",\"moduleSequenceNumber\":243801},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":243807},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":243803},{\"filename\":\"manage-stocks.js\",\"url\":\"blob:file:///cce8862b-a61e-4baa-a6a9-b5824fe96c7d\",\"moduleSequenceNumber\":269917}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"darkweb\"],\"dataMap\":{\"darkweb\":[0,0,0,241900]},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":633360.5866424635,\"onlineMoneyMade\":0,\"onlineRunningTime\":35615.80999999478,\"pid\":6175,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":100,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":319401}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2503.2099999998795,\"pid\":17981,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1020,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":319401}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2403.4099999998816,\"pid\":18537,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":43,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":319401}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2382.2099999998813,\"pid\":18673,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1330,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":319401}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2375.0099999998815,\"pid\":18736,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4021,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":243.60999999999936,\"pid\":19022,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":2635,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":225.40999999999914,\"pid\":19120,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1239,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":319401}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":225.40999999999914,\"pid\":19136,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":601,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":221.8099999999991,\"pid\":19162,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":732,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19204,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":164,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19207,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":784,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":203.8099999999989,\"pid\":19259,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":5260,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19314,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":153,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19340,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1054,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999882,\"pid\":19369,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":137,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":319401}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":193.00999999999877,\"pid\":19406,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1469,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.60999999999854,\"pid\":19534,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1273,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":168.2099999999985,\"pid\":19550,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":6133,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19629,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":2039,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19658,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":12,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19703,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":466,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.00999999999985,\"pid\":19780,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1364,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.00999999999985,\"pid\":19781,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":165,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":319401}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19801,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":202,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319379}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19803,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":398,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19804,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":946,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19805,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":891,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19819,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1259,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19850,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3493,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"comptek\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19851,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":74,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000033,\"pid\":19883,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":255,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19908,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3803,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19955,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":175,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319379}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19960,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":258,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319379}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20022,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":320,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999996,\"pid\":20027,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":141,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319379}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999996,\"pid\":20035,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":295,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20044,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":127,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319379}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20051,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1766,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":319401}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20085,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":121,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319379}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20107,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":24,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"pid\":20142,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":101,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319379}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20169,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":3594,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20170,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1986,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000002,\"pid\":20183,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":4690,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20198,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":13451,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"defcomm\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20201,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":906,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"import { DEFAULT_PORT, LOCALHOST_PREFIX } from '/utils/misc.js';\\n\\nconst GITHUB_SCRIPTS_FOLDER =\\n  'https://raw.githubusercontent.com/phantomesse/bitburner/master/';\\nconst SCRIPTS_TXT = 'scripts.txt';\\n\\n/**\\n * Copy this file to the bitburner game to sync the rest of the scripts:\\n *\\n * ```\\n * wget https://raw.githubusercontent.com/phantomesse/bitburner/main/scripts/sync.js sync.js\\n * ```\\n *\\n * @example run sync.js <port>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  let port = ns.args[0];\\n  port = typeof port !== 'number' ? DEFAULT_PORT : port;\\n\\n  // Check if local server is running and set scripts prefix accordingly.\\n  let scriptsPrefix;\\n  try {\\n    scriptsPrefix = `${LOCALHOST_PREFIX}:${port}/`;\\n    await fetch(scriptsPrefix + SCRIPTS_TXT);\\n    ns.tprint('syncing to local server');\\n  } catch (_) {\\n    ns.tprint('no local server running, so syncing from github');\\n    scriptsPrefix = GITHUB_SCRIPTS_FOLDER;\\n  }\\n\\n  // Get list of scripts to download and download each script.\\n  let currentScripts = await getScripts(scriptsPrefix);\\n  for await (const script of currentScripts) {\\n    await script.download(ns, scriptsPrefix);\\n  }\\n\\n  // Watch for any changes in scripts every second and download newer copies.\\n  while (true) {\\n    let latestScripts = await getScripts(scriptsPrefix);\\n    for await (const latestScript of latestScripts) {\\n      const currentScript = currentScripts.find(\\n        script => script.fileName === latestScript.fileName\\n      );\\n      if (\\n        currentScript === undefined ||\\n        latestScript.lastModifiedTime !== currentScript.lastModifiedTime\\n      ) {\\n        await latestScript.download(ns, scriptsPrefix);\\n      }\\n    }\\n\\n    // Delete any files that were in the current scripts but are not in the\\n    // latest scripts.\\n    for await (const currentScript of currentScripts) {\\n      const latestScript = latestScripts.find(\\n        script => script.fileName === currentScript.fileName\\n      );\\n      if (latestScript === undefined) {\\n        ns.rm(currentScript.fileName);\\n        ns.tprint(`removed ${currentScript.fileName}`);\\n      }\\n    }\\n\\n    currentScripts = latestScripts;\\n\\n    await ns.sleep(1000);\\n  }\\n}\\n\\nclass Script {\\n  /**\\n   * @param {string} fileName,\\n   * @param {number} lastModifiedTime\\n   */\\n  constructor(fileName, lastModifiedTime) {\\n    this.fileName = fileName;\\n    this.lastModifiedTime = lastModifiedTime;\\n  }\\n\\n  /**\\n   * @param {import('index').NS } ns\\n   * @param {string} scriptsPrefix\\n   */\\n  async download(ns, scriptsPrefix) {\\n    const contents = await getFileContents(scriptsPrefix, this.fileName);\\n    await ns.write('/' + this.fileName, contents, 'w');\\n    ns.tprint(`downloaded ${this.fileName}`);\\n  }\\n}\\n\\n/** @param {string} scriptsPrefix */\\nasync function getScripts(scriptsPrefix) {\\n  return (await getFileContents(scriptsPrefix, SCRIPTS_TXT))\\n    .split('\\\\n')\\n    .map(line => line.split('\\\\t'))\\n    .map(args => new Script(args[0], parseFloat(args[1])));\\n}\\n\\n/**\\n * @param {string} scriptsPrefix\\n * @param {string} fileName\\n */\\nasync function getFileContents(scriptsPrefix, fileName) {\\n  const response = await fetch(scriptsPrefix + 'scripts/' + fileName);\\n  return await response.text();\\n}\\n\",\"filename\":\"sync.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319018},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":319035},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":319017},{\"filename\":\"sync.js\",\"url\":\"blob:file:///28df1b0b-c026-4342-baff-e0ac8926d57b\",\"moduleSequenceNumber\":319165}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"_hash\":\"5ee6ae55677672bee2cba1d9c424dc6b1eb1f013e7ebc3f7f8c6be059cfad9e8\",\"moduleSequenceNumber\":319388,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getMoneyToSpend } from '/utils/misc.js';\\n\\nconst DISABLE_LOGGING_FUNCTIONS = ['sleep', 'getServerMoneyAvailable'];\\n\\n/**\\n * Manages buying and upgrading hacknet nodes.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport async function main(ns) {\\n  DISABLE_LOGGING_FUNCTIONS.forEach(ns.disableLog);\\n\\n  while (true) {\\n    // Buy new nodes if we can.\\n    const moneyToSpend = getMoneyToSpend(ns);\\n    let nodesPurchased = 0;\\n    while (ns.hacknet.getPurchaseNodeCost() < moneyToSpend) {\\n      if (ns.hacknet.purchaseNode() === -1) break;\\n      nodesPurchased++;\\n    }\\n    if (nodesPurchased > 0) {\\n      ns.print(`purchased ${nodesPurchased} new hacknet nodes`);\\n    }\\n\\n    // Upgrade nodes.\\n    for (let i = 0; i < ns.hacknet.numNodes(); i++) {\\n      // Upgrade cores.\\n      const coresUpgraded = upgrade(\\n        ns,\\n        i,\\n        ns.hacknet.getCoreUpgradeCost,\\n        ns.hacknet.upgradeCore\\n      );\\n      if (coresUpgraded > 0) {\\n        ns.print(`upgraded hacknet-node-${i} cores ${coresUpgraded} times`);\\n      }\\n\\n      // Upgrade RAM.\\n      const ramUpgraded = upgrade(\\n        ns,\\n        i,\\n        ns.hacknet.getRamUpgradeCost,\\n        ns.hacknet.upgradeRam\\n      );\\n      if (ramUpgraded > 0) {\\n        ns.print(`upgraded hacknet-node-${i} RAM ${ramUpgraded} times`);\\n      }\\n\\n      // Upgrade level.\\n      const levelsUpgraded = upgrade(\\n        ns,\\n        i,\\n        ns.hacknet.getLevelUpgradeCost,\\n        ns.hacknet.upgradeLevel\\n      );\\n      if (levelsUpgraded > 0) {\\n        ns.print(`upgraded hacknet-node-${i} levels ${levelsUpgraded} times`);\\n      }\\n\\n      await ns.sleep(1000);\\n    }\\n  }\\n}\\n\\n/**\\n * Calculates the cost of upgrading an aspect of a node.\\n *\\n * @callback UpgradeCostFn\\n * @param {number} nodeIndex\\n * @param {number} upgradeCount\\n * @returns {number} cost of upgrade\\n */\\n\\n/**\\n * Upgrades an aspect of a node.\\n *\\n * @callback UpgradeFn\\n * @param {number} nodeIndex\\n * @param {number} upgradeCount\\n * @returns {boolean} whether the upgrade was successful\\n */\\n\\n/**\\n * @param {import('index').NS} ns\\n * @param {number} nodeIndex\\n * @param {UpgradeCostFn} getUpgradeCostFn\\n * @param {UpgradeFn} upgradeFn\\n * @returns {number} number of upgrades successful\\n */\\nfunction upgrade(ns, nodeIndex, getUpgradeCostFn, upgradeFn) {\\n  const moneyToSpend = getMoneyToSpend(ns);\\n  let upgradeCount = 0;\\n  while (getUpgradeCostFn(nodeIndex, ++upgradeCount) < moneyToSpend);\\n  if (upgradeCount === 0) return 0;\\n  return upgradeFn(nodeIndex, upgradeCount) ? upgradeCount : 0;\\n}\\n\",\"filename\":\"manage-hacknet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319018},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":319035},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":319017},{\"filename\":\"manage-hacknet.js\",\"url\":\"blob:file:///48d2a800-3690-46d4-83a4-cd16531446c5\",\"moduleSequenceNumber\":319167}],\"dependents\":[],\"ramUsage\":5.7,\"server\":\"home\",\"_hash\":\"668ac2cd1df76bb0088f74b8f2ead30c105c850c694e5ac5a35293a6f5eaca8f\",\"moduleSequenceNumber\":319185,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319357}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319357,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319379}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319379,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":319401}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":319401,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { MANAGE_SERVERS_TO_MANAGE_HACKING_PORT } from '/utils/ports.js';\\nimport { getMoneyToSpend, sort } from '/utils/misc.js';\\nimport { PURCHASED_SERVER_PREFIX } from '/utils/servers.js';\\n\\nconst MIN_POWER = 3; // Min RAM that we want is at least 8GB\\nconst MAX_POWER = 20; // Max RAM is 2^20\\n\\n/**\\n * Continuously try to buy more servers and sells any old servers with less RAM\\n * than we could get with a new server.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport async function main(ns) {\\n  ns.disableLog('ALL');\\n  const purchasedServerLimit = ns.getPurchasedServerLimit();\\n  let lowestRamAcceptable = Math.pow(2, MIN_POWER);\\n\\n  while (true) {\\n    // Buy / upgrade servers.\\n    for (let power = MAX_POWER; power >= MIN_POWER; power--) {\\n      const ram = Math.pow(2, power);\\n      if (ram < lowestRamAcceptable) continue;\\n      const cost = ns.getPurchasedServerCost(ram);\\n      if (getMoneyToSpend(ns) < cost) continue;\\n\\n      // Delete lowest RAM server if over server limit.\\n      if (getPurchasedServerNames(ns).length === purchasedServerLimit) {\\n        const lowestRamServerName = getLowestRamPurchasedServer(ns);\\n        const lowestRam = ns.getServerMaxRam(lowestRamServerName);\\n        if (ram <= lowestRam) continue;\\n        ns.killall(lowestRamServerName);\\n        if (ns.deleteServer(lowestRamServerName)) {\\n          ns.toast(\\n            `deleted server ${lowestRamServerName} which had ${lowestRam}GB RAM`\\n          );\\n          await ns.writePort(\\n            MANAGE_SERVERS_TO_MANAGE_HACKING_PORT,\\n            JSON.stringify({ remove: lowestRamServerName })\\n          );\\n        }\\n      }\\n\\n      // Buy server.\\n      const server = ns.purchaseServer(PURCHASED_SERVER_PREFIX, ram);\\n      if (server !== '') {\\n        ns.toast(`bought server (${server}) with ${ram}GB RAM`);\\n        await ns.writePort(\\n          MANAGE_SERVERS_TO_MANAGE_HACKING_PORT,\\n          JSON.stringify({ add: server })\\n        );\\n\\n        // Update lowest RAM acceptable.\\n        if (getPurchasedServerNames(ns).length === purchasedServerLimit) {\\n          const lowestRamServerName = getLowestRamPurchasedServer(ns);\\n          const lowestRam = ns.getServerMaxRam(lowestRamServerName);\\n          if (lowestRam > lowestRamAcceptable) {\\n            lowestRamAcceptable = lowestRam;\\n            ns.toast(`now only buying servers >= ${lowestRamAcceptable}GB RAM`);\\n          }\\n        }\\n      }\\n    }\\n\\n    // Wait 30 seconds before buying another server.\\n    await ns.sleep(1000 * 30);\\n  }\\n}\\n\\nfunction getPurchasedServerNames(ns) {\\n  return ns\\n    .scan()\\n    .filter(serverName => serverName.startsWith(PURCHASED_SERVER_PREFIX));\\n}\\n\\n/** @param {import('index').NS} ns */\\nfunction getLowestRamPurchasedServer(ns) {\\n  const purchasedServerNames = getPurchasedServerNames(ns);\\n  sort(purchasedServerNames, ns.getServerMaxRam);\\n  return purchasedServerNames[0];\\n}\\n\",\"filename\":\"manage-servers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319018},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319018},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":319035},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":319017},{\"filename\":\"/utils/ports.js\",\"url\":\"blob:file:///66178739-69b4-46b4-b2f7-e955d181f32c\",\"moduleSequenceNumber\":319046},{\"filename\":\"manage-servers.js\",\"url\":\"blob:file:///2cae8a14-106c-49e1-a363-45a9529938b1\",\"moduleSequenceNumber\":319170}],\"dependents\":[],\"ramUsage\":7.25,\"server\":\"home\",\"_hash\":\"eec45ecc246a718e76e3f0f40fb264e8460442804fd953c8f3f86ff83ac840ec\",\"moduleSequenceNumber\":319382,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getMoneyToSpend, getNetWorth, sort } from '/utils/misc.js';\\nimport { formatMoney, formatPercent } from '/utils/format.js';\\nimport { HOME_SERVER_NAME } from '/utils/servers.js';\\nimport { getForecast } from './utils/stock';\\nimport {\\n  MANAGE_HACKING_TO_MANAGE_STOCKS_PORT,\\n  NULL_PORT_DATA,\\n} from './utils/ports';\\nimport { getStockSymbol } from './utils/organizations';\\n\\nconst COMMISSION_FEE = 100000;\\nconst PERCENT_OF_NET_WORTH_IN_STOCK = 0.99;\\n\\n/**\\n * Manages buying and selling stocks.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport async function main(ns) {\\n  ns.disableLog('ALL');\\n\\n  let symbols;\\n  try {\\n    symbols = ns.stock.getSymbols();\\n  } catch (_) {\\n    // No stock exchange API.\\n    return;\\n  }\\n\\n  while (true) {\\n    const manageHackingMessage = ns.readPort(\\n      MANAGE_HACKING_TO_MANAGE_STOCKS_PORT\\n    );\\n    if (manageHackingMessage !== NULL_PORT_DATA) {\\n      const response = JSON.parse(manageHackingMessage);\\n      if (response.buy) {\\n        const symbol = getStockSymbol(response.buy);\\n        if (symbol !== undefined) {\\n          buyStock(ns, symbol, ns.getServerMoneyAvailable(HOME_SERVER_NAME));\\n        }\\n      }\\n      if (response.sell) {\\n        const symbol = getStockSymbol(response.sell);\\n        if (symbol !== undefined) sellStock(ns, symbol);\\n      }\\n    }\\n\\n    const cash = ns.getServerMoneyAvailable(HOME_SERVER_NAME);\\n    const netWorth = getNetWorth(ns);\\n    if (cash / netWorth < 1 - PERCENT_OF_NET_WORTH_IN_STOCK) {\\n      ns.print(\\n        `\\\\nnot buying any stock because we want only ${formatPercent(\\n          PERCENT_OF_NET_WORTH_IN_STOCK\\n        )} of our net worth in stocks and we currently have ${formatMoney(\\n          cash,\\n          true\\n        )} in cash which is ${formatPercent(\\n          cash / netWorth\\n        )} of our net worth (${formatMoney(netWorth, true)})`\\n      );\\n    } else {\\n      // Sort stock symbols sorted from lowest to highest ask price and buy stock\\n      // starting with the cheapest stock.\\n      let moneyToSpend = cash - (1 - PERCENT_OF_NET_WORTH_IN_STOCK) * netWorth;\\n      ns.print(`\\\\ncan spend ${formatMoney(moneyToSpend)}`);\\n      sort(symbols, ns.stock.getAskPrice);\\n      for (const symbol of symbols) {\\n        if (moneyToSpend <= COMMISSION_FEE) break;\\n        moneyToSpend -= buyStock(ns, symbol, moneyToSpend);\\n      }\\n    }\\n\\n    // Sort stock symbols sorted from highest to lowest bid price and sell stock\\n    // starting at the most expensive stock.\\n    sort(symbols, ns.stock.getBidPrice);\\n    for (const symbol of symbols) sellStock(ns, symbol);\\n\\n    await ns.sleep(6000); // Sleep for 6 seconds.\\n  }\\n}\\n\\n/**\\n * @param {import('index').NS} ns\\n * @param {string} symbol\\n * @param {number} moneyToSpend\\n * @returns {number} how much we spent\\n */\\nfunction buyStock(ns, symbol, moneyToSpend) {\\n  const ownedShareCount = ns.stock.getPosition(symbol)[0];\\n  let sharesToBuy = Math.min(\\n    Math.floor((moneyToSpend - COMMISSION_FEE) / ns.stock.getAskPrice(symbol)),\\n    ns.stock.getMaxShares(symbol) - ownedShareCount\\n  );\\n  if (sharesToBuy <= 0) return 0;\\n\\n  const forecast = getForecast(ns, symbol);\\n  if (forecast < 0.5) return 0;\\n  sharesToBuy = Math.ceil(forecast * sharesToBuy);\\n\\n  const sharePrice = ns.stock.buy(symbol, sharesToBuy);\\n  ns.print(\\n    `bought ${sharesToBuy} shares of ${symbol} at ${formatMoney(sharePrice)}`\\n  );\\n\\n  return sharePrice * sharesToBuy + COMMISSION_FEE;\\n}\\n\\n/**\\n * @param {import('index').NS} ns\\n * @param {string} symbol\\n */\\nfunction sellStock(ns, symbol) {\\n  const position = ns.stock.getPosition(symbol);\\n  const ownedShareCount = position[0];\\n  if (ownedShareCount === 0) return; // Nothing to sell.\\n\\n  // Panic sell.\\n  if (getForecast(ns, symbol) < 0.15) {\\n    const sharesToSell = ns.stock.getPosition(symbol)[0];\\n    ns.stock.sell(symbol, sharesToSell);\\n    ns.print(`panic sold ${sharesToSell} shares of ${symbol}`);\\n  }\\n\\n  const ownedAvgSharePrice = position[1];\\n  const bidPrice = ns.stock.getBidPrice(symbol);\\n  if (bidPrice < ownedAvgSharePrice) return; // We won't make a profit.\\n\\n  // Determine how much to sell.\\n  let sharesToSell = ownedShareCount;\\n  const forecast = getForecast(ns, symbol);\\n  if (forecast > 0.5) return; // Stock will go up.\\n  sharesToSell = Math.ceil((forecast / 0.5) * sharesToSell);\\n\\n  if (sharesToSell === 0) return; // Nothing to sell.\\n  const gain = ns.stock.getSaleGain(symbol, sharesToSell, 'Long');\\n  const profit =\\n    (gain - ownedAvgSharePrice * ownedShareCount) /\\n    (ownedAvgSharePrice * ownedShareCount);\\n  if (profit < 0) return; // We won't make a profit.\\n\\n  const sharePrice = ns.stock.sell(symbol, sharesToSell);\\n  ns.print(\\n    `sold ${sharesToSell} shares of ${symbol} at ${formatMoney(\\n      sharePrice\\n    )} with profit of ${formatPercent(profit)}`\\n  );\\n}\\n\",\"filename\":\"manage-stocks.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/organizations.js\",\"url\":\"blob:file:///6e45947b-f432-4353-9719-391d1f6cf7f2\",\"moduleSequenceNumber\":319059},{\"filename\":\"/utils/ports.js\",\"url\":\"blob:file:///66178739-69b4-46b4-b2f7-e955d181f32c\",\"moduleSequenceNumber\":319046},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":319035},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319018},{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///d0157a27-0066-4e81-94c8-d679d193bb57\",\"moduleSequenceNumber\":319015},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319018},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":319035},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":319017},{\"filename\":\"manage-stocks.js\",\"url\":\"blob:file:///cce8862b-a61e-4baa-a6a9-b5824fe96c7d\",\"moduleSequenceNumber\":319171}],\"dependents\":[],\"ramUsage\":21.2,\"server\":\"home\",\"_hash\":\"67967b49a7dd161625c2ca1d07c8a3ec6672b5d5e4a116564c6417dbd84ce857\",\"moduleSequenceNumber\":319383,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getBidPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getMaxShares\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getSaleGain\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** Utils for formatting numbers. */\\n\\n/**\\n * @param {number} money\\n * @param {boolean} [isCompact]\\n * @returns {string}\\n */\\nexport function formatMoney(money, isCompact) {\\n  return money.toLocaleString('en-US', {\\n    style: 'currency',\\n    currency: 'USD',\\n    notation: isCompact ? 'compact' : 'standard',\\n  });\\n}\\n\\n/**\\n * @param {number} number\\n * @param {boolean} [isCompact]\\n * @returns {string}\\n */\\nexport function formatNumber(number, isCompact) {\\n  return Intl.NumberFormat('en', {\\n    notation: isCompact ? 'compact' : 'standard',\\n  }).format(number);\\n}\\n\\n/**\\n * Formats a percentage within two decimals.\\n *\\n * @param {number} percent\\n * @returns {string}\\n */\\nexport function formatPercent(percent) {\\n  return (percent * 100).toFixed(2) + '%';\\n}\\n\\n/**\\n * Formats time with minutes and seconds.\\n *\\n * @param {number} timeMs\\n * @returns {string} e.g. \\\"43s\\\", \\\"4m 0s\\\", \\\"3m 32s\\\"\\n */\\nexport function formatTime(timeMs) {\\n  const minutes = Math.floor(timeMs / 1000 / 60);\\n  const seconds = Math.floor((timeMs - minutes * 1000 * 60) / 1000);\\n  return (minutes > 0 ? `${minutes}m ` : '') + `${seconds}s`;\\n}\\n\",\"filename\":\"/utils/format.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"dd2d0eb43ca59797e77bf00ba45e08b68ba6ffdc527cb7ad481c7a58a5204de4\",\"moduleSequenceNumber\":319404,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** Utils for hacking servers. */\\nimport { HOME_SERVER_NAME, PURCHASED_SERVER_PREFIX } from '/utils/servers.js';\\n\\nexport const GROW_SCRIPT = 'grow.js';\\nexport const WEAKEN_SCRIPT = 'weaken.js';\\nexport const HACK_SCRIPT = 'hack.js';\\n\\n/**\\n * Returns whether a server is hackable.\\n *\\n * Note that we are using {@link PURCHASED_SERVER_PREFIX} instead of getting the\\n * purchased servers list here in order to save on 2.25GB of RAM. This requires\\n * that all purchased servers have the same prefix.\\n *\\n * @param {import('../index').NS } ns\\n * @param {string} serverName\\n * @returns {boolean} true if the server is hackable, false if otherwise\\n */\\nexport function isHackable(ns, serverName) {\\n  return (\\n    serverName !== HOME_SERVER_NAME &&\\n    !serverName.startsWith(PURCHASED_SERVER_PREFIX) &&\\n    ns.getServerMaxMoney(serverName) > 0 &&\\n    ns.hasRootAccess(serverName) &&\\n    ns.getServerRequiredHackingLevel(serverName) <= ns.getHackingLevel()\\n  );\\n}\\n\\n/**\\n * A heuristic that determines how hackable a server is.\\n *\\n * @param {import('../index').NS } ns\\n * @param {string} serverName\\n * @returns {number} higher number means better to hack\\n */\\nexport function getHackingHeuristic(ns, serverName) {\\n  return (\\n    (ns.hackAnalyzeChance(serverName) *\\n      ns.hackAnalyze(serverName) *\\n      ns.getServerMoneyAvailable(serverName)) /\\n    ns.getHackTime(serverName)\\n  );\\n}\\n\",\"filename\":\"/utils/hacking.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.05,\"server\":\"home\",\"_hash\":\"67385409a4b0a428c78c825799e9ebacd013504abea1dd5ed6ae27ec673d841f\",\"moduleSequenceNumber\":319405,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** Miscellaneous utils that don't fit anywhere else. */\\n\\nimport { getStockWorth } from '/utils/stock.js';\\nimport { HOME_SERVER_NAME } from '/utils/servers.js';\\n\\nexport const DEFAULT_PORT = 1337;\\nexport const LOCALHOST_PREFIX = 'http://localhost';\\n\\n/**\\n * Sorts an array given a function to call on each item of the array.\\n *\\n * @param {any[]} array\\n * @param {} fn\\n * @param {boolean} [reverse=false]\\n */\\nexport function sort(array, fn, reverse) {\\n  array.sort((a, b) => {\\n    const first = fn(reverse ? b : a);\\n    const second = fn(reverse ? a : b);\\n    if (typeof first === 'string') return first.localeCompare(second);\\n    return first - second;\\n  });\\n}\\n\\n/**\\n * This function allows us to reserve a certain amount of money so we don't end\\n * up spending all our money buying things.\\n *\\n * @param {import('../index').NS} ns\\n * @returns {number} money that we want to spend purchasing things\\n */\\nexport function getMoneyToSpend(ns) {\\n  return ns.getServerMoneyAvailable(HOME_SERVER_NAME) / 2;\\n}\\n\\n/**\\n * @param {import ('../index').NS} ns\\n * @returns {number} net worth including cash on hand and stocks\\n */\\nexport function getNetWorth(ns) {\\n  return (\\n    ns.getServerMoneyAvailable(HOME_SERVER_NAME) +\\n    ns.stock\\n      .getSymbols()\\n      .map(symbol => getStockWorth(ns, symbol))\\n      .reduce((a, b) => a + b)\\n  );\\n}\\n\",\"filename\":\"/utils/misc.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///a6fdad3e-cbfd-48f7-95e8-e667a743adc9\"},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///ee932550-e5cb-49f2-946d-d8811d6ec59e\"}],\"dependents\":[],\"ramUsage\":7.7,\"server\":\"home\",\"_hash\":\"a71eedebfa90df311ceefaf82c6ce1d055029652c90e0fe55f02aaa7e4ea25b3\",\"moduleSequenceNumber\":319406,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getBidPrice\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** Utils for servers. */\\n\\nexport const HOME_SERVER_NAME = 'home';\\nexport const PURCHASED_SERVER_PREFIX = 'lauren';\\n\\n/**\\n * Retrieves all servers including personal servers and {@link HOME_SERVER_NAME}.\\n *\\n * @example getAllServers(ns)\\n * @param {import('../index').NS } ns\\n * @param {string} [root] name of server to start getting server names from\\n * @param {string} [parent] name of parent of the root server (where we came\\n *                          from)\\n * @returns {string[]} names of all servers including {@link HOME_SERVER_NAME}\\n */\\nexport function getAllServerNames(ns, root, parent) {\\n  const children = ns.scan(root).filter(child => child !== parent);\\n  const servers = [...children];\\n  for (const child of children) {\\n    servers.push(...getAllServerNames(ns, child, root));\\n  }\\n  return [...new Set(servers)];\\n}\\n\\n/**\\n * Gets the connection path to a server.\\n *\\n * @example getPath(ns, 'silver-helix')\\n * @param {import('../index').NS} ns\\n * @param {string} server server to get path to\\n * @param {string} [root] name of server to start getting server names from\\n * @param {string} [parent] name of parent of the root server (where we came\\n *                          from)\\n * @returns {string[]} connection to server where the last item is the name of\\n *                     the server to get the path to (e.g. if the server is\\n *                     silver-helix, then the path is\\n *                     [\\\"foodnstuff\\\",\\\"zer0\\\",\\\"silver-helix\\\"])\\n */\\nexport function getPath(ns, server, root, parent) {\\n  if (parent === undefined) parent = 'home';\\n  const children = ns.scan(root).filter(child => child !== parent);\\n  if (children.includes(server)) return [server];\\n  for (const child of children) {\\n    const path = getPath(ns, server, child, root);\\n    if (path.length > 0) return [child, ...path];\\n  }\\n  return [];\\n}\\n\\nexport async function main(ns) {\\n  ns.tprint(getPath(ns, 'silver-helix'));\\n}\\n\\n/**\\n * @param {import('../index').NS} ns\\n * @param {string} serverName\\n * @returns {number} GB of free RAM\\n */\\nexport function getFreeRam(ns, serverName) {\\n  if (!ns.hasRootAccess(serverName)) return 0;\\n  return ns.getServerMaxRam(serverName) - ns.getServerUsedRam(serverName);\\n}\\n\",\"filename\":\"/utils/servers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"_hash\":\"5603a4f076bf668e39a9034a9b798647098b43f88cb67cc832bc04883a931d18\",\"moduleSequenceNumber\":319409,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const SCRIPTS_TO_RUN = [\\n  'sync.js',\\n  'manage-hacking.js',\\n  'manage-hacknet.js',\\n  'manage-life.js',\\n  'manage-programs.js',\\n  'manage-servers.js',\\n  'manage-stocks.js',\\n];\\n\\n/**\\n * Script that starts up all managing scripts.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport const main = ns => SCRIPTS_TO_RUN.forEach(script => ns.run(script, 1));\\n\",\"filename\":\"startup.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"startup.js\",\"url\":\"blob:file:///8b8e67c6-38fb-4b34-bd5a-35d312137ae3\",\"moduleSequenceNumber\":319164}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"_hash\":\"f618d19def433b5f4dcaf46df1a7c615406da84ef4d0238170aa1517a75fdfc6\",\"moduleSequenceNumber\":319387,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import {\\n  GROW_SCRIPT,\\n  WEAKEN_SCRIPT,\\n  HACK_SCRIPT,\\n  getHackingHeuristic,\\n  isHackable,\\n} from '/utils/hacking.js';\\nimport { HOME_SERVER_NAME, getAllServerNames } from '/utils/servers.js';\\nimport { sort } from '/utils/misc.js';\\nimport { formatMoney, formatPercent } from '/utils/format.js';\\nimport {\\n  MANAGE_HACKING_TO_MANAGE_STOCKS_PORT,\\n  MANAGE_SERVERS_TO_MANAGE_HACKING_PORT,\\n  NULL_PORT_DATA,\\n} from '/utils/ports.js';\\n\\nconst HACKING_SCRIPTS = [GROW_SCRIPT, WEAKEN_SCRIPT, HACK_SCRIPT];\\nconst MIN_HACK_CHANCE = 0.6;\\nconst MIN_AVAILABLE_MONEY = 5000000;\\n\\nlet homeReservedRam;\\n\\n/**\\n * Manages hacking servers.\\n *\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  homeReservedRam = ns.args[0];\\n  ns.disableLog('ALL');\\n\\n  let allServerNames = getAllServerNames(ns);\\n\\n  while (true) {\\n    // Update all server names based on servers that we've added or deleted from\\n    // the manage-servers.js script.\\n    const manageServersMessage = ns.readPort(\\n      MANAGE_SERVERS_TO_MANAGE_HACKING_PORT\\n    );\\n    if (manageServersMessage !== NULL_PORT_DATA) {\\n      const response = JSON.parse(manageServersMessage);\\n      if (response.add && !allServerNames.includes(response.add)) {\\n        allServerNames.push(response.add);\\n      }\\n      if (response.remove && allServerNames.includes(response.remove)) {\\n        allServerNames = allServerNames.filter(\\n          serverName => serverName !== response.remove\\n        );\\n      }\\n    }\\n\\n    // Get all servers where we have root access including home.\\n    const rootAccessServerNames = allServerNames.filter(serverName =>\\n      gainRootAccess(ns, serverName)\\n    );\\n\\n    // Copy scripts to every root access server.\\n    for await (const serverName of rootAccessServerNames) {\\n      if (serverName === HOME_SERVER_NAME) continue;\\n      await copyScriptsToServer(ns, serverName);\\n    }\\n\\n    // Check if we have any free RAM to do anything.\\n    if (!hasFreeRam(ns, rootAccessServerNames)) continue;\\n\\n    // Get hackable servers sorted by hacking heuristic.\\n    const hackableServerNames = rootAccessServerNames.filter(serverName =>\\n      isHackable(ns, serverName)\\n    );\\n    sort(\\n      hackableServerNames,\\n      serverName => getHackingHeuristic(ns, serverName),\\n      true\\n    );\\n\\n    // Grow, weaken, and hack.\\n    for (const targetServerName of hackableServerNames) {\\n      // Check if we have any free RAM to do anything.\\n      if (!hasFreeRam(ns, rootAccessServerNames)) break;\\n\\n      // Tell the manage-stock script to sell if we are close to maxing out the\\n      // server's money.\\n      const availableMoney = ns.getServerMoneyAvailable(targetServerName);\\n      const maxMoney = ns.getServerMaxMoney(targetServerName);\\n      if (availableMoney / maxMoney > 0.99) {\\n        await ns.writePort(\\n          MANAGE_HACKING_TO_MANAGE_STOCKS_PORT,\\n          JSON.stringify({ sell: targetServerName })\\n        );\\n      }\\n\\n      // Check that we are not over-growing the server.\\n      if (availableMoney === maxMoney) {\\n        const killedServerCount = killScript(\\n          ns,\\n          rootAccessServerNames,\\n          GROW_SCRIPT,\\n          targetServerName,\\n          1\\n        );\\n        ns.print(\\n          `${targetServerName} reached max money; killed ` +\\n            `${killedServerCount} servers that were still trying to grow`\\n        );\\n      }\\n\\n      // Grow the server until MIN_AVAILABLE_MONEY.\\n      if (availableMoney < MIN_AVAILABLE_MONEY) {\\n        ns.print(\\n          `\\\\nattempting to grow ${targetServerName} from ${formatMoney(\\n            availableMoney\\n          )} to ${formatMoney(MIN_AVAILABLE_MONEY)}`\\n        );\\n        grow(ns, targetServerName, rootAccessServerNames, MIN_AVAILABLE_MONEY);\\n      }\\n\\n      // Check that we are not over-weakening the server.\\n      const hackChance = ns.hackAnalyzeChance(targetServerName);\\n      const securityLevel = ns.getServerSecurityLevel(targetServerName);\\n      const minSecurityLevel = ns.getServerMinSecurityLevel(targetServerName);\\n      if (hackChance === 1 || securityLevel === minSecurityLevel) {\\n        const killedServerCount = killScript(\\n          ns,\\n          rootAccessServerNames,\\n          WEAKEN_SCRIPT,\\n          targetServerName,\\n          1\\n        );\\n        ns.print(\\n          `${targetServerName} has reached min security; killed ` +\\n            `${killedServerCount} servers that were still trying to weaken`\\n        );\\n      }\\n\\n      // Weaken the server until MIN_HACK_CHANCE or until lowest security level.\\n      if (hackChance < MIN_HACK_CHANCE && securityLevel > minSecurityLevel) {\\n        ns.print(\\n          `\\\\nattempting to weaken ${targetServerName} from ${formatPercent(\\n            hackChance\\n          )} to ${formatPercent(MIN_HACK_CHANCE)} hack chance`\\n        );\\n        weaken(ns, targetServerName, rootAccessServerNames);\\n      }\\n\\n      // Tell the manage-stock script to buy if we are close to hacking all of\\n      // the target server's money.\\n      if (availableMoney / maxMoney < 0.01) {\\n        await ns.writePort(\\n          MANAGE_HACKING_TO_MANAGE_STOCKS_PORT,\\n          JSON.stringify({ buy: targetServerName })\\n        );\\n      }\\n\\n      // Check that we are not over-hacking the server.\\n      if (availableMoney === 0) {\\n        const killedServerCount = killScript(\\n          ns,\\n          rootAccessServerNames,\\n          HACK_SCRIPT,\\n          targetServerName,\\n          1\\n        );\\n        ns.print(\\n          `${targetServerName} has reached $0; killed ` +\\n            `${killedServerCount} servers that were still trying to hack`\\n        );\\n      }\\n\\n      // Hack the server if server has MIN_AVAILABLE_MONEY and MIN_HACK_CHANCE.\\n      if (\\n        availableMoney >= MIN_AVAILABLE_MONEY &&\\n        hackChance >= MIN_HACK_CHANCE\\n      ) {\\n        ns.print(\\n          `\\\\nattempting to hack ${targetServerName} with ${formatMoney(\\n            availableMoney\\n          )} and ${formatPercent(hackChance)} hack chance`\\n        );\\n        hack(ns, targetServerName, rootAccessServerNames);\\n      }\\n    }\\n\\n    // If we have any extra free RAM, grow and weaken hackable servers to the\\n    // max money and min security level.\\n    for (const targetServerName of hackableServerNames) {\\n      // Check if we have any free RAM to do anything.\\n      if (!hasFreeRam(ns, rootAccessServerNames)) break;\\n\\n      // Grow the server until max money.\\n      const availableMoney = ns.getServerMoneyAvailable(targetServerName);\\n      const maxMoney = ns.getServerMaxMoney(targetServerName);\\n      if (availableMoney < maxMoney) {\\n        ns.print(\\n          `\\\\nattempting to grow ${targetServerName} from ${formatMoney(\\n            availableMoney\\n          )} to ${formatMoney(maxMoney)}`\\n        );\\n        grow(ns, targetServerName, rootAccessServerNames);\\n      }\\n\\n      // Weaken the server until min security level.\\n      const securityLevel = ns.getServerSecurityLevel(targetServerName);\\n      const minSecurityLevel = ns.getServerMinSecurityLevel(targetServerName);\\n      if (securityLevel > minSecurityLevel) {\\n        ns.print(\\n          `\\\\nattempting to weaken ${targetServerName} from ${securityLevel.toFixed(\\n            2\\n          )} to ${minSecurityLevel} security level`\\n        );\\n        weaken(ns, targetServerName, rootAccessServerNames);\\n      }\\n\\n      // Hack server that has >0% hack chance until no money.\\n      const hackChance = ns.hackAnalyzeChance(targetServerName);\\n      if (availableMoney > 0 && hackChance > 0) {\\n        ns.print(\\n          `\\\\nattempting to hack ${targetServerName} with ${formatMoney(\\n            availableMoney\\n          )} and ${formatPercent(hackChance)} hack chance`\\n        );\\n        hack(ns, targetServerName, rootAccessServerNames);\\n      }\\n    }\\n\\n    await ns.sleep(3000); // Wait for 3 seconds.\\n  }\\n}\\n\\n/**\\n * Open all the ports that we can open and attempt to gain root access to a\\n * given server.\\n *\\n * @param {import('index').NS } ns\\n * @param {string} serverName\\n * @returns {boolean} true if we now have root access and false if otherwise\\n */\\nfunction gainRootAccess(ns, serverName) {\\n  const server = ns.getServer(serverName);\\n\\n  // Attempt to open all ports even if we already have root access.\\n  if (ns.fileExists('BruteSSH.exe') && !server.sshPortOpen) {\\n    ns.brutessh(serverName);\\n  }\\n  if (ns.fileExists('FTPCrack.exe') && !server.ftpPortOpen) {\\n    ns.ftpcrack(serverName);\\n  }\\n  if (ns.fileExists('relaySMTP.exe') && !server.smtpPortOpen) {\\n    ns.relaysmtp(serverName);\\n  }\\n  if (ns.fileExists('HTTPWorm.exe') && !server.httpPortOpen) {\\n    ns.httpworm(serverName);\\n  }\\n  if (ns.fileExists('SQLInject.exe') && !server.sqlPortOpen) {\\n    ns.sqlinject(serverName);\\n  }\\n\\n  if (ns.hasRootAccess(serverName)) return true;\\n  try {\\n    ns.nuke(serverName);\\n  } catch (_) {\\n    return false;\\n  }\\n}\\n\\n/**\\n * Copies grow, hack, and weaken scripts to a given server and deletes any other\\n * js scripts from that server.\\n *\\n * @param {import('index').NS} ns\\n * @param {string} serverName\\n */\\nasync function copyScriptsToServer(ns, serverName) {\\n  // Copy scripts over.\\n  await ns.scp(HACKING_SCRIPTS, HOME_SERVER_NAME, serverName);\\n\\n  // Delete any other scripts on the server.\\n  const otherScripts = ns\\n    .ls(serverName)\\n    .filter(\\n      script => script.endsWith('.js') && !HACKING_SCRIPTS.includes(script)\\n    );\\n  for (const script of otherScripts) ns.rm(script, serverName);\\n}\\n\\n/**\\n * Get amount of free RAM from list of servers or a single server.\\n *\\n * @param {import('index').NS} ns\\n * @param {(string[]|string)} serverNames\\n * @returns {number} GB of free RAM\\n */\\nfunction getFreeRam(ns, serverNames) {\\n  if (typeof serverNames === 'string') {\\n    // Return free RAM for a single server.\\n    const serverName = serverNames;\\n    const freeRam =\\n      ns.getServerMaxRam(serverName) - ns.getServerUsedRam(serverName);\\n    if (serverName !== HOME_SERVER_NAME) return freeRam;\\n\\n    if (homeReservedRam !== undefined)\\n      return Math.max(freeRam - homeReservedRam, 0);\\n\\n    // If home server, make sure to reserve RAM to run other scripts.\\n    const scripts = ns\\n      .ls(HOME_SERVER_NAME)\\n      .filter(\\n        fileName => fileName.endsWith('.js') && !fileName.startsWith('/')\\n      );\\n    const oneTimeUseScripts = scripts.filter(\\n      script => script.startsWith('find-') || script.startsWith('get-')\\n    );\\n    const oneTimeUseRam = Math.max(\\n      ...scripts.map(script => ns.getScriptRam(script))\\n    );\\n    let reservedRam =\\n      scripts\\n        .filter(script => !oneTimeUseScripts.includes(script))\\n        .filter(fileName => !ns.scriptRunning(fileName, HOME_SERVER_NAME))\\n        .map(script => ns.getScriptRam(script))\\n        .reduce((a, b) => a + b) + oneTimeUseRam;\\n    return Math.max(freeRam - reservedRam, 0);\\n  }\\n  return serverNames\\n    .map(serverName => getFreeRam(ns, serverName))\\n    .reduce((a, b) => a + b);\\n}\\n\\n/**\\n * Get minimum amount of RAM to execute one of grow, weaken, or hack scripts.\\n *\\n * @param {import('index').NS} ns\\n * @returns {number} GB of RAM\\n */\\nfunction getMinRam(ns) {\\n  return Math.min(\\n    ...HACKING_SCRIPTS.map(script => ns.getScriptRam(script, HOME_SERVER_NAME))\\n  );\\n}\\n\\n/**\\n * Checks if we have any free RAM to do anything.\\n *\\n * @param {import('index').NS} ns\\n * @param {string[]} rootAccessServerNames\\n * @returns {boolean} true if we have free RAM\\n */\\nfunction hasFreeRam(ns, rootAccessServerNames) {\\n  const freeRam = getFreeRam(ns, rootAccessServerNames);\\n  if (getFreeRam(ns, rootAccessServerNames) < getMinRam(ns)) {\\n    ns.print(\\n      `all servers are currently busy (only ${freeRam} GB RAM available)`\\n    );\\n    return false;\\n  }\\n  return true;\\n}\\n\\n/**\\n * Grow until min money.\\n *\\n * @param {import('index').NS} ns\\n * @param {number} [minMoneyAvailable] if not set, then will grow until max\\n * \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t money\\n */\\nfunction grow(ns, targetServerName, rootAccessServerNames, minMoneyAvailable) {\\n  const maxMoney = ns.getServerMaxMoney(targetServerName);\\n  if (minMoneyAvailable === undefined) minMoneyAvailable = maxMoney;\\n  const availableMoney = ns.getServerMoneyAvailable(targetServerName);\\n\\n  // Get number of threads needed to get money to get to the min available money\\n  const growthAmount =\\n    availableMoney === 0 ? 2 : minMoneyAvailable / availableMoney;\\n  let estimatedThreadCount = Math.round(\\n    ns.growthAnalyze(targetServerName, growthAmount)\\n  );\\n  ns.print(\\n    `estimated ${estimatedThreadCount} threads to grow ${targetServerName} ${formatPercent(\\n      growthAmount\\n    )}`\\n  );\\n\\n  // Use only the estimated thread count to grow the target server.\\n  for (const serverName of rootAccessServerNames) {\\n    estimatedThreadCount -= runScript(\\n      ns,\\n      serverName,\\n      GROW_SCRIPT,\\n      estimatedThreadCount,\\n      targetServerName,\\n      1\\n    );\\n    if (estimatedThreadCount <= 0) return;\\n  }\\n}\\n\\n/**\\n * Weaken until min security level.\\n *\\n * @param {import('index').NS} ns\\n */\\nfunction weaken(ns, targetServerName, rootAccessServerNames) {\\n  const currentSecurityLevel = ns.getServerSecurityLevel(targetServerName);\\n  const minSecurityLevel = ns.getServerMinSecurityLevel(targetServerName);\\n\\n  // Get number of threads needed to get hack chance to get to minimum security\\n  // level.\\n  let estimatedThreadCount = 1;\\n  do {\\n    estimatedThreadCount++;\\n  } while (\\n    currentSecurityLevel - ns.weakenAnalyze(estimatedThreadCount) >\\n    minSecurityLevel\\n  );\\n  if (estimatedThreadCount === 0) return;\\n  ns.print(\\n    `estimated ${estimatedThreadCount} threads to weaken ` +\\n      `${targetServerName} from ${currentSecurityLevel} to ${minSecurityLevel}`\\n  );\\n\\n  // Use only the estimated thread count to weaken the target server.\\n  for (const serverName of rootAccessServerNames) {\\n    estimatedThreadCount -= runScript(\\n      ns,\\n      serverName,\\n      WEAKEN_SCRIPT,\\n      estimatedThreadCount,\\n      targetServerName,\\n      1\\n    );\\n    if (estimatedThreadCount <= 0) return;\\n  }\\n}\\n\\n/**\\n * @param {import('index').NS} ns\\n */\\nfunction hack(ns, targetServerName, rootAccessServerNames) {\\n  // Get number of threads needed to hack all the money from the server.\\n  let estimatedThreadCount = Math.round(\\n    ns.hackAnalyzeThreads(\\n      targetServerName,\\n      ns.getServerMoneyAvailable(targetServerName)\\n    )\\n  );\\n  ns.print(\\n    `estimated ${estimatedThreadCount} threads to hack ${targetServerName}`\\n  );\\n\\n  // Use only the estimated thread count to hack the target srver.\\n  for (const serverName of rootAccessServerNames) {\\n    estimatedThreadCount -= runScript(\\n      ns,\\n      serverName,\\n      HACK_SCRIPT,\\n      estimatedThreadCount,\\n      targetServerName,\\n      1\\n    );\\n    if (estimatedThreadCount <= 0) return;\\n  }\\n}\\n\\n/**\\n * @param {import('index').NS} ns\\n * @param {string} serverName\\n * @param {string} scriptName\\n * @param {number} threadCount\\n * @param  {...any} args\\n * @returns {number} number of threads that we were able to run the script at\\n */\\nfunction runScript(ns, serverName, scriptName, threadCount, ...args) {\\n  if (ns.isRunning(scriptName, serverName, ...args)) {\\n    const script = ns.getRunningScript(scriptName, serverName, ...args);\\n    ns.print(\\n      `already running ${scriptName} ${args} on ${serverName} with ` +\\n        `${script.threads} threads`\\n    );\\n    return 0;\\n  }\\n\\n  const availableThreadCount = getAvailableThreadCount(\\n    ns,\\n    serverName,\\n    scriptName\\n  );\\n  const actualThreadCount =\\n    availableThreadCount > threadCount ? threadCount : availableThreadCount;\\n  if (actualThreadCount <= 0) return 0;\\n  const success = ns.exec(scriptName, serverName, actualThreadCount, ...args);\\n  if (success === 0) return 0;\\n  ns.print(\\n    `running ${scriptName} ${args} on ${serverName} with ${actualThreadCount} threads`\\n  );\\n  return actualThreadCount;\\n}\\n\\nfunction getAvailableThreadCount(ns, serverName, scriptName) {\\n  return Math.floor(getFreeRam(ns, serverName) / ns.getScriptRam(scriptName));\\n}\\n\\n/**\\n * @param {import('index').NS} ns\\n * @param {string[]} serverNames\\n * @param {string} scriptName\\n * @param  {...any} args\\n * @returns {number} number of servers that we killed\\n */\\nfunction killScript(ns, serverNames, scriptName, ...args) {\\n  let killedServerCount = 0;\\n  for (const serverName of serverNames) {\\n    if (\\n      ns.isRunning(scriptName, serverName, ...args) &&\\n      ns.kill(scriptName, serverName, ...args)\\n    ) {\\n      killedServerCount++;\\n    }\\n  }\\n  return killedServerCount;\\n}\\n\",\"filename\":\"manage-hacking.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/ports.js\",\"url\":\"blob:file:///66178739-69b4-46b4-b2f7-e955d181f32c\",\"moduleSequenceNumber\":319046},{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///d0157a27-0066-4e81-94c8-d679d193bb57\",\"moduleSequenceNumber\":319015},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319018},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":319035},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":319017},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319018},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319018},{\"filename\":\"/utils/hacking.js\",\"url\":\"blob:file:///fff5f2c6-2c61-44f0-a89b-c69215171a22\",\"moduleSequenceNumber\":319016},{\"filename\":\"manage-hacking.js\",\"url\":\"blob:file:///a1aa09ad-1554-4725-9cd6-e81e47eb080a\",\"moduleSequenceNumber\":319166}],\"dependents\":[],\"ramUsage\":15.6,\"server\":\"home\",\"_hash\":\"fd982411083b0f1094d603db5eca8c0db6764e7737d203c6fb19a1dd9b32a09c\",\"moduleSequenceNumber\":319184,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stanek.remove\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"weakenAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getRunningScript\",\"cost\":0.3},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Array Jumping Game\\n *\\n * Each element in the array represents your MAXIMUM jump length at that\\n * position. This means that if you are at position i and your maximum jump\\n * length is n, you can jump to any position from i to i+n.\\n *\\n * Assuming you are initially positioned at the start of the array, determine\\n * whether you are able to reach the last index exactly.\\n *\\n * Your answer should be submitted as 1 or 0, representing true and false\\n * respectively\\n *\\n * @param {number[]} input\\n * @returns {number} 1 if can reach the end, 0 if not\\n */\\nexport function arrayJumpingGame(input) {\\n  return _getPathToLastIndex(input).length === 0 ? 0 : 1;\\n}\\n\\n/**\\n * @param {number[]} maxJumps List of numbers where each number represents max jump.\\n * @param {number} [currentIndex=0]\\n * @returns {string[]} The path to the last index where each member of the array is\\n * \\t\\t\\t\\t\\t\\t\\t\\t\\tthe jump. Empty if no path.\\n */\\nfunction _getPathToLastIndex(maxJumps, currentIndex) {\\n  currentIndex = currentIndex || 0;\\n  if (currentIndex === maxJumps.length - 1) return ['end'];\\n\\n  const maxJump = maxJumps[currentIndex];\\n  for (let n = 1; n <= maxJump; n++) {\\n    const path = _getPathToLastIndex(maxJumps, currentIndex + n);\\n    if (path.length > 0)\\n      return [\\n        `jump from ${currentIndex} to ${\\n          currentIndex + n\\n        } (max jump is ${maxJump})`,\\n        ...path,\\n      ];\\n  }\\n\\n  return [];\\n}\\n\",\"filename\":\"/contracts/array-jumping-game.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"2feadad6c9c3bef4df0b60380d6f7e2136c7cd17813055df6906cb2a3bdbd2d6\",\"moduleSequenceNumber\":319391,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const OPERATORS = ['+', '-', '*'];\\n\\n/**\\n * Find All Valid Math Expressions\\n *\\n * Return all possible ways you can add the +, -, and * operators to the string\\n * such that it evaluates to the target number.\\n *\\n * @param {any[]} input\\n * @returns {string[]}\\n */\\nexport function findValidMathExpressions(input) {\\n  /** @type {string} */ const digits = input[0];\\n  /** @type {number} */ const targetNumber = input[1];\\n\\n  /**\\n   * Index is the index of the digit in the digits string.\\n   *\\n   * @type {string[][]}\\n   */\\n  const combinations = Array(digits.length);\\n  for (let i = digits.length - 1; i >= 0; i--) {\\n    const digit = digits.substring(i, i + 1);\\n\\n    // Fill in the last slot of the combinations array.\\n    if (i === digits.length - 1) {\\n      combinations[i] = [digit];\\n      continue;\\n    }\\n\\n    // Fill in the other combinations.\\n    combinations[i] = [];\\n    for (const expression of combinations[i + 1]) {\\n      combinations[i].push(digit + expression);\\n      if (\\n        expression.startsWith('0') &&\\n        expression.split(/[\\\\+\\\\-\\\\*]/g)[0] !== '0'\\n      ) {\\n        continue;\\n      }\\n      OPERATORS.forEach(operator =>\\n        combinations[i].push(digit + operator + expression)\\n      );\\n    }\\n  }\\n\\n  // Get valid expressions.\\n  return combinations[0].filter(\\n    expression => evaluate(expression) === targetNumber\\n  );\\n}\\n\\n/**\\n * @param {string} expression\\n * @returns {number}\\n */\\nfunction evaluate(expression) {\\n  // Split + and - into an array of addends.\\n  const addParts = expression.split('+');\\n  const addends = [];\\n  for (const addPart of addParts) {\\n    if (addPart.includes('-')) {\\n      const subtractParts = addPart.split('-');\\n      addends.push(subtractParts[0]);\\n      for (let i = 1; i < subtractParts.length; i++) {\\n        addends.push('-' + subtractParts[i]);\\n      }\\n    } else {\\n      addends.push(addPart);\\n    }\\n  }\\n\\n  // Resolve multiplications within each addend and sum.\\n  let sum = 0;\\n  for (const addend of addends) {\\n    if (addend.includes('*')) {\\n      const factors = addend.split('*');\\n      if (factors.includes('0')) continue;\\n      const product = factors\\n        .filter(factor => factor !== '1')\\n        .map(factor => parseInt(factor))\\n        .reduce((a, b) => a * b);\\n      sum += product;\\n    } else {\\n      sum += parseInt(addend);\\n    }\\n  }\\n  return sum;\\n}\\n\",\"filename\":\"/contracts/find-valid-math-solutions.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"e60a956a9f1f2c8e855494c69fbca65956aefe1e41d241f04fb2a1641c2d32ed\",\"moduleSequenceNumber\":319393,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Generate IP Addresses\\n *\\n * Given the following string containing only digits, return an array with all\\n * possible valid IP address combinations that can be created from the input.\\n *\\n * Note that an octet cannot begin with a '0' unless the number itself is\\n * actually 0. For example, '192.168.010.1' is not a valid IP.\\n *\\n * @param {string} input\\n * @returns {string[]}\\n */\\nexport function generateIpAddresses(input) {\\n  return _getAddresses(input).filter(\\n    address => address.split('.').length === 4\\n  );\\n}\\n\\n/**\\n * @param {string} str\\n * @param {number} [depth]\\n * @returns {string[]}\\n */\\nfunction _getAddresses(str, depth) {\\n  if (depth === undefined) depth = 0;\\n  if (depth === 4) return [];\\n  const beginningSections = _getBeginningSections(str);\\n  const addresses = [];\\n  for (const beginningSection of beginningSections) {\\n    const restOfStr = str.substring(beginningSection.toString().length);\\n    if (restOfStr === '') {\\n      addresses.push(...beginningSections);\\n    } else {\\n      const addressVariants = _getAddresses(restOfStr, depth + 1);\\n      for (const variant of addressVariants) {\\n        if (variant.replaceAll('.', '') === restOfStr) {\\n          addresses.push(beginningSection + '.' + variant);\\n        }\\n      }\\n    }\\n  }\\n  return [...new Set(addresses)];\\n}\\n\\n/**\\n * A section is the first 1-3 characters of the {@link str} where there cannot\\n * be a leading zero nor can there be a leading zero after the section. The\\n * section must also be a number between 0 and 255.\\n *\\n * @param {string} str\\n */\\nfunction _getBeginningSections(str) {\\n  if (str.length === 0) return [];\\n  return [1, 2, 3]\\n    .filter(length => length === 1 || str[0] !== '0') // cannot be a leading zero after the section\\n    .map(length => parseInt(str.substring(0, length)))\\n    .filter(section => section >= 0 && section <= 255)\\n    .map(section => section.toString());\\n}\\n\",\"filename\":\"/contracts/generate-ip-addresses.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"0f8ead77c485ea6b40daebdc532c4a27d1d48eaa1fd2e51e4567dbc41a48de72\",\"moduleSequenceNumber\":319394,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Total Ways to Sum\\n *\\n * It is possible write four as a sum in exactly four different ways:\\n *\\n *  3 + 1\\n *  2 + 2\\n *  2 + 1 + 1\\n *  1 + 1 + 1 + 1\\n *\\n * How many different ways can the input number be written as a sum of at least\\n * two positive integers?\\n *\\n * @param {number} input\\n * @returns {number} number of ways to sum\\n */\\nexport function totalWaysToSum(input) {\\n  const waysToSum = new Array(input + 1).fill(0);\\n  waysToSum[0] = 1;\\n\\n  for (let i = 1; i < input; i++) {\\n    for (let j = i; j < input + 1; j++) {\\n      waysToSum[j] = waysToSum[j] + waysToSum[j - i];\\n    }\\n  }\\n\\n  return waysToSum[input];\\n}\\n\",\"filename\":\"/contracts/total-ways-to-sum.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"8a68acbe2492a05c86e6546f54c823867bf6cff25d4d2e86d552aff1098d18db\",\"moduleSequenceNumber\":319402,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Find Largest Prime Factor\\n *\\n * A prime factor is a factor that is a prime number. What is the largest prime\\n * factor of the input?\\n *\\n * @param {number} input\\n * @returns {number} largest prime factor\\n */\\nexport function findLargestPrimeFactor(input) {\\n  /** @type {Object.<number, boolean>} */\\n  const cachedPrimeNumberMap = {};\\n\\n  const primes = [];\\n  for (let i = 1; i <= input; i++) {\\n    if (input % i !== 0) continue;\\n    if (_isPrime(i, cachedPrimeNumberMap)) primes.push(i);\\n  }\\n  return primes.slice(-1)[0];\\n}\\n\\n/**\\n * Checks if a number is prime.\\n *\\n * @param {number} number\\n * @param {Object.<number, boolean>} cachedPrimeNumberMap\\n */\\nfunction _isPrime(number, cachedPrimeNumberMap) {\\n  if (number in cachedPrimeNumberMap) return cachedPrimeNumberMap[number];\\n  for (let i = 2; i < number; i++) {\\n    if (number % i === 0) {\\n      cachedPrimeNumberMap[number] = false;\\n      return false;\\n    }\\n  }\\n  cachedPrimeNumberMap[number] = true;\\n  return true;\\n}\\n\",\"filename\":\"/contracts/find-largest-prime-factor.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"adaa0db1e11a934a70dc2e8e62ddd1dafa5485848c0fc539ce14dfcc5307e512\",\"moduleSequenceNumber\":319392,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Algorithmic Stock Trader I\\n *\\n * You are given the following array of stock prices (which are numbers) where\\n * the i-th element represents the stock price on day i:\\n *\\n * 112,61,181,149,39,17,143,192,196,120,151\\n *\\n * Determine the maximum possible profit you can earn using at most one\\n * transaction (i.e. you can only buy and sell the stock once). If no profit can\\n * be made then the answer should be 0. Note that you have to buy the stock\\n * before you can sell it\\n *\\n * @param {string} input\\n * @returns {number}\\n */\\nexport function algorithmicStockTraderI(input) {\\n  let maxProfit = 0;\\n  for (let day = 0; day < input.length - 1; day++) {\\n    const profit = Math.max(...input.slice(day + 1)) - input[day];\\n    if (profit > maxProfit) maxProfit = profit;\\n  }\\n  return maxProfit;\\n}\\n\\nconsole.log(\\n  algorithmicStockTraderI([112, 61, 181, 149, 39, 17, 143, 192, 196, 120, 151])\\n);\\n\",\"filename\":\"/contracts/algorithmic-stock-trader-i.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"e2816fc708994620ac4a831daf31fe7c7e085d179d3b45f7fdbd3ec249c19d5f\",\"moduleSequenceNumber\":319026,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Algorithmic Stock Trader II\\n *\\n * You are given the following array of stock prices (which are numbers) where\\n * the i-th element represents the stock price on day i.\\n *\\n * Determine the maximum possible profit you can earn using as many transactions\\n * as you'd like. A transaction is defined as buying and then selling one share\\n * of the stock. Note that you cannot engage in multiple transactions at once.\\n * In other words, you must sell the stock before you buy it again.\\n *\\n * If no profit can be made, then the answer should be 0\\n *\\n * @param {int[]} stockPrices\\n * @returns {number}\\n */\\nexport function algorithmicStockTraderII(stockPrices) {\\n  let profit = 0;\\n\\n  let day = -1;\\n  while (day < stockPrices.length) {\\n    day++;\\n    if (stockPrices[day + 1] > stockPrices[day]) {\\n      let minPrice = stockPrices[day];\\n      day++;\\n\\n      while (\\n        day < stockPrices.length &&\\n        stockPrices[day + 1] > stockPrices[day]\\n      ) {\\n        day++;\\n      }\\n      let maxPrice = stockPrices[day];\\n      profit += maxPrice - minPrice;\\n    }\\n  }\\n\\n  return profit;\\n}\\n\",\"filename\":\"/contracts/algorithmic-stock-trader-ii.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"408d4f1e8f53592e4245048ecddbcdf5cbfa68ccea591735e28c2a10fca59457\",\"moduleSequenceNumber\":319027,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"404: Not Found\",\"filename\":\"/contracts/algorithmic-stock-trader-iii.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.1,\"server\":\"home\",\"_hash\":\"d5558cd419c8d46bdc958064cb97f963d1ea793866414c025906ec15033512ed\",\"moduleSequenceNumber\":319028}},{\"ctor\":\"Script\",\"data\":{\"code\":\"404: Not Found\",\"filename\":\"/contracts/unique-paths-in-a-grid-i.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"d5558cd419c8d46bdc958064cb97f963d1ea793866414c025906ec15033512ed\",\"moduleSequenceNumber\":319029}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Subarray with Maximum Sum\\n *\\n * Given the following integer array, find the contiguous subarray (containing\\n * at least one number) which has the largest sum and return that sum. 'Sum'\\n * refers to the sum of all the numbers in the subarray.\\n *\\n * @param {number[]} input\\n * @returns {number}\\n */\\nexport function subarrayWithMaximumSum(input) {\\n  let maxSum = input[0];\\n  for (let startIndex = 0; startIndex < input.length; startIndex++) {\\n    for (let endIndex = startIndex + 1; endIndex <= input.length; endIndex++) {\\n      const subarray = input.slice(startIndex, endIndex);\\n      const sum = subarray.reduce((a, b) => a + b);\\n      maxSum = Math.max(maxSum, sum);\\n    }\\n  }\\n  return maxSum;\\n}\\n\",\"filename\":\"/contracts/subarray-with-maximum-sum.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"5cdf8f48468f4da70baeb04591bb73878aae85e5d0541f20b982457c69806d53\",\"moduleSequenceNumber\":319399,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Sanitize Parentheses in Expression\\n *\\n * Remove the minimum number of invalid parentheses in order to validate the\\n * string. If there are multiple minimal ways to validate the string, provide\\n * all of the possible results. The answer should be provided as an array of\\n * strings. If it is impossible to validate the string the result should be an\\n * array with only an empty string.\\n *\\n * IMPORTANT: The string may contain letters, not just parentheses.\\n *\\n * @param {string} input\\n * @returns {string[]}\\n */\\nexport function sanitizeParenthesesInExpression(input) {\\n  if (_isValid(input)) return [input];\\n\\n  let parenthesesToRemove = 1;\\n  let variants = [];\\n  while (parenthesesToRemove <= input.length) {\\n    variants = [...new Set(_getVariants(input, parenthesesToRemove))].filter(\\n      _isValid\\n    );\\n    if (variants.length > 0) break;\\n    parenthesesToRemove++;\\n  }\\n  return variants;\\n}\\n\\n/**\\n * @param {string} str\\n * @param {number} parenthesesToRemove\\n * @returns {string[]}\\n */\\nfunction _getVariants(str, parenthesesToRemove) {\\n  if (parenthesesToRemove === 0) return [str];\\n  const variants = [];\\n  for (let i = 0; i < str.length; i++) {\\n    if (str.charAt(i) !== '(' && str.charAt(i) !== ')') continue;\\n    const variant = str.substring(0, i) + str.substring(i + 1, str.length);\\n    if (parenthesesToRemove === 1) {\\n      variants.push(variant);\\n    } else {\\n      const furtherVariants = _getVariants(variant, parenthesesToRemove - 1);\\n      for (const furtherVariant of furtherVariants) {\\n        if (variants.includes(furtherVariant)) continue;\\n        variants.push(furtherVariant);\\n      }\\n    }\\n  }\\n  return variants;\\n}\\n\\nfunction _isValid(str) {\\n  if (str === '') return true;\\n  const stack = [];\\n  const characters = str.split('');\\n  for (const character of characters) {\\n    if (character === '(') stack.push(character);\\n    else if (character === ')' && stack.pop() !== '(') return false;\\n  }\\n  return stack.length === 0;\\n}\\n\",\"filename\":\"/contracts/sanitize-parentheses-in-expression.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"62149e986e689565cc9daaea888f5d6c8e3f0d01af3d0e963079f1ea60b4d6b7\",\"moduleSequenceNumber\":319397,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Unique Paths in a Grid II\\n *\\n * You are located in the top-left corner of a grid.\\n *\\n * You are trying reach the bottom-right corner of the grid, but you can only\\n * move down or right on each step. Furthermore, there are obstacles on the grid\\n * that you cannot move onto. These obstacles are denoted by '1', while empty\\n * spaces are denoted by 0.\\n *\\n * Determine how many unique paths there are from start to finish.\\n *\\n * NOTE: The data returned for this contract is an 2D array of numbers\\n * representing the grid.\\n *\\n * @param {int[][]} input\\n */\\nexport function uniquePathsInAGridII(input) {\\n  return new Set(getUniquePaths(input, 0, 0, '')).size;\\n}\\n\\n/**\\n * @param {int[][]} grid\\n * @param {int} startX\\n * @param {int} startY\\n * @returns {string[]} list of instructions (e.g. \\\"DDRR\\\")\\n */\\nexport function getUniquePaths(grid, startX, startY, instructionsThusFar) {\\n  if (startX === grid[0].length - 1 && startY === grid.length - 1) {\\n    return [instructionsThusFar];\\n  }\\n  const allInstructions = [];\\n  if (_canMoveRight(grid, startX, startY)) {\\n    allInstructions.push(\\n      ...getUniquePaths(grid, startX + 1, startY, instructionsThusFar + 'R')\\n    );\\n  }\\n  if (_canMoveDown(grid, startX, startY)) {\\n    allInstructions.push(\\n      ...getUniquePaths(grid, startX, startY + 1, instructionsThusFar + 'D')\\n    );\\n  }\\n  return allInstructions;\\n}\\n\\nfunction _canMoveRight(grid, x, y) {\\n  if (x + 1 === grid[0].length) return false;\\n  if (grid[y][x + 1] === 1) return false;\\n  return true;\\n}\\n\\nfunction _canMoveDown(grid, x, y) {\\n  if (y + 1 === grid.length) return false;\\n  if (grid[y + 1][x] === 1) return false;\\n  return true;\\n}\\n\",\"filename\":\"/contracts/unique-paths-in-a-grid-ii.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"46f788491f931079774091844bc994940b3a5e29a2c9dcd8b2ab13715a41cf4c\",\"moduleSequenceNumber\":319032,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { formatMoney, formatPercent } from '/utils/format.js';\\nimport { getStockWorth } from '/utils/stock.js';\\nimport { HOME_SERVER_NAME } from '/utils/servers.js';\\nimport { sort } from '/utils/misc.js';\\nimport { Alignment, printTable, RowColor } from '/utils/table.js';\\n\\nconst SOURCE_COLUMN_HEADER = 'Source';\\nconst MONEY_COLUMN_HEADER = 'Money';\\nconst MONEY_ABBR_COLUMN_HEADER = 'Money (Abbr.)';\\nconst PERCENT_NET_WORTH_COLUMN_HEADER = '% net worth';\\n\\n/**\\n * Prints out net worth along with breakdown on how much of net worth is in each\\n * stock and in cash.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport function main(ns) {\\n  let stocks = [];\\n  try {\\n    stocks = ns.stock\\n      .getSymbols()\\n      .map(symbol => new Stock(ns, symbol))\\n      .filter(stock => stock.worth > 0);\\n    sort(stocks, stock => stock.symbol);\\n    sort(stocks, stock => stock.worth);\\n  } catch (_) {}\\n\\n  const cash = ns.getServerMoneyAvailable(HOME_SERVER_NAME);\\n  const netWorth =\\n    cash + stocks.map(stock => stock.worth).reduce((a, b) => a + b, 0);\\n\\n  const sections = [\\n    [\\n      {\\n        [SOURCE_COLUMN_HEADER]: 'Cash',\\n        [MONEY_COLUMN_HEADER]: formatMoney(cash),\\n        [MONEY_ABBR_COLUMN_HEADER]: formatMoney(cash, true),\\n        [PERCENT_NET_WORTH_COLUMN_HEADER]: formatPercent(cash / netWorth),\\n        rowColor: RowColor.WARN,\\n      },\\n    ],\\n    [\\n      {\\n        [SOURCE_COLUMN_HEADER]: 'Net worth',\\n        [MONEY_COLUMN_HEADER]: formatMoney(netWorth),\\n        [MONEY_ABBR_COLUMN_HEADER]: formatMoney(netWorth, true),\\n        [PERCENT_NET_WORTH_COLUMN_HEADER]: '--',\\n        rowColor: RowColor.WARN,\\n      },\\n    ],\\n  ];\\n  if (stocks.length > 0) {\\n    sections.unshift(\\n      stocks.map(stock => ({\\n        [SOURCE_COLUMN_HEADER]: stock.symbol,\\n        [MONEY_COLUMN_HEADER]: formatMoney(stock.worth),\\n        [MONEY_ABBR_COLUMN_HEADER]: formatMoney(stock.worth, true),\\n        [PERCENT_NET_WORTH_COLUMN_HEADER]: formatPercent(\\n          stock.worth / netWorth\\n        ),\\n      }))\\n    );\\n  }\\n  printTable(\\n    ns,\\n    {\\n      [MONEY_COLUMN_HEADER]: Alignment.RIGHT,\\n      [MONEY_ABBR_COLUMN_HEADER]: Alignment.RIGHT,\\n      [PERCENT_NET_WORTH_COLUMN_HEADER]: Alignment.RIGHT,\\n    },\\n    ...sections\\n  );\\n}\\n\\nclass Stock {\\n  /**\\n   * @param {import('index').NS} ns\\n   * @param {string} symbol\\n   */\\n  constructor(ns, symbol) {\\n    this.symbol = symbol;\\n    this.worth = getStockWorth(ns, symbol);\\n  }\\n}\\n\",\"filename\":\"get-net-worth.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/table.js\",\"url\":\"blob:file:///4b8a0f39-8e77-43c3-81e7-f538cbf1d647\",\"moduleSequenceNumber\":30627},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":30625},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":30626},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":30622},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":30625},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":30626},{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///d0157a27-0066-4e81-94c8-d679d193bb57\",\"moduleSequenceNumber\":30620},{\"filename\":\"get-net-worth.js\",\"url\":\"blob:file:///bfb05d0c-3730-4806-8fdc-12f2c38b0a3d\",\"moduleSequenceNumber\":47106}],\"dependents\":[],\"ramUsage\":7.7,\"server\":\"home\",\"_hash\":\"808af31cf036be749f7db8413971ad21e883c085cd797aa2023756737e7cadc4\",\"moduleSequenceNumber\":319177,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getBidPrice\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Alignment, RowColor, printTable } from '/utils/table.js';\\nimport { formatNumber } from '/utils/format.js';\\nimport { sort } from '/utils/misc.js';\\nimport {\\n  getAllServerNames,\\n  getFreeRam,\\n  PURCHASED_SERVER_PREFIX,\\n} from '/utils/servers.js';\\n\\nconst SERVER_NAME_COLUMN_HEADER = 'Server Name';\\nconst FREE_RAM_COLUMN_HEADER = 'Free RAM';\\nconst MAX_RAM_COLUMN_HEADER = 'Max RAM';\\n\\n/**\\n * Prints out free RAM from all servers that have any RAM.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport function main(ns) {\\n  const servers = getAllServerNames(ns)\\n    .map(serverName => new Server(ns, serverName))\\n    .filter(server => server.freeRam > 0);\\n  sort(servers, server => server.name);\\n  sort(servers, server => server.maxRam);\\n  sort(servers, server => server.isPurchased, true);\\n\\n  const totalFreeRam = servers\\n    .map(server => server.freeRam)\\n    .reduce((a, b) => a + b);\\n  const totalMaxRam = servers\\n    .map(server => server.maxRam)\\n    .reduce((a, b) => a + b);\\n\\n  printTable(\\n    ns,\\n    {\\n      [FREE_RAM_COLUMN_HEADER]: Alignment.RIGHT,\\n      [MAX_RAM_COLUMN_HEADER]: Alignment.RIGHT,\\n    },\\n    servers.map(server => ({\\n      [SERVER_NAME_COLUMN_HEADER]: server.name,\\n      [FREE_RAM_COLUMN_HEADER]: formatNumber(server.freeRam) + ' GB',\\n      [MAX_RAM_COLUMN_HEADER]: formatNumber(server.maxRam) + ' GB',\\n      rowColor: server.isPurchased ? RowColor.NORMAL : RowColor.WARN,\\n    })),\\n    [\\n      {\\n        [SERVER_NAME_COLUMN_HEADER]: 'Total free RAM',\\n        [FREE_RAM_COLUMN_HEADER]: formatNumber(totalFreeRam) + ' GB',\\n        [MAX_RAM_COLUMN_HEADER]: formatNumber(totalMaxRam) + ' GB',\\n      },\\n    ]\\n  );\\n}\\n\\nclass Server {\\n  /**\\n   * @param {import('index').NS} ns\\n   * @param {string} serverName\\n   */\\n  constructor(ns, serverName) {\\n    this.name = serverName;\\n    this.freeRam = getFreeRam(ns, serverName);\\n    this.maxRam = ns.getServerMaxRam(serverName);\\n    this.isPurchased = serverName.startsWith(PURCHASED_SERVER_PREFIX);\\n  }\\n}\\n\",\"filename\":\"get-free-ram.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":243807},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":243803},{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///d0157a27-0066-4e81-94c8-d679d193bb57\",\"moduleSequenceNumber\":243801},{\"filename\":\"/utils/table.js\",\"url\":\"blob:file:///4b8a0f39-8e77-43c3-81e7-f538cbf1d647\",\"moduleSequenceNumber\":243808},{\"filename\":\"get-free-ram.js\",\"url\":\"blob:file:///7c5671de-2376-49c7-9013-70bf07dd63fd\",\"moduleSequenceNumber\":284727}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"_hash\":\"7c26dcb443ebca8174c811dfd3f5981d041f317059672535ca3bfcb150a4b6a2\",\"moduleSequenceNumber\":319175,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const COMMISSION_FEE = 100000;\\nconst MIN_PRICE_HISTORY_MILLIS = 5 * 6 * 1000; // Min 5 ticks of history.\\nconst MAX_PRICE_HISTORY_MILLIS = 10 * 60 * 1000; // Max 10 minutes of history.\\n\\n/**\\n * Map of timestamp to price.\\n *\\n * @typedef {Object.<string, number>} PriceHistory\\n */\\n\\n/** @type {Object.<string, PriceHistory>} */\\nconst symbolToAskPriceHistoryMap = {};\\n\\n/** @type {Object.<string, number>} */\\nconst symbolToMaxAskPriceMap = {};\\n\\n/** @type {Object.<string, number>} */\\nconst symbolToMinAskPriceMap = {};\\n\\n/**\\n * Gets how much a stock is worth based on how much of it we own and how much\\n * the bid price is.\\n *\\n * @param {import ('../index').NS} ns\\n * @param {string} symbol\\n */\\nexport function getStockWorth(ns, symbol) {\\n  const ownedShares = ns.stock.getPosition(symbol)[0];\\n  const bidPrice = ns.stock.getBidPrice(symbol);\\n  return ownedShares * bidPrice - COMMISSION_FEE;\\n}\\n\\n/**\\n * Gets the real forecast or get a predicted forecast for a given stock symbol.\\n *\\n * @param {import ('../index').NS} ns\\n * @param {string} symbol\\n * @returns {number}\\n */\\nexport function getForecast(ns, symbol) {\\n  try {\\n    return ns.stock.getForecast(symbol);\\n  } catch (_) {\\n    return predictForecast(ns, symbol);\\n  }\\n}\\n\\n/**\\n * Predicts the forecast based on how many times the ask price has increased or\\n * decreased in the past.\\n *\\n * @param {import ('../index').NS} ns\\n * @param {string} symbol\\n * @returns {number}\\n */\\nfunction predictForecast(ns, symbol) {\\n  const currentTimestamp = Date.now();\\n  const currentAskPrice = ns.stock.getAskPrice(symbol);\\n  if (!(symbol in symbolToAskPriceHistoryMap)) {\\n    symbolToAskPriceHistoryMap[symbol] = {\\n      [currentTimestamp]: currentAskPrice,\\n    };\\n    return 0.5;\\n  }\\n  symbolToAskPriceHistoryMap[symbol][currentTimestamp] = currentAskPrice;\\n  const askPrices = Object.values(symbolToAskPriceHistoryMap[symbol]);\\n  symbolToMaxAskPriceMap[symbol] = Math.max(...askPrices);\\n  symbolToMinAskPriceMap[symbol] = Math.min(...askPrices);\\n\\n  // Not enough data.\\n  let timestamps = getAskPriceHistoryTimestamps(symbol);\\n  const historyMillis = currentTimestamp - Math.min(...timestamps);\\n  if (historyMillis < MIN_PRICE_HISTORY_MILLIS) return 0.5;\\n\\n  if (historyMillis > MAX_PRICE_HISTORY_MILLIS) {\\n    // Trim out any data points that we no longer need.\\n    for (const timestamp of timestamps) {\\n      if (currentTimestamp - timestamp > MAX_PRICE_HISTORY_MILLIS) {\\n        delete symbolToAskPriceHistoryMap[symbol][timestamp];\\n      }\\n    }\\n  }\\n\\n  timestamps = getAskPriceHistoryTimestamps(symbol);\\n  const askPriceHistory = symbolToAskPriceHistoryMap[symbol];\\n  let noChangeCount = 0;\\n  let increaseCount = 0;\\n  let decreaseCount = 0;\\n  for (let i = 1; i < timestamps.length; i++) {\\n    const askPriceDiff =\\n      askPriceHistory[timestamps[i]] - askPriceHistory[timestamps[i - 1]];\\n    if (askPriceDiff > 0) increaseCount++;\\n    else if (askPriceDiff < 0) decreaseCount++;\\n    else if (timestamps[i] - timestamps[i - 1] >= 6000) noChangeCount++;\\n  }\\n\\n  const totalCount = noChangeCount + increaseCount + decreaseCount;\\n  let forecast = 0.5 + increaseCount / totalCount - decreaseCount / totalCount;\\n  for (let i = 0; i < noChangeCount; i++) {\\n    if (forecast < 0.5) forecast += noChangeCount / totalCount;\\n    if (forecast > 0.5) forecast -= noChangeCount / totalCount;\\n  }\\n  if (symbolToMaxAskPriceMap[symbol] === currentAskPrice) forecast /= 2;\\n  if (symbolToMinAskPriceMap[symbol] === currentAskPrice) forecast *= 2;\\n  return forecast;\\n}\\n\\n/**\\n * @param {string} symbol\\n * @returns {number[]}\\n */\\nfunction getAskPriceHistoryTimestamps(symbol) {\\n  const timestamps = Object.keys(symbolToAskPriceHistoryMap[symbol]).map(\\n    timestamp => parseInt(timestamp)\\n  );\\n  timestamps.sort();\\n  return timestamps;\\n}\\n\",\"filename\":\"/utils/stock.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":10.1,\"server\":\"home\",\"_hash\":\"54c0d8d5338c659cb1b9446c193097d28553efe2e46f5f58adf0dff2c99b4c64\",\"moduleSequenceNumber\":319410,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getBidPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Sell all stocks.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport async function main(ns) {\\n  const symbols = ns.stock.getSymbols();\\n  for (const symbol of symbols) {\\n    ns.stock.sell(symbol, ns.stock.getPosition(symbol)[0]);\\n  }\\n}\\n\",\"filename\":\"sell-all-stocks.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"sell-all-stocks.js\",\"url\":\"blob:file:///c514754d-4bbd-4233-9c5e-2853a74a7f84\",\"moduleSequenceNumber\":269572}],\"dependents\":[],\"ramUsage\":8.1,\"server\":\"home\",\"_hash\":\"969b0f01584407efec3f1c21529ee242c87d002f07ce3f2a9c822e470a6e2b99\",\"moduleSequenceNumber\":319386,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { arrayJumpingGame } from '/contracts/array-jumping-game.js';\\nimport { findValidMathExpressions } from './contracts/find-valid-math-solutions.js';\\nimport { findLargestPrimeFactor } from '/contracts/find-largest-prime-factor.js';\\nimport { generateIpAddresses } from '/contracts/generate-ip-addresses.js';\\nimport { mergeOverlappingIntervals } from '/contracts/merge-overlapping-intervals.js';\\nimport { minimumPathSumInATriangle } from '/contracts/minimum-path-sum-in-a-triangle.js';\\nimport { sanitizeParenthesesInExpression } from '/contracts/sanitize-parentheses-in-expression.js';\\nimport { spiralizeMatrix } from '/contracts/spiralize-matrix.js';\\nimport { subarrayWithMaximumSum } from '/contracts/subarray-with-maximum-sum.js';\\nimport { totalWaysToSum } from '/contracts/total-ways-to-sum.js';\\nimport {\\n  algorithmicStockTraderI,\\n  algorithmicStockTraderII,\\n  algorithmicStockTraderIII,\\n  algorithmicStockTraderIV,\\n} from '/contracts/algorithmic-stock-trader.js';\\nimport {\\n  uniquePathsInAGridI,\\n  uniquePathsInAGridII,\\n} from '/contracts/unique-paths-in-a-grid.js';\\nimport {\\n  getAllServerNames,\\n  getPath,\\n  HOME_SERVER_NAME,\\n} from '/utils/servers.js';\\n\\nconst CONTRACT_TYPE_TO_SOLVER_FN_MAP = {\\n  'Algorithmic Stock Trader I': algorithmicStockTraderI,\\n  'Algorithmic Stock Trader II': algorithmicStockTraderII,\\n  'Algorithmic Stock Trader III': algorithmicStockTraderIII,\\n  'Algorithmic Stock Trader IV': algorithmicStockTraderIV,\\n  'Array Jumping Game': arrayJumpingGame,\\n  'Find All Valid Math Expressions': findValidMathExpressions,\\n  'Find Largest Prime Factor': findLargestPrimeFactor,\\n  'Generate IP Addresses': generateIpAddresses,\\n  'Merge Overlapping Intervals': mergeOverlappingIntervals,\\n  'Minimum Path Sum in a Triangle': minimumPathSumInATriangle,\\n  'Sanitize Parentheses in Expression': sanitizeParenthesesInExpression,\\n  'Spiralize Matrix': spiralizeMatrix,\\n  'Subarray with Maximum Sum': subarrayWithMaximumSum,\\n  'Total Ways to Sum': totalWaysToSum,\\n  'Unique Paths in a Grid I': uniquePathsInAGridI,\\n  'Unique Paths in a Grid II': uniquePathsInAGridII,\\n};\\n\\n/**\\n * Finds all the contracts across all servers and solves any that we can solve\\n * as we go. Print out all unsolved contracts.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport async function main(ns) {\\n  const serverNames = getAllServerNames(ns).filter(serverName =>\\n    ns.hasRootAccess(serverName)\\n  );\\n\\n  // Get all contracts.\\n  const allContracts = [];\\n  for (const serverName of serverNames) {\\n    const contracts = ns\\n      .ls(serverName)\\n      .filter(fileName => fileName.endsWith('.cct'))\\n      .map(fileName => new Contract(fileName, serverName));\\n    allContracts.push(...contracts);\\n  }\\n\\n  // Attempt to solve contracts.\\n  const unsolvedContracts = allContracts.filter(\\n    contract => !contract.attemptToSolve(ns)\\n  );\\n\\n  if (unsolvedContracts.length === 0) {\\n    ns.tprintf('\\\\nno unsolved contracts available at the moment');\\n  }\\n}\\n\\nclass Contract {\\n  constructor(fileName, serverName) {\\n    this.fileName = fileName;\\n    this.serverName = serverName;\\n  }\\n\\n  /**\\n   * Attemps to solve a contract.\\n   *\\n   * @param {import('index').NS} ns\\n   * @returns {boolean} true if successfully solved\\n   */\\n  attemptToSolve(ns) {\\n    const contractType = ns.codingcontract.getContractType(\\n      this.fileName,\\n      this.serverName\\n    );\\n    if (!(contractType in CONTRACT_TYPE_TO_SOLVER_FN_MAP)) {\\n      ns.tprintf('\\\\n');\\n      ns.tprintf(\\n        'ERROR\\\\ncould not solve %s\\\\n%s\\\\n',\\n        contractType,\\n        this.getPath(ns)\\n      );\\n      return false;\\n    }\\n\\n    const input = ns.codingcontract.getData(this.fileName, this.serverName);\\n    let answer;\\n    try {\\n      answer = CONTRACT_TYPE_TO_SOLVER_FN_MAP[contractType](input);\\n    } catch (exception) {\\n      ns.tprint('\\\\n');\\n      ns.tprintf(\\n        'ERROR\\\\ncould not solve %s\\\\n%s\\\\n%s\\\\n',\\n        contractType,\\n        this.getPath(ns),\\n        JSON.stringify({\\n          input: input,\\n          exception: exception,\\n        })\\n      );\\n      return false;\\n    }\\n    const response = ns.codingcontract.attempt(\\n      answer,\\n      this.fileName,\\n      this.serverName,\\n      { returnReward: true }\\n    );\\n    if (response === '') {\\n      ns.tprintf('\\\\n');\\n      ns.tprintf(\\n        'ERROR\\\\ncould not solve %s\\\\n%s\\\\n%s\\\\n',\\n        contractType,\\n        this.getPath(ns),\\n        JSON.stringify({\\n          input: input,\\n          attemptedAnswer: answer,\\n        })\\n      );\\n      return false;\\n    }\\n\\n    ns.tprintf(\\n      '\\\\nsolved %s: %s\\\\n%s\\\\n',\\n      contractType,\\n      response,\\n      JSON.stringify({\\n        input: input,\\n        output: answer,\\n      })\\n    );\\n    return true;\\n  }\\n\\n  getPath(ns) {\\n    return (\\n      getPath(ns, this.serverName)\\n        .map(path => `connect ${path}`)\\n        .join('; ') + `; run ${this.fileName}`\\n    );\\n  }\\n}\\n\",\"filename\":\"find-contracts.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319409},{\"filename\":\"/contracts/unique-paths-in-a-grid.js\",\"url\":\"blob:file:///e1c25cab-46ab-48b7-b56a-b5482fe9e1e6\",\"moduleSequenceNumber\":319403},{\"filename\":\"/contracts/algorithmic-stock-trader.js\",\"url\":\"blob:file:///e7aed0cd-4035-4cf2-ba20-7716b02f497b\",\"moduleSequenceNumber\":319390},{\"filename\":\"/contracts/total-ways-to-sum.js\",\"url\":\"blob:file:///a37993a8-4ab7-4311-92a1-30233c70ae92\",\"moduleSequenceNumber\":319402},{\"filename\":\"/contracts/subarray-with-maximum-sum.js\",\"url\":\"blob:file:///b89c0c70-1249-4408-9b3e-3fd2b587c89f\",\"moduleSequenceNumber\":319399},{\"filename\":\"/contracts/spiralize-matrix.js\",\"url\":\"blob:file:///cd3912bc-83b3-4714-9e94-9e58ea473f28\",\"moduleSequenceNumber\":319398},{\"filename\":\"/contracts/sanitize-parentheses-in-expression.js\",\"url\":\"blob:file:///ad9735c8-162d-434d-852f-6761725b1761\",\"moduleSequenceNumber\":319397},{\"filename\":\"/contracts/minimum-path-sum-in-a-triangle.js\",\"url\":\"blob:file:///a138231c-fce3-43b7-8e73-52537df2493a\",\"moduleSequenceNumber\":319396},{\"filename\":\"/contracts/merge-overlapping-intervals.js\",\"url\":\"blob:file:///82e1b462-b593-4e96-bf6f-a0e5d64d668b\",\"moduleSequenceNumber\":319395},{\"filename\":\"/contracts/generate-ip-addresses.js\",\"url\":\"blob:file:///0ce6325f-4f40-4313-bb79-d31ea218357f\",\"moduleSequenceNumber\":319394},{\"filename\":\"/contracts/find-largest-prime-factor.js\",\"url\":\"blob:file:///c864958c-bb63-4c03-ac91-ef23929a7ed9\",\"moduleSequenceNumber\":319392},{\"filename\":\"/contracts/find-valid-math-solutions.js\",\"url\":\"blob:file:///e0567601-a6a8-4b2a-9a73-1af9381ed484\",\"moduleSequenceNumber\":319393},{\"filename\":\"/contracts/array-jumping-game.js\",\"url\":\"blob:file:///9ac80d60-f710-43c0-8965-d181906b1155\",\"moduleSequenceNumber\":319391},{\"filename\":\"find-contracts.js\",\"url\":\"blob:file:///9a218a03-f2df-408b-95b5-7ce54da28177\",\"moduleSequenceNumber\":321880}],\"dependents\":[],\"ramUsage\":22.05,\"server\":\"home\",\"_hash\":\"2fd40bbd41cb4f81527a04f0552b2231f1ff6ed86765f96d77d24dd62522b067\",\"moduleSequenceNumber\":321880,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import {\\n  getAllServerNames,\\n  getPath,\\n  HOME_SERVER_NAME,\\n  PURCHASED_SERVER_PREFIX,\\n} from '/utils/servers.js';\\n\\nconst DISABLE_LOGGING_FUNCTIONS = ['scan', 'sleep', 'getHackingLevel'];\\n\\n/**\\n * Finds any servers that do not have backdoor installed and can have backdoor\\n * installed.\\n *\\n * Run this script with `--tail`.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport async function main(ns) {\\n  DISABLE_LOGGING_FUNCTIONS.forEach(ns.disableLog);\\n\\n  const hackableServerNames = getAllServerNames(ns).filter(\\n    server =>\\n      server !== HOME_SERVER_NAME && !server.startsWith(PURCHASED_SERVER_PREFIX)\\n  );\\n\\n  // If we have SF4, then we can automatically run the backdoors.\\n  try {\\n    const serverNames = _getBackdoorableServerNames(ns, hackableServerNames);\\n    for (const serverName of serverNames) {\\n      _connectTo(ns, serverName, ns.getCurrentServer());\\n      await ns.installBackdoor();\\n    }\\n    _connectTo(ns, HOME_SERVER_NAME, ns.getCurrentServer());\\n  } catch (_) {\\n    // No Source File 4 API\\n  }\\n\\n  while (true) {\\n    const serverNames = _getBackdoorableServerNames(ns, hackableServerNames);\\n\\n    if (serverNames.length === 0) {\\n      ns.print('No servers that we can install backdoor available.');\\n      ns.tprint('No servers that we can install backdoor available.');\\n      return;\\n    }\\n\\n    ns.clearLog();\\n    ns.print(\\n      '\\\\n' +\\n        serverNames\\n          .map(\\n            serverName =>\\n              `${serverName}\\\\n${[\\n                'home',\\n                ...getPath(ns, serverName).map(path => `connect ${path}`),\\n                'backdoor',\\n              ].join('; ')}`\\n          )\\n          .join('\\\\n\\\\n')\\n    );\\n\\n    await ns.sleep(1000);\\n  }\\n}\\n\\n/** @param {import('index').NS} ns */\\nfunction _getBackdoorableServerNames(ns, hackableServerNames) {\\n  return hackableServerNames.filter(serverName => {\\n    const server = ns.getServer(serverName);\\n    return (\\n      server.hasAdminRights &&\\n      !server.backdoorInstalled &&\\n      server.requiredHackingSkill <= ns.getHackingLevel()\\n    );\\n  });\\n}\\n\\n/** @param {import('index').NS} ns */\\nfunction _connectTo(ns, serverName, lastServerName) {\\n  const path = getPath(ns, serverName, lastServerName, '');\\n  for (const server of path) ns.connect(server);\\n}\\n\",\"filename\":\"find-backdoors.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319409},{\"filename\":\"find-backdoors.js\",\"url\":\"blob:file:///0ba6ee35-a402-4c06-8224-d630d0fa2b99\",\"moduleSequenceNumber\":319545}],\"dependents\":[],\"ramUsage\":9.85,\"server\":\"home\",\"_hash\":\"1fa72ed546c8e0b9e667ab27c57f7e22fc31369c404b7a1d4297663b244f2e11\",\"moduleSequenceNumber\":319545,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getCurrentServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { sort } from '/utils/misc.js';\\nimport { formatNumber } from '/utils/format.js';\\nimport { getAllServerNames } from '/utils/servers.js';\\nimport {\\n  isHackable,\\n  GROW_SCRIPT,\\n  HACK_SCRIPT,\\n  WEAKEN_SCRIPT,\\n} from '/utils/hacking.js';\\nimport { Alignment, printTable, RowColor } from '/utils/table.js';\\n\\nconst SERVER_NAME_COLUMN_HEADER = 'Server name';\\nconst GROWING_COLUMN_HEADER = 'Growing';\\nconst WEAKENING_COLUMN_HEADER = 'Weakening';\\nconst HACKING_COLUMN_HEADER = 'Hacking';\\nconst MAX_RAM_COLUMN_HEADER = 'Max ram';\\nconst USED_RAM_COLUMN_HEADER = 'Used ram';\\nconst FREE_RAM_COLUMN_HEADER = 'Free ram';\\n\\n/**\\n * Prints out information about all servers that we have root access to and\\n * which scripts they're running.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport function main(ns) {\\n  let servers = getAllServerNames(ns)\\n    .map(serverName => new Server(ns, serverName))\\n    .filter(server => server.hasRootAccess);\\n  sort(servers, server => server.name);\\n  sort(servers, server => server.maxRam, true);\\n  sort(servers, server => server.isPurchased, true);\\n\\n  const hackableServerNames = servers\\n    .filter(server => isHackable(ns, server.name))\\n    .map(server => server.name);\\n  sort(hackableServerNames, serverName => serverName);\\n  for (const server of servers) {\\n    for (const targetServerName of hackableServerNames) {\\n      const growingScript = ns.getRunningScript(\\n        GROW_SCRIPT,\\n        server.name,\\n        targetServerName,\\n        1\\n      );\\n      if (growingScript !== null) {\\n        server.growing.push({\\n          targetServerName: targetServerName,\\n          threadCount: growingScript.threads,\\n        });\\n      }\\n\\n      const weakeningScript = ns.getRunningScript(\\n        WEAKEN_SCRIPT,\\n        server.name,\\n        targetServerName,\\n        1\\n      );\\n      if (weakeningScript !== null) {\\n        server.weakening.push({\\n          targetServerName: targetServerName,\\n          threadCount: weakeningScript.threads,\\n        });\\n      }\\n\\n      const hackingScript = ns.getRunningScript(\\n        HACK_SCRIPT,\\n        server.name,\\n        targetServerName,\\n        1\\n      );\\n      if (hackingScript !== null) {\\n        server.hacking.push({\\n          targetServerName: targetServerName,\\n          threadCount: hackingScript.threads,\\n        });\\n      }\\n    }\\n  }\\n\\n  servers = servers.filter(server => server.maxRam > 0);\\n  printTable(\\n    ns,\\n    {\\n      [GROWING_COLUMN_HEADER]: Alignment.RIGHT,\\n      [WEAKENING_COLUMN_HEADER]: Alignment.RIGHT,\\n      [HACKING_COLUMN_HEADER]: Alignment.RIGHT,\\n      [MAX_RAM_COLUMN_HEADER]: Alignment.RIGHT,\\n      [USED_RAM_COLUMN_HEADER]: Alignment.RIGHT,\\n      [FREE_RAM_COLUMN_HEADER]: Alignment.RIGHT,\\n    },\\n    ...servers.map(server => [server.getTableRow()])\\n  );\\n}\\n\\nclass Server {\\n  /**\\n   * @param {import('index').NS} ns\\n   * @param {string} serverName\\n   */\\n  constructor(ns, serverName) {\\n    this.ns = ns;\\n    this.name = serverName;\\n\\n    const server = ns.getServer(serverName);\\n    this.hasRootAccess = server.hasAdminRights;\\n    if (!this.hasRootAccess) return;\\n\\n    this.isPurchased = server.purchasedByPlayer;\\n\\n    // RAM information.\\n    this.maxRam = server.maxRam;\\n    this.usedRam = server.ramUsed;\\n    this.freeRam = this.maxRam - this.usedRam;\\n\\n    this.growing = [];\\n    this.weakening = [];\\n    this.hacking = [];\\n  }\\n\\n  _formatScripts(scripts) {\\n    if (scripts.length === 0) return '--';\\n    sort(scripts, script => script.threadCount, true);\\n    return scripts\\n      .map(\\n        script =>\\n          script.targetServerName +\\n          ` (${formatNumber(script.threadCount, true)})`\\n      )\\n      .join('\\\\n');\\n  }\\n\\n  getTableRow() {\\n    return {\\n      [SERVER_NAME_COLUMN_HEADER]: this.name,\\n      [GROWING_COLUMN_HEADER]: this._formatScripts(this.growing),\\n      [WEAKENING_COLUMN_HEADER]: this._formatScripts(this.weakening),\\n      [HACKING_COLUMN_HEADER]: this._formatScripts(this.hacking),\\n      [MAX_RAM_COLUMN_HEADER]: formatNumber(this.maxRam, true) + ' GB',\\n      [USED_RAM_COLUMN_HEADER]: formatNumber(this.usedRam, true) + ' GB',\\n      [FREE_RAM_COLUMN_HEADER]: formatNumber(this.freeRam, true) + ' GB',\\n      rowColor: this.isPurchased ? RowColor.NORMAL : RowColor.WARN,\\n    };\\n  }\\n}\\n\",\"filename\":\"get-servers-info.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/table.js\",\"url\":\"blob:file:///4b8a0f39-8e77-43c3-81e7-f538cbf1d647\",\"moduleSequenceNumber\":243808},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"/utils/hacking.js\",\"url\":\"blob:file:///fff5f2c6-2c61-44f0-a89b-c69215171a22\",\"moduleSequenceNumber\":243802},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///d0157a27-0066-4e81-94c8-d679d193bb57\",\"moduleSequenceNumber\":243801},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":243807},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":243803},{\"filename\":\"get-servers-info.js\",\"url\":\"blob:file:///1faddf72-ce0c-4e1e-b95c-e8a5346f6254\",\"moduleSequenceNumber\":285068}],\"dependents\":[],\"ramUsage\":4.4,\"server\":\"home\",\"_hash\":\"613ab5c851562e617a1ae6bb50baede41b0257dcb48404a4ef4a917b334c93a8\",\"moduleSequenceNumber\":319180,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getRunningScript\",\"cost\":0.3},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Alignment, printTable, RowColor } from '/utils/table.js';\\nimport {\\n  formatMoney,\\n  formatNumber,\\n  formatPercent,\\n  formatTime,\\n} from '/utils/format.js';\\nimport {\\n  getHackingHeuristic,\\n  GROW_SCRIPT,\\n  HACK_SCRIPT,\\n  isHackable,\\n  WEAKEN_SCRIPT,\\n} from '/utils/hacking.js';\\nimport { sort } from '/utils/misc.js';\\nimport { getAllServerNames } from '/utils/servers.js';\\n\\nconst SERVER_NAME_COLUMN_HEADER = 'Server name';\\nconst AVAILABLE_MONEY_COLUMN_HEADER = 'Available money';\\nconst SECURITY_LEVEL_COLUMN_HEADER = 'Security level';\\nconst HACK_CHANCE_COLUMN_HEADER = 'Hack chance';\\nconst BEING_GROWN_COLUMN_HEADER = 'Growing by';\\nconst BEING_WEAKENED_COLUMN_HEADER = 'Weakening by';\\nconst BEING_HACKED_COLUMN_HEADER = 'Hacked by';\\n\\n/**\\n * Prints out information about all hackable servers.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport function main(ns) {\\n  const allServerNames = getAllServerNames(ns);\\n\\n  const hackableServers = allServerNames\\n    .filter(serverName => isHackable(ns, serverName))\\n    .map(serverName => new Server(ns, serverName));\\n  sort(hackableServers, server => getHackingHeuristic(ns, server.name));\\n\\n  const rootAccessServerNames = allServerNames.filter(serverName =>\\n    ns.hasRootAccess(serverName)\\n  );\\n  for (const serverName of rootAccessServerNames) {\\n    for (const targetServer of hackableServers) {\\n      const growingScript = ns.getRunningScript(\\n        GROW_SCRIPT,\\n        serverName,\\n        targetServer.name,\\n        1\\n      );\\n      if (growingScript !== null) {\\n        targetServer.beingGrownBy.push({\\n          serverName: serverName,\\n          threadCount: growingScript.threads,\\n        });\\n      }\\n\\n      const weakeningScript = ns.getRunningScript(\\n        WEAKEN_SCRIPT,\\n        serverName,\\n        targetServer.name,\\n        1\\n      );\\n      if (weakeningScript !== null) {\\n        targetServer.beingWeakenedBy.push({\\n          serverName: serverName,\\n          threadCount: weakeningScript.threads,\\n        });\\n      }\\n\\n      const hackingScript = ns.getRunningScript(\\n        HACK_SCRIPT,\\n        serverName,\\n        targetServer.name,\\n        1\\n      );\\n      if (hackingScript !== null) {\\n        targetServer.beingHackedBy.push({\\n          serverName: serverName,\\n          threadCount: hackingScript.threads,\\n        });\\n      }\\n    }\\n  }\\n\\n  printTable(\\n    ns,\\n    {\\n      [AVAILABLE_MONEY_COLUMN_HEADER]: Alignment.RIGHT,\\n      [SECURITY_LEVEL_COLUMN_HEADER]: Alignment.RIGHT,\\n      [HACK_CHANCE_COLUMN_HEADER]: Alignment.RIGHT,\\n      [BEING_GROWN_COLUMN_HEADER]: Alignment.RIGHT,\\n      [BEING_WEAKENED_COLUMN_HEADER]: Alignment.RIGHT,\\n      [BEING_HACKED_COLUMN_HEADER]: Alignment.RIGHT,\\n    },\\n    ...hackableServers.map(server => [server.getTableRow()])\\n  );\\n}\\n\\nclass Server {\\n  /**\\n   * @param {import('index').NS} ns\\n   * @param {string} serverName\\n   */\\n  constructor(ns, serverName) {\\n    this.ns = ns;\\n    this.name = serverName;\\n\\n    this.hackHeuristic = getHackingHeuristic(ns, serverName);\\n\\n    this.availableMoney = ns.getServerMoneyAvailable(serverName);\\n    this.percentMaxMoney =\\n      this.availableMoney / ns.getServerMaxMoney(serverName);\\n\\n    this.securityLevel = ns.getServerSecurityLevel(serverName);\\n    this.minSecurityLevel = ns.getServerMinSecurityLevel(serverName);\\n    this.hackChance = ns.hackAnalyzeChance(serverName);\\n\\n    this.growTime = ns.getGrowTime(serverName);\\n    this.weakenTime = ns.getWeakenTime(serverName);\\n    this.hackTime = ns.getHackTime(serverName);\\n\\n    this.beingGrownBy = [];\\n    this.beingWeakenedBy = [];\\n    this.beingHackedBy = [];\\n  }\\n\\n  _formatScripts(scripts) {\\n    if (scripts.length === 0) return '--';\\n\\n    const totalThreadCount = scripts\\n      .map(script => script.threadCount)\\n      .reduce((a, b) => a + b);\\n    const totalServerCount = scripts.length;\\n    return `${totalServerCount} servers\\\\n${formatNumber(\\n      totalThreadCount,\\n      true\\n    )} threads`;\\n  }\\n\\n  _getRowColor() {\\n    const attackPoints = [\\n      this.beingGrownBy.length > 0 ? 1 : 0,\\n      this.beingWeakenedBy.length > 0 ? 1 : 0,\\n      this.beingHackedBy.length > 0 ? 1 : 0,\\n    ].reduce((a, b) => a + b);\\n    switch (attackPoints) {\\n      case 3:\\n        return RowColor.ERROR;\\n      case 2:\\n        return RowColor.WARN;\\n      case 1:\\n        return RowColor.NORMAL;\\n      case 0:\\n        return RowColor.INFO;\\n    }\\n  }\\n\\n  getTableRow() {\\n    return {\\n      [SERVER_NAME_COLUMN_HEADER]:\\n        this.name +\\n        `\\\\nHack heuristic: ${formatNumber(this.hackHeuristic, true)}`,\\n      [AVAILABLE_MONEY_COLUMN_HEADER]:\\n        formatMoney(this.availableMoney, true) +\\n        ` (${formatPercent(\\n          this.percentMaxMoney\\n        )} of max)\\\\nGrow time: ${formatTime(this.growTime)}`,\\n      [SECURITY_LEVEL_COLUMN_HEADER]: `${this.securityLevel.toFixed(\\n        2\\n      )} (out of ${this.minSecurityLevel})\\\\nWeaken time: ${formatTime(\\n        this.weakenTime\\n      )}`,\\n      [HACK_CHANCE_COLUMN_HEADER]: `${formatPercent(\\n        this.hackChance\\n      )}\\\\nHack time: ${formatTime(this.hackTime)}`,\\n      [BEING_GROWN_COLUMN_HEADER]: this._formatScripts(this.beingGrownBy),\\n      [BEING_WEAKENED_COLUMN_HEADER]: this._formatScripts(this.beingWeakenedBy),\\n      [BEING_HACKED_COLUMN_HEADER]: this._formatScripts(this.beingHackedBy),\\n      rowColor: this._getRowColor(),\\n    };\\n  }\\n}\\n\",\"filename\":\"get-hacking-info.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319409},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319409},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///64217f2e-fd38-4b7f-9f30-bb814bb48620\",\"moduleSequenceNumber\":319410},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///aeb2a2bf-58ed-4d09-9f47-69f9ea8f95c6\",\"moduleSequenceNumber\":319406},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":319409},{\"filename\":\"/utils/hacking.js\",\"url\":\"blob:file:///fff5f2c6-2c61-44f0-a89b-c69215171a22\",\"moduleSequenceNumber\":319405},{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///d0157a27-0066-4e81-94c8-d679d193bb57\",\"moduleSequenceNumber\":319404},{\"filename\":\"/utils/table.js\",\"url\":\"blob:file:///4b8a0f39-8e77-43c3-81e7-f538cbf1d647\",\"moduleSequenceNumber\":319411},{\"filename\":\"get-hacking-info.js\",\"url\":\"blob:file:///f2d4d9a2-60fb-4193-bbfb-6e8c4d2fff6f\",\"moduleSequenceNumber\":331828}],\"dependents\":[],\"ramUsage\":4.85,\"server\":\"home\",\"_hash\":\"acb7195c943b3b6dc976cd99781bc166ba7a0e9a748bca79ffade2b451d4b476\",\"moduleSequenceNumber\":331828,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getRunningScript\",\"cost\":0.3},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { sort } from '/utils/misc.js';\\nimport { formatMoney, formatNumber, formatPercent } from '/utils/format.js';\\nimport { getStockWorth } from '/utils/stock.js';\\nimport { Alignment, printTable, RowColor } from '/utils/table.js';\\n\\nconst SYMBOL_COLUMN_HEADER = 'Symbol';\\nconst ASK_PRICE_COLUMN_HEADER = 'Ask price';\\nconst BID_PRICE_COLUMN_HEADER = 'Bid price';\\nconst OWNED_SHARE_COUNT_COLUMN_HEADER = 'Owned shares';\\nconst MAX_SHARE_COUNT_COLUMN_HEADER = 'Max shares';\\nconst PERCENT_MAX_SHARE_COLUMN_HEADER = '% of max';\\nconst SHARES_WORTH_COLUMN_HEADER = 'Worth';\\nconst SHARES_PROFIT_COLUMN_HEADER = 'Profit';\\nconst FORECAST_COLUMN_HEADER = 'Forecast';\\n\\n/**\\n * Prints out stock info.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport function main(ns) {\\n  const stocks = ns.stock.getSymbols().map(symbol => new Stock(ns, symbol));\\n  sort(stocks, stock => stock.profit, true);\\n\\n  printTable(\\n    ns,\\n    {\\n      [ASK_PRICE_COLUMN_HEADER]: Alignment.RIGHT,\\n      [BID_PRICE_COLUMN_HEADER]: Alignment.RIGHT,\\n      [OWNED_SHARE_COUNT_COLUMN_HEADER]: Alignment.RIGHT,\\n      [MAX_SHARE_COUNT_COLUMN_HEADER]: Alignment.RIGHT,\\n      [PERCENT_MAX_SHARE_COLUMN_HEADER]: Alignment.RIGHT,\\n      [SHARES_WORTH_COLUMN_HEADER]: Alignment.RIGHT,\\n      [SHARES_PROFIT_COLUMN_HEADER]: Alignment.RIGHT,\\n      [FORECAST_COLUMN_HEADER]: Alignment.RIGHT,\\n    },\\n    stocks.map(stock => stock.getTableRow())\\n  );\\n\\n  // ns.tprint(table);\\n}\\n\\nclass Stock {\\n  /**\\n   * @param {import('index').NS} ns\\n   * @param {string} symbol\\n   */\\n  constructor(ns, symbol) {\\n    this.symbol = symbol;\\n    this.askPrice = ns.stock.getAskPrice(symbol);\\n    this.bidPrice = ns.stock.getBidPrice(symbol);\\n    this.maxShareCount = ns.stock.getMaxShares(symbol);\\n\\n    const position = ns.stock.getPosition(symbol);\\n    this.ownedShareCount = position[0];\\n    this.ownedShareAvgPrice = position[1];\\n    this.sharesWorth = getStockWorth(ns, symbol);\\n    this.profit =\\n      (this.sharesWorth - this.ownedShareCount * this.ownedShareAvgPrice) /\\n      (this.ownedShareCount * this.ownedShareAvgPrice);\\n\\n    this.forecast = ns.stock.getForecast(symbol);\\n  }\\n\\n  _getForecast() {\\n    if (this.forecast > 0.8) return '+++';\\n    if (this.forecast > 0.64) return '++';\\n    if (this.forecast >= 0.5) return '+';\\n    if (this.forecast > 0.32) return '-';\\n    if (this.forecast > 0.16) return '--';\\n    return '---';\\n  }\\n\\n  _getRowColor() {\\n    if (this.profit === 0) return RowColor.WARN;\\n    return this.profit > 0 ? RowColor.NORMAL : RowColor.ERROR;\\n  }\\n\\n  getTableRow() {\\n    return {\\n      [SYMBOL_COLUMN_HEADER]: this.symbol,\\n      [ASK_PRICE_COLUMN_HEADER]: formatMoney(this.askPrice),\\n      [BID_PRICE_COLUMN_HEADER]: formatMoney(this.bidPrice),\\n      [OWNED_SHARE_COUNT_COLUMN_HEADER]: formatNumber(\\n        this.ownedShareCount,\\n        true\\n      ),\\n      [MAX_SHARE_COUNT_COLUMN_HEADER]: formatNumber(this.maxShareCount, true),\\n      [PERCENT_MAX_SHARE_COLUMN_HEADER]: formatPercent(\\n        this.ownedShareCount / this.maxShareCount\\n      ),\\n      [SHARES_WORTH_COLUMN_HEADER]:\\n        this.ownedShareCount === 0 ? '--' : formatMoney(this.sharesWorth, true),\\n      [SHARES_PROFIT_COLUMN_HEADER]:\\n        this.ownedShareCount === 0\\n          ? '--'\\n          : (this.profit > 0 ? '+' : '') + formatPercent(this.profit),\\n      [FORECAST_COLUMN_HEADER]: this._getForecast(),\\n      rowColor: this._getRowColor(),\\n    };\\n  }\\n}\\n\",\"filename\":\"get-stock-info.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///8ba9f67a-1e5a-4a82-a15f-10cd232496d0\"},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///9c3264f6-993b-4338-9da0-c144b8e64bc4\"},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///8ce78e3e-5b38-4745-9208-49a558120b99\"},{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///5aaf1f10-1d28-48f5-bef3-b91f6f0029d4\"},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///8ba9f67a-1e5a-4a82-a15f-10cd232496d0\"},{\"filename\":\"/utils/table.js\",\"url\":\"blob:file:///ad4050d6-1fed-4597-8ada-d32cc43213f1\"},{\"filename\":\"get-stock-info.js\",\"url\":\"blob:file:///38c6bdee-8bbc-492b-b73d-605b0e8c795b\"}],\"dependents\":[],\"ramUsage\":14.1,\"server\":\"home\",\"_hash\":\"f3bbc46e80bfd4c6386e22c95a62972d37bbd7348daf690e020321d6af4b1349\",\"moduleSequenceNumber\":319181,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getBidPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getMaxShares\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * @typedef Alignment\\n */\\n\\n/**\\n * Enum for cell alignment.\\n *\\n * @readonly\\n * @enum {Alignment}\\n */\\nexport const Alignment = Object.freeze({ LEFT: 'left', RIGHT: 'right' });\\n\\n/**\\n * @typedef RowColor\\n */\\n\\n/**\\n * Enum for color of row.\\n *\\n * @readonly\\n * @enum {RowColor}\\n */\\nexport const RowColor = Object.freeze({\\n  INFO: 'INFO  ',\\n  WARN: 'WARN  ',\\n  ERROR: 'ERROR ',\\n  NORMAL: '      ',\\n});\\n\\nconst PIPE = '┊';\\nconst DASH = '—';\\nconst JOIN = '+';\\n\\n/**\\n * Utils for printing a table in the terminal.\\n *\\n * @param {import('../index').NS} ns\\n * @param {Object.<string, Alignment>} columnHeaderToAlignmentMap\\n *        if a column header is not specified in this map, then it is assumed\\n *        that it will be left-aligned\\n * @param {...Object.<string, any>[]} sections\\n *        sections contain rows that are divided by a divider; all rows must\\n *        have the same keys (which are used for column headers)\\n */\\nexport function printTable(ns, columnHeaderToAlignmentMap, ...sections) {\\n  // Fill in any missing alignments. Note that the alignments are not guaranteed\\n  // to be in the same order as the column headers, so we cannot rely on the\\n  // order.\\n  const columnHeaders = Object.keys(sections[0][0]).filter(\\n    key => key !== 'rowColor'\\n  );\\n  if (!columnHeaderToAlignmentMap) columnHeaderToAlignmentMap = {};\\n  for (const columnHeader of columnHeaders) {\\n    if (!(columnHeader in columnHeaderToAlignmentMap)) {\\n      columnHeaderToAlignmentMap[columnHeader] = Alignment.LEFT;\\n    }\\n  }\\n\\n  // Get width of each column.\\n  const columnHeaderToWidthMap = columnHeaders.reduce(\\n    (map, columnHeader) => ({ ...map, [columnHeader]: columnHeader.length }),\\n    {}\\n  );\\n  for (const columnHeader of columnHeaders) {\\n    for (const rows of sections) {\\n      for (const row of rows) {\\n        const lines = row[columnHeader].toString().split('\\\\n');\\n        columnHeaderToWidthMap[columnHeader] = Math.max(\\n          columnHeaderToWidthMap[columnHeader],\\n          ...lines.map(line => line.length)\\n        );\\n      }\\n    }\\n  }\\n\\n  // Print the column headers.\\n  _printColumnHeaders(\\n    ns,\\n    columnHeaders,\\n    columnHeaderToAlignmentMap,\\n    columnHeaderToWidthMap\\n  );\\n\\n  // Print each section.\\n  for (let i = 0; i < sections.length; i++) {\\n    for (let j = 0; j < sections[i].length; j++) {\\n      _printRow(\\n        ns,\\n        sections[i][j],\\n        columnHeaders,\\n        columnHeaderToAlignmentMap,\\n        columnHeaderToWidthMap,\\n        j === sections[i].length - 1 && i !== sections.length - 1\\n      );\\n    }\\n  }\\n\\n  // Print the column headers at the end again.\\n  _printColumnHeaders(\\n    ns,\\n    columnHeaders,\\n    columnHeaderToAlignmentMap,\\n    columnHeaderToWidthMap\\n  );\\n}\\n\\n/**\\n * @param {import('../index').NS} ns\\n * @param {Object.<string, any>} row\\n * @param {string[]} columnHeaders\\n * @param {Object.<string, Alignment>} columnHeaderToAlignmentMap\\n * @param {Object.<string, number>} columnHeaderToWidthMap\\n * @param {boolean} shouldAddDivider\\n */\\nfunction _printRow(\\n  ns,\\n  row,\\n  columnHeaders,\\n  columnHeaderToAlignmentMap,\\n  columnHeaderToWidthMap,\\n  shouldAddDivider\\n) {\\n  const height = Math.max(\\n    ...Object.values(row).map(value => value.toString().split('\\\\n').length)\\n  );\\n\\n  const contents = new Array(height).fill('');\\n  for (const columnHeader of columnHeaders) {\\n    const lines = row[columnHeader].split('\\\\n');\\n    const width = columnHeaderToWidthMap[columnHeader];\\n\\n    for (let i = 0; i < contents.length; i++) {\\n      let line = lines[i] || '';\\n      line =\\n        columnHeaderToAlignmentMap[columnHeader] === Alignment.RIGHT\\n          ? line.padStart(width)\\n          : line.padEnd(width);\\n      contents[i] += `${PIPE} ${line} `;\\n    }\\n  }\\n  for (let i = 0; i < contents.length; i++) {\\n    contents[i] =\\n      (i === 0 && row.rowColor ? row.rowColor : RowColor.NORMAL) +\\n      contents[i] +\\n      PIPE;\\n  }\\n  if (shouldAddDivider) {\\n    contents.push(\\n      RowColor.NORMAL + _getDivider(columnHeaders, columnHeaderToWidthMap)\\n    );\\n  }\\n\\n  ns.tprintf('%s', contents.join('\\\\n'));\\n}\\n\\n/**\\n * @param {import('../index').NS} ns\\n * @param {string[]} columnHeaders\\n * @param {Object.<string, Alignment>} columnHeaderToAlignmentMap\\n * @param {Object.<string, number>} columnHeaderToWidthMap\\n */\\nfunction _printColumnHeaders(\\n  ns,\\n  columnHeaders,\\n  columnHeaderToAlignmentMap,\\n  columnHeaderToWidthMap\\n) {\\n  const contents = columnHeaders\\n    .map(columnHeader => {\\n      const width = columnHeaderToWidthMap[columnHeader];\\n      return columnHeaderToAlignmentMap[columnHeader] === Alignment.RIGHT\\n        ? columnHeader.padStart(width)\\n        : columnHeader.padEnd(width);\\n    })\\n    .join(` ${PIPE} `)\\n    .toUpperCase();\\n  const divider = _getDivider(columnHeaders, columnHeaderToWidthMap);\\n  ns.tprintf(\\n    '%s',\\n    [\\n      RowColor.INFO + divider,\\n      RowColor.NORMAL + PIPE + ` ${contents} ` + PIPE,\\n      RowColor.NORMAL + divider,\\n    ].join('\\\\n')\\n  );\\n}\\n\\n/**\\n * @param {import('..').NS} ns\\n * @param {string[]} columnHeaders\\n * @param {Object.<string, number>} columnHeaderToWidthMap\\n */\\nfunction _printDivider(ns, columnHeaders, columnHeaderToWidthMap) {\\n  ns.tprintf(\\n    '%s%s',\\n    RowColor.INFO,\\n    _getDivider(columnHeaders, columnHeaderToWidthMap)\\n  );\\n}\\n\\n/**\\n * Gets just the divider string without the row color print.\\n *\\n * This function does not print anything.\\n *\\n * @param {string[]} columnHeaders\\n * @param {Object.<string, number>} columnHeaderToWidthMap\\n * @returns {string}\\n */\\nfunction _getDivider(columnHeaders, columnHeaderToWidthMap) {\\n  const contents = columnHeaders\\n    .map(columnHeader => ''.padEnd(columnHeaderToWidthMap[columnHeader], DASH))\\n    .join(DASH + JOIN + DASH);\\n  return [JOIN, DASH, contents, DASH, JOIN].join('');\\n}\\n\",\"filename\":\"/utils/table.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"e6e0f0dac4daafd7cb1872f980a02b2d7ddaffe54f6741be2e57a9e3aaf08b0c\",\"moduleSequenceNumber\":319411,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Alignment, printTable, RowColor } from '/utils/table.js';\\nimport { sort } from '/utils/misc.js';\\nimport { HOME_SERVER_NAME } from '/utils/servers.js';\\n\\nconst SCRIPT_NAME_COLUMN_HEADER = 'Script name';\\nconst RAM_COLUMN_HEADER = 'RAM';\\nconst IS_RUNNING_COLUMN_HEADER = 'Is running';\\n\\n/**\\n * Prints out how much RAM each script takes up.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport function main(ns) {\\n  const scriptNames = ns\\n    .ls(HOME_SERVER_NAME)\\n    .filter(fileName => fileName.endsWith('.js') && !fileName.startsWith('/'));\\n  sort(scriptNames, scriptName => scriptName);\\n  const scripts = scriptNames.map(fileName => ({\\n    [SCRIPT_NAME_COLUMN_HEADER]: fileName,\\n    [RAM_COLUMN_HEADER]: ns.getScriptRam(fileName) + ' GB',\\n    [IS_RUNNING_COLUMN_HEADER]: ns.scriptRunning(fileName, HOME_SERVER_NAME)\\n      ? 'true'\\n      : '--',\\n    rowColor: ns.scriptRunning(fileName, HOME_SERVER_NAME)\\n      ? RowColor.NORMAL\\n      : RowColor.INFO,\\n  }));\\n\\n  printTable(\\n    ns,\\n    {\\n      [RAM_COLUMN_HEADER]: Alignment.RIGHT,\\n      [IS_RUNNING_COLUMN_HEADER]: Alignment.RIGHT,\\n    },\\n    scripts,\\n    [\\n      {\\n        [SCRIPT_NAME_COLUMN_HEADER]: 'Total',\\n        [RAM_COLUMN_HEADER]:\\n          scriptNames\\n            .map(scriptName => ns.getScriptRam(scriptName, HOME_SERVER_NAME))\\n            .reduce((a, b) => a + b)\\n            .toFixed(2) + ' GB',\\n        [IS_RUNNING_COLUMN_HEADER]: '--',\\n        rowColor: RowColor.WARN,\\n      },\\n    ]\\n  );\\n}\\n\",\"filename\":\"get-scripts-info.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/table.js\",\"url\":\"blob:file:///efea53b8-10b6-47db-bb8f-e93e82ec4e7f\"},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///704fa837-be8e-48ed-9542-628773fd62e9\"},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///331f93b0-b61c-4181-b66c-1ab0e940501f\"},{\"filename\":\"/utils/misc.js\",\"url\":\"blob:file:///13da4980-efc9-4e54-97f1-bf8bfbe31460\"},{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///331f93b0-b61c-4181-b66c-1ab0e940501f\"},{\"filename\":\"get-scripts-info.js\",\"url\":\"blob:file:///78007279-a928-4915-918a-844cc631e96f\"}],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"home\",\"_hash\":\"22a7af45c38cd14eb6c8f6dd6dc5cf0ccaabb9c565942e7005e1c8a468995be0\",\"moduleSequenceNumber\":319179,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Merge Overlapping Intervals\\n *\\n * Given the following array of array of numbers representing a list of\\n * intervals, merge all overlapping intervals.\\n *\\n * The intervals must be returned in ASCENDING order. You can assume that in an\\n * interval, the first number will always be smaller than the second.\\n *\\n * @param {number[][]} input\\n */\\nexport function mergeOverlappingIntervals(input) {\\n  return _mergeOverlappingIntervals(input);\\n}\\n\\n/**\\n * @param {number[][]} intervals\\n * @returns {number[][]} merged intervals\\n */\\nfunction _mergeOverlappingIntervals(intervals) {\\n  // Sort by second number and then by first number.\\n  intervals.sort((a, b) => a[1] - b[1]);\\n  intervals.sort((a, b) => a[0] - b[0]);\\n\\n  // Find any overlaps.\\n  let overlappingIntervals = [];\\n  let mergedInterval;\\n  for (let i = 0; i < intervals.length - 1; i++) {\\n    for (let j = i + 1; j < intervals.length; j++) {\\n      if (_hasOverlap(intervals[i], intervals[j])) {\\n        overlappingIntervals.push(intervals[i], intervals[j]);\\n        mergedInterval = _merge(intervals[i], intervals[j]);\\n        break;\\n      }\\n    }\\n    if (mergedInterval) break;\\n  }\\n\\n  if (mergedInterval === undefined) return intervals;\\n  intervals = [\\n    mergedInterval,\\n    ...intervals.filter(interval => {\\n      for (const overlappingInterval of overlappingIntervals) {\\n        if (_equal(overlappingInterval, interval)) return false;\\n      }\\n      return true;\\n    }),\\n  ];\\n  return _mergeOverlappingIntervals(intervals);\\n}\\n\\n/**\\n * @param {number[]} a interval\\n * @param {number[]} b interval\\n * @returns {boolean} true if has overlap\\n */\\nfunction _hasOverlap(a, b) {\\n  if (a[0] === b[0] || a[1] === b[1]) return true;\\n  return a[0] < b[0] ? b[0] <= a[1] : a[0] <= b[1];\\n}\\n\\n/**\\n * Merge overlapping intervals. Intervals **must** be overlapping.\\n *\\n * @param {number[]} a interval\\n * @param {number[]} b interval\\n * @returns {number[]} merged interval\\n */\\nfunction _merge(a, b) {\\n  return [Math.min(a[0], b[0]), Math.max(a[1], b[1])];\\n}\\n\\nfunction _equal(a, b) {\\n  return a[0] === b[0] && a[1] === b[1];\\n}\\n\",\"filename\":\"/contracts/merge-overlapping-intervals.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"e1a3fee96bfcb47b06fcf82a1625a24dfaec6e621278b577b1318efb365181e1\",\"moduleSequenceNumber\":319395,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Minimum Path Sum in a Triangle\\n *\\n * Given a triangle, find the minimum path sum from top to bottom. In each step\\n * of the path, you may only move to adjacent numbers in the row below. The\\n * triangle is represented as a 2D array of numbers:\\n *\\n * [\\n *             [5],\\n *            [4,5],\\n *           [7,4,6],\\n *          [9,6,4,3],\\n *         [7,4,9,7,8],\\n *        [6,2,7,9,4,2],\\n *       [5,2,3,8,1,5,1],\\n *      [8,4,9,7,1,1,1,2],\\n *     [4,8,1,8,1,3,9,8,6],\\n *    [7,1,1,7,5,8,3,5,3,6],\\n *   [4,6,3,6,4,7,8,5,9,5,8]\\n * ]\\n *\\n * Example: If you are given the following triangle:\\n *\\n * [\\n *      [2],\\n *     [3,4],\\n *    [6,5,7],\\n *   [4,1,8,3]\\n * ]\\n *\\n * The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\\n *\\n * @param {number[][]} input\\n */\\nexport function minimumPathSumInATriangle(input) {\\n  let rootNode = new Node(input, 0, 0);\\n  return Math.min(\\n    ..._getPaths(rootNode, '').map(path => path.reduce((a, b) => a + b))\\n  );\\n}\\n\\nfunction _getPaths(rootNode, pathThusFar) {\\n  pathThusFar = [...pathThusFar, rootNode.number];\\n  if (rootNode.nextNodes.length === 0) {\\n    return [pathThusFar];\\n  }\\n  const paths = [];\\n  for (const nextNode of rootNode.nextNodes) {\\n    paths.push(..._getPaths(nextNode, pathThusFar));\\n  }\\n  return paths;\\n}\\n\\nclass Node {\\n  constructor(input, row, column) {\\n    this.number = input[row][column];\\n    this.row = row;\\n    this.column = column;\\n\\n    if (this.row === input.length - 1) {\\n      this.nextNodes = [];\\n    } else {\\n      this.nextNodes = [\\n        new Node(input, row + 1, column),\\n        new Node(input, row + 1, column + 1),\\n      ];\\n    }\\n  }\\n}\\n\",\"filename\":\"/contracts/minimum-path-sum-in-a-triangle.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"b58fab38dc5a586f5c6c2795100c671d9b3302ba8dfd4d490d994f3f4e9d159f\",\"moduleSequenceNumber\":319396,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export const MANAGE_SERVERS_TO_MANAGE_HACKING_PORT = 1;\\nexport const MANAGE_HACKING_TO_MANAGE_STOCKS_PORT = 2;\\n\\nexport const NULL_PORT_DATA = 'NULL PORT DATA';\\n\",\"filename\":\"/utils/ports.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"42d5972a2164f7240d5da41c0ba94b9d48bcf741587306fa984ce2e6023f732d\",\"moduleSequenceNumber\":319408,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getPath, HOME_SERVER_NAME } from '/utils/servers.js';\\n\\n/**\\n * Prints the command to go to a server.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport function main(ns) {\\n  const serverName = ns.args[0];\\n  if (typeof serverName !== 'string') {\\n    ns.tprint(`usage: run get-path.js <server name>`);\\n    return;\\n  }\\n  const path = [\\n    HOME_SERVER_NAME,\\n    ...getPath(ns, serverName).map(path => 'connect ' + path),\\n  ].join('; ');\\n  ns.tprintf('%s', path);\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"get-path.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///ea81aace-66fa-4f06-a948-467185a1a9c7\"},{\"filename\":\"get-path.js\",\"url\":\"blob:file:///86602310-0503-4980-8c4f-4e0bc875b482\"}],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"_hash\":\"5d4680d9f7dbc8846cc1c53692a347168f5a7ad8703e441fb1237de6726247a8\",\"moduleSequenceNumber\":319178,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Algorithmic Stock Trader I\\n *\\n * @param {number[]} input stock prices\\n * @returns {number} max profit\\n */\\nexport const algorithmicStockTraderI = input => _getMaxProfit(1, input);\\n\\n/**\\n * Algorithmic Stock Trader II\\n *\\n * @param {number[]} input stock prices\\n * @returns {number} max profit\\n */\\nexport const algorithmicStockTraderII = input =>\\n  _getMaxProfit(input.length, input);\\n\\n/**\\n * Algorithmic Stock Trader III\\n *\\n * @param {number[]} input stock prices\\n * @returns {number} max profit\\n */\\nexport const algorithmicStockTraderIII = input => _getMaxProfit(2, input);\\n\\n/**\\n * Algorithmic Stock Trader IV\\n *\\n * @param {any[]} input where the first element is the number of trade counts\\n *                      and the second element is the stock prices\\n * @returns {number} max profit\\n */\\nexport const algorithmicStockTraderIV = input =>\\n  _getMaxProfit(input[0], input[1]);\\n\\n/**\\n * @param {number} maxTradeCount\\n * @param {number[]} stockPrices\\n * @returns {number} max profit\\n */\\nfunction _getMaxProfit(maxTradeCount, stockPrices) {\\n  const tradesWithPositiveProfits = Array(stockPrices.length); // Index is buy day\\n  for (let buyDay = 0; buyDay < stockPrices.length; buyDay++) {\\n    tradesWithPositiveProfits[buyDay] = _getTradesWithPositiveProfit(\\n      stockPrices,\\n      buyDay\\n    );\\n  }\\n\\n  const tradePermutations = Array(stockPrices.length); // Index is buy day.\\n  for (let buyDay = stockPrices.length - 1; buyDay >= 0; buyDay--) {\\n    const availableTrades = tradesWithPositiveProfits[buyDay];\\n    tradePermutations[buyDay] = availableTrades.map(trade => [trade]);\\n\\n    if (buyDay === stockPrices.length - 1) continue;\\n\\n    const futureTradePermutations = tradePermutations[buyDay + 1];\\n    for (const futureTradePermutation of futureTradePermutations) {\\n      tradePermutations[buyDay].push(futureTradePermutation);\\n      if (futureTradePermutation.length === maxTradeCount) continue;\\n\\n      for (const availableTrade of availableTrades) {\\n        if (availableTrade.sellDay <= futureTradePermutation[0].buyDay) {\\n          tradePermutations[buyDay].push([\\n            availableTrade,\\n            ...futureTradePermutation,\\n          ]);\\n        }\\n      }\\n    }\\n\\n    // Trim permutations so that only one permutation of each length and\\n    // buy day (where the chosen permutation is the one with the max profit)\\n    /** @type {Object.<number, Permutation[]>} */\\n    const buyDayToPermutationsMap = {};\\n    for (const permutation of tradePermutations[buyDay]) {\\n      const key = permutation[0].buyDay;\\n      if (!(key in buyDayToPermutationsMap)) buyDayToPermutationsMap[key] = [];\\n      buyDayToPermutationsMap[key].push(permutation);\\n    }\\n    const permutationsToKeep = [];\\n    for (const permutations of Object.values(buyDayToPermutationsMap)) {\\n      const lengthToBestPermutationMap = {};\\n      const lengthToMaxProfitMap = {};\\n      for (const permutation of permutations) {\\n        const length = permutation.length;\\n        const profit = permutation\\n          .map(trade => trade.profit)\\n          .reduce((a, b) => a + b, 0);\\n        if (\\n          !(length in lengthToMaxProfitMap) ||\\n          profit > lengthToMaxProfitMap[length]\\n        ) {\\n          lengthToMaxProfitMap[length] = profit;\\n          lengthToBestPermutationMap[length] = permutation;\\n        }\\n      }\\n      permutationsToKeep.push(...Object.values(lengthToBestPermutationMap));\\n    }\\n    tradePermutations[buyDay] = permutationsToKeep;\\n  }\\n\\n  return Math.max(\\n    ...tradePermutations[0].map(trades =>\\n      trades.map(trade => trade.profit).reduce((a, b) => a + b, 0)\\n    )\\n  );\\n}\\n\\n/**\\n * @typedef {Trade[]} Permutation\\n */\\n\\n/**\\n * @typedef {Object} Trade\\n * @property {number} buyDay\\n * @property {number} sellDay\\n * @property {number} profit\\n */\\n\\n/**\\n * @param {number[]} stockPrices\\n * @param {number} buyDay\\n * @returns {Trade[]} trades with positive profit\\n */\\nfunction _getTradesWithPositiveProfit(stockPrices, buyDay) {\\n  const buyPrice = stockPrices[buyDay];\\n  const trades = [];\\n  for (let sellDay = buyDay + 1; sellDay < stockPrices.length; sellDay++) {\\n    const sellPrice = stockPrices[sellDay];\\n    const profit = sellPrice - buyPrice;\\n    if (profit > 0) {\\n      trades.push({ buyDay: buyDay, sellDay: sellDay, profit: profit });\\n    }\\n  }\\n  return trades;\\n}\\n\",\"filename\":\"/contracts/algorithmic-stock-trader.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"8f1ce73f1ee6a0f7e5a26f84082207c53ce4a1febf88bc9ead2dfcc6c03fcc69\",\"moduleSequenceNumber\":319390,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Spiralize Matrix\\n *\\n * Given the following array of arrays of numbers representing a 2D matrix,\\n * return the elements of the matrix as an array in spiral order\\n *\\n * @param {number[][]} input\\n * @returns {number[]}\\n */\\nexport function spiralizeMatrix(input) {\\n  const visitedMatrix = Array.from({ length: input.length }, () =>\\n    Array(input[0].length).fill(false)\\n  );\\n  return _getPath(input, visitedMatrix, 0, 0, Direction.RIGHT, []);\\n}\\n\\n/**\\n * @typedef {number} Direction\\n */\\n\\n/**\\n * @readonly\\n * @enum {Direction}\\n */\\nconst Direction = Object.freeze({\\n  RIGHT: 0,\\n  DOWN: 1,\\n  LEFT: 2,\\n  UP: 3,\\n});\\n\\n/**\\n * @param {number[][]} matrix\\n * @param {boolean[][]} visitedMatrix copy of matrix for marking which cells we've visited\\n * @param {number} currentX\\n * @param {number} currentY\\n * @param {Direction} currentDirection\\n * @param {number[]} pathThusFar\\n */\\nfunction _getPath(\\n  matrix,\\n  visitedMatrix,\\n  currentX,\\n  currentY,\\n  currentDirection,\\n  pathThusFar\\n) {\\n  pathThusFar.push(matrix[currentY][currentX]);\\n  visitedMatrix[currentY][currentX] = true;\\n\\n  // Check if we have visited all cells.\\n  if (_visitedAll(visitedMatrix)) return pathThusFar;\\n\\n  const nextDirection = _getNextDirection(\\n    visitedMatrix,\\n    currentX,\\n    currentY,\\n    currentDirection\\n  );\\n  return _getPath(\\n    matrix,\\n    visitedMatrix,\\n    _getNextX(currentX, nextDirection),\\n    _getNextY(currentY, nextDirection),\\n    nextDirection,\\n    pathThusFar\\n  );\\n}\\n\\nfunction _getNextDirection(\\n  visitedMatrix,\\n  currentX,\\n  currentY,\\n  currentDirection\\n) {\\n  if (_canMove(visitedMatrix, currentX, currentY, currentDirection)) {\\n    return currentDirection;\\n  }\\n  return (currentDirection + 1) % Object.keys(Direction).length;\\n}\\n\\nfunction _canMove(visitedMatrix, currentX, currentY, nextDirection) {\\n  const x = _getNextX(currentX, nextDirection);\\n  const y = _getNextY(currentY, nextDirection);\\n  if (x < 0 || x >= visitedMatrix[0].length) return false;\\n  if (y < 0 || y >= visitedMatrix.length) return false;\\n  return !visitedMatrix[y][x];\\n}\\n\\nfunction _getNextX(currentX, nextDirection) {\\n  if (nextDirection === Direction.LEFT) return currentX - 1;\\n  if (nextDirection === Direction.RIGHT) return currentX + 1;\\n  return currentX;\\n}\\n\\nfunction _getNextY(currentY, nextDirection) {\\n  if (nextDirection === Direction.UP) return currentY - 1;\\n  if (nextDirection === Direction.DOWN) return currentY + 1;\\n  return currentY;\\n}\\n\\nfunction _visitedAll(visitedMatrix) {\\n  for (let y = 0; y < visitedMatrix.length; y++) {\\n    for (let x = 0; x < visitedMatrix[y].length; x++) {\\n      if (!visitedMatrix[y][x]) return false;\\n    }\\n  }\\n  return true;\\n}\\n\",\"filename\":\"/contracts/spiralize-matrix.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"e4811fbcb4e08d87e2f6b7535abe9a79be10092ade4a3c606f43b16279aa517e\",\"moduleSequenceNumber\":319398,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Unique Paths in a Grid I\\n *\\n * You are in a grid with N rows and M columns, and you are positioned in the\\n * top-left corner of that grid. You are trying to reach the bottom-right corner\\n * of the grid, but you can only move down or right on each step. Determine how\\n * many unique paths there are from start to finish.\\n *\\n * NOTE: The data returned for this contract is an array with the number of rows\\n * and columns.\\n *\\n * @param {number[]} input array representing number of rows and columns\\n * @returns {number} number of unique paths\\n */\\nexport function uniquePathsInAGridI(input) {\\n  const rowCount = input[0];\\n  const columnCount = input[1];\\n  const grid = Array(columnCount).fill(Array(rowCount).fill(0));\\n  return _getUniquePathCount(grid);\\n}\\n\\n/**\\n * Unique Paths in a Grid II\\n *\\n * @param {number[][]} input grid\\n * @returns {number} number of unique paths\\n */\\nexport const uniquePathsInAGridII = _getUniquePathCount;\\n\\n/**\\n * String that is the Object {x: x, y: y} stringified.\\n *\\n * @typedef {string} Coordinates\\n */\\n\\n/**\\n * String containing of only 'D' and 'R' where 'D' represents moving down and\\n * 'R' represents moving right.\\n *\\n * @typedef {string} Path\\n */\\n\\n/**\\n * @param {number[][]} grid\\n * @returns {number} number of unique paths\\n */\\nfunction _getUniquePathCount(grid) {\\n  /** @type {Object.<Coordinates, Path[]>} */\\n  const coordinatesToUniquePathsMap = {};\\n\\n  const columnCount = grid.length;\\n  const rowCount = grid[0].length;\\n  for (let y = columnCount - 1; y >= 0; y--) {\\n    for (let x = rowCount - 1; x >= 0; x--) {\\n      const coordinates = JSON.stringify({ x: x, y: y });\\n      const uniquePaths = _getUniquePaths(\\n        x,\\n        y,\\n        grid,\\n        coordinatesToUniquePathsMap\\n      );\\n      coordinatesToUniquePathsMap[coordinates] = uniquePaths;\\n    }\\n  }\\n\\n  return coordinatesToUniquePathsMap[JSON.stringify({ x: 0, y: 0 })].length;\\n}\\n\\n/**\\n * @param {number} x\\n * @param {number} y\\n * @param {number[][]} grid\\n * @param {Object.<Coordinates, Path[]>} coordinatesToUniquePathsMap\\n * @returns {Path[]}\\n */\\nfunction _getUniquePaths(x, y, grid, coordinatesToUniquePathsMap) {\\n  if (y === grid.length - 1 && x === grid[0].length - 1) return [''];\\n\\n  const allPaths = [];\\n\\n  // Get paths if we moved right.\\n  if (_canMoveRight(x, y, grid)) {\\n    const coordinate = JSON.stringify({ x: x + 1, y: y });\\n    if (coordinate in coordinatesToUniquePathsMap) {\\n      const paths = coordinatesToUniquePathsMap[coordinate].map(\\n        (/** @type {Path} */ path) => 'R' + path\\n      );\\n      for (const path of paths) allPaths.push(path);\\n    }\\n  }\\n\\n  // Get paths if we moved down.\\n  if (_canMoveDown(x, y, grid)) {\\n    const coordinate = JSON.stringify({ x: x, y: y + 1 });\\n    if (coordinate in coordinatesToUniquePathsMap) {\\n      const paths = coordinatesToUniquePathsMap[coordinate].map(\\n        (/** @type {Path} */ path) => 'D' + path\\n      );\\n      for (const path of paths) allPaths.push(path);\\n    }\\n  }\\n\\n  return allPaths;\\n}\\n\\n/**\\n * @param {number} x\\n * @param {number} y\\n * @param {number[][]} grid\\n * @returns {boolean} true if we can move, false if we cannot move\\n */\\nfunction _canMoveRight(x, y, grid) {\\n  if (x + 1 === grid[0].length) return false;\\n  if (grid[y][x + 1] === 1) return false;\\n  return true;\\n}\\n\\n/**\\n * @param {number} x\\n * @param {number} y\\n * @param {number[][]} grid\\n * @returns {boolean} true if we can move, false if we cannot move\\n */\\nfunction _canMoveDown(x, y, grid) {\\n  if (y + 1 === grid.length) return false;\\n  if (grid[y + 1][x] === 1) return false;\\n  return true;\\n}\\n\",\"filename\":\"/contracts/unique-paths-in-a-grid.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"f28c78bf6d9946291215c40e2fea083e70af5c3a45d8320cde91ac933b45b830\",\"moduleSequenceNumber\":319403,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export const STOCK_EXCHANGE_API = 'Stock Exchange API';\\nexport const STOCK_MARKET_DATA_API = 'Stock Market Data API';\\nexport const SF4_API = 'SF4 API';\\n\",\"filename\":\"/utils/apis.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"bedec2aa15c0ed8f32f7d33bb1c1e3e1e3e742d78dd1765250809a0a9c92aeb3\",\"moduleSequenceNumber\":319051,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"\",\"filename\":\"/utils/api.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\"moduleSequenceNumber\":319052,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getPath } from '/utils/servers.js';\\n\\n/**\\n * Connects to a server.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport function main(ns) {\\n  if (typeof ns.args[0] !== 'string') {\\n    ns.tprint(`usage: run connect.js <server name>`);\\n    return;\\n  }\\n  const path = getPath(ns, ns.args[0]);\\n  for (const server of path) ns.connect(server);\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"connect.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///bda1ec4c-41a3-4422-bf3e-bb0561b74157\",\"moduleSequenceNumber\":243806},{\"filename\":\"connect.js\",\"url\":\"blob:file:///af93b34f-a6ab-4b1b-ba82-c575612d1e0f\",\"moduleSequenceNumber\":298788}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"_hash\":\"630533065cffaa6689959d488806cdaede0e456c0811ac6148d496b1db5728b0\",\"moduleSequenceNumber\":319172,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import {\\n  formatPercent,\\n  formatMoney,\\n  formatNumber,\\n  formatTime,\\n} from '/utils/format.js';\\n\\n/**\\n * Monitors a single server in logs.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport async function main(ns) {\\n  ns.disableLog('ALL');\\n\\n  const serverName = ns.args[0];\\n  if (typeof serverName !== 'string') {\\n    ns.tprint('usage: run monitor-server.js <server name> --tail');\\n    return;\\n  }\\n\\n  while (true) {\\n    ns.clearLog();\\n    ns.print(serverName);\\n\\n    const availableMoney = ns.getServerMoneyAvailable(serverName);\\n    const percentMaxMoney = availableMoney / ns.getServerMaxMoney(serverName);\\n    ns.print(\\n      `\\\\navailable money: ${formatMoney(availableMoney)} (${formatPercent(\\n        percentMaxMoney\\n      )} of max)`\\n    );\\n\\n    const securityLevel = ns.getServerSecurityLevel(serverName);\\n    const minSecurityLevel = ns.getServerMinSecurityLevel(serverName);\\n    ns.print(\\n      `security level:  ${formatNumber(securityLevel)} (min is ${formatNumber(\\n        minSecurityLevel\\n      )})`\\n    );\\n\\n    ns.print(`hack chance: ${formatPercent(ns.hackAnalyzeChance(serverName))}`);\\n\\n    ns.print(\\n      '\\\\n' +\\n        [\\n          `time to hack:   ${formatTime(ns.getHackTime(serverName))}`,\\n          `time to grow:   ${formatTime(ns.getGrowTime(serverName))}`,\\n          `time to weaken: ${formatTime(ns.getWeakenTime(serverName))}`,\\n        ].join('\\\\n')\\n    );\\n\\n    await ns.sleep(1000);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"monitor-server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///625064d1-46ee-427d-bd07-ad9ba932eb85\"},{\"filename\":\"monitor-server.js\",\"url\":\"blob:file:///6a6a2172-87d7-4941-9392-8db1b856cc38\"}],\"dependents\":[],\"ramUsage\":3.15,\"server\":\"home\",\"_hash\":\"45b6a42f6e2cc9bd77d3789b9e1fa5dfac2e81d8add5f155e670d20935793d2f\",\"moduleSequenceNumber\":319384,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hackAnalyzeChance\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const PROGRAMS = [\\n  'SQLInject.exe',\\n  'HTTPWorm.exe',\\n  'relaySMTP.exe',\\n  'FTPCrack.exe',\\n  'BruteSSH.exe',\\n];\\n\\n/**\\n * Buys TOR router and programs.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport async function main(ns) {\\n  const player = ns.getPlayer();\\n\\n  // Buy TOR router.\\n  if (!player.tor) {\\n    while (!ns.purchaseTor()) await ns.sleep(1000);\\n    ns.toast('Bought TOR');\\n  }\\n\\n  // Buy programs.\\n  let programsToBuy;\\n  do {\\n    programsToBuy = PROGRAMS.filter(program => !ns.fileExists(program));\\n\\n    for (const program of programsToBuy) {\\n      if (ns.isBusy() && ns.getPlayer().createProgramName === program) {\\n        continue;\\n      }\\n      const success = ns.purchaseProgram(program);\\n      if (success) ns.toast('Bought ' + program);\\n    }\\n\\n    await ns.sleep(1000);\\n  } while (programsToBuy.length > 0);\\n}\\n\",\"filename\":\"manage-programs.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"manage-programs.js\",\"url\":\"blob:file:///887fcb6b-a2f6-40e1-b69f-a3ed356a1420\",\"moduleSequenceNumber\":319169}],\"dependents\":[],\"ramUsage\":6.7,\"server\":\"home\",\"_hash\":\"063dfb9b4432a72e21c35b311f5bb00b5b194c347e525923ef46ba01e2db4ca5\",\"moduleSequenceNumber\":319381,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const DISABLE_LOGGING_FUNCTIONS = ['sleep'];\\n\\nconst WORKING_WORK_TYPES = [\\n  'Working for Company part-time',\\n  'Working for Company',\\n];\\n\\n/**\\n * Manages life when we're not busy playing.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport async function main(ns) {\\n  DISABLE_LOGGING_FUNCTIONS.forEach(ns.disableLog);\\n\\n  while (true) {\\n    const player = ns.getPlayer();\\n\\n    if (\\n      ns.isBusy() &&\\n      (WORKING_WORK_TYPES.includes(player.workType) ||\\n        player.crimeType !== '' ||\\n        player.createProgramName !== '' ||\\n        player.currentWorkFactionName !== '')\\n    ) {\\n      // Working at a job or doing a crime, so keep on working.\\n      await ns.sleep(10000);\\n      continue;\\n    }\\n\\n    const lowestSkill = Math.min(\\n      player.hacking,\\n      player.charisma,\\n      player.strength,\\n      player.defense,\\n      player.dexterity,\\n      player.agility\\n    );\\n    if (ns.isBusy() && player.workType.startsWith('Study')) {\\n      // Studying or Taking a class at university\\n      switch (player.className) {\\n        case 'training your strength at a gym':\\n          if (lowestSkill != player.strength) ns.stopAction();\\n          break;\\n        case 'training your defense at a gym':\\n          if (lowestSkill != player.defense) ns.stopAction();\\n          break;\\n        case 'training your dexterity at a gym':\\n          if (lowestSkill != player.dexterity) ns.stopAction();\\n          break;\\n        case 'training your agility at a gym':\\n          if (lowestSkill != player.agility) ns.stopAction();\\n          break;\\n        case 'taking a Leadership course':\\n          if (lowestSkill != player.charisma) ns.stopAction();\\n          break;\\n        case 'taking an Algorithms course':\\n          if (lowestSkill != player.hacking) ns.stopAction();\\n          break;\\n        default:\\n          // Not sure what class we're taking, but stop it!\\n          ns.stopAction();\\n      }\\n      if (ns.isBusy()) {\\n        await ns.sleep(10000);\\n        continue;\\n      }\\n    }\\n\\n    // Player is no longer busy, so start learning something!\\n    switch (lowestSkill) {\\n      case player.strength:\\n        ns.gymWorkout('powerhouse gym', 'strength');\\n        break;\\n      case player.defense:\\n        ns.gymWorkout('powerhouse gym', 'defense');\\n        break;\\n      case player.dexterity:\\n        ns.gymWorkout('powerhouse gym', 'dexterity');\\n        break;\\n      case player.agility:\\n        ns.gymWorkout('powerhouse gym', 'agility');\\n        break;\\n      case player.charisma:\\n        ns.universityCourse('rothman university', 'Leadership');\\n        break;\\n      case player.hacking:\\n        ns.universityCourse('rothman university', 'Algorithms');\\n        break;\\n      default:\\n        // Should never get here.\\n        ns.universityCourse('rothman university', 'Leadership');\\n    }\\n    await ns.sleep(10000);\\n  }\\n}\\n\",\"filename\":\"manage-life.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"manage-life.js\",\"url\":\"blob:file:///d915601d-9a0a-499d-a238-5dd9eae19d59\",\"moduleSequenceNumber\":336037}],\"dependents\":[],\"ramUsage\":7.6,\"server\":\"home\",\"_hash\":\"502d1493ca2b7caa2b126c91c507ce13be99ed9fd0bc924c707efe26401cc7b5\",\"moduleSequenceNumber\":336037,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gymWorkout\",\"cost\":2},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getForecast } from '/utils/stock.js';\\nimport { formatMoney, formatNumber, formatPercent } from '/utils/format.js';\\n\\n/**\\n * Monitors a single stock in logs.\\n *\\n * @param {import('index').NS} ns\\n */\\nexport async function main(ns) {\\n  ns.disableLog('ALL');\\n\\n  let symbols = [];\\n  try {\\n    symbols = ns.stock.getSymbols();\\n  } catch (_) {\\n    ns.tprint('stock API not bought yet');\\n    return;\\n  }\\n\\n  const symbol = ns.args[0];\\n  if (typeof symbol !== 'string' || !symbols.includes(symbol)) {\\n    ns.tprint('usage: run monitor-stock.js <stock symbol> --tail');\\n    return;\\n  }\\n\\n  while (true) {\\n    ns.clearLog();\\n    ns.print(symbol);\\n\\n    const position = ns.stock.getPosition(symbol);\\n    const ownedShareCount = position[0];\\n    const ownedAvgSharePrice = position[1];\\n    ns.print('owned shared count:     ', formatNumber(ownedShareCount));\\n    ns.print('owned avg. share price: ', formatMoney(ownedAvgSharePrice));\\n\\n    const askPrice = ns.stock.getAskPrice(symbol);\\n    const bidPrice = ns.stock.getBidPrice(symbol);\\n    ns.print('ask price: ', formatMoney(askPrice));\\n    ns.print('bid price: ', formatMoney(bidPrice), '\\\\n');\\n    ns.print('forecast: ', formatPercent(getForecast(ns, symbol)));\\n\\n    await ns.sleep(6000);\\n  }\\n}\\n\",\"filename\":\"monitor-stock.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/format.js\",\"url\":\"blob:file:///273103e9-03ca-40d0-a58e-4c0bfa94c8dc\"},{\"filename\":\"/utils/stock.js\",\"url\":\"blob:file:///3f4be85e-f1c5-42f3-a813-8922f8bac344\"},{\"filename\":\"monitor-stock.js\",\"url\":\"blob:file:///fef1cf13-fcfa-4ae5-a748-0a7c15157192\"}],\"dependents\":[],\"ramUsage\":12.1,\"server\":\"home\",\"_hash\":\"049233dae835648710e421548d0d39f0a5940cccdde4876058c91940a10804b1\",\"moduleSequenceNumber\":319385,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getBidPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllServerNames } from '/utils/servers.js';\\n\\nconst COMPANY_NAMES = {\\n  ECorp: { stockSymbol: 'ECP' },\\n  MegaCorp: { stockSymbol: 'MGCP' },\\n  'Blade Industries': { stockSymbol: 'BLD' },\\n  'Clarke Incorporated': { stockSymbol: 'CLRK' },\\n  'OmniTek Incorporated': { stockSymbol: 'OMTK' },\\n  'Four Sigma': { stockSymbol: 'FSIG' },\\n  'KuaiGong International': { stockSymbol: 'KGI' },\\n  'Fulcrum Technologies': { stockSymbol: 'FLCM' },\\n  'Storm Technologies': { stockSymbol: 'STM' },\\n  DefComm: { stockSymbol: 'DCOMM' },\\n  'Helios Labs': { stockSymbol: 'HLS' },\\n  VitaLife: { stockSymbol: 'VITA' },\\n  'Icarus Microsystems': { stockSymbol: 'ICRS' },\\n  'Universal Energy': { stockSymbol: 'UNV' },\\n  AeroCorp: { stockSymbol: 'AERO' },\\n  'Omnia Cybersystems': { stockSymbol: 'OMN' },\\n  'Solaris Space Systems': { stockSymbol: 'SLRS' },\\n  'Global Pharmaceuticals': { stockSymbol: 'GPH' },\\n  'Nova Medical': { stockSymbol: 'NVMD' },\\n  'Watchdog Security': { stockSymbol: 'WDS' },\\n  LexoCorp: { stockSymbol: 'LXO' },\\n  'Rho Construction': { stockSymbol: 'RHOC' },\\n  'Alpha Enterprises': { stockSymbol: 'APHE' },\\n  'SysCore Securities': { stockSymbol: 'SYSC' },\\n  CompuTek: { stockSymbol: 'CTK' },\\n  'NetLink Technologies': { stockSymbol: 'NTLK' },\\n  'Omega Software': { stockSymbol: 'OMGA' },\\n  FoodNStuff: { stockSymbol: 'FNS' },\\n  'Sigma Cosmetics': { stockSymbol: 'SGC' },\\n  \\\"Joe's Guns\\\": { stockSymbol: 'JGN' },\\n  'Catalyst Ventures': { stockSymbol: 'CTYS' },\\n  'Microdyne Technologies': { stockSymbol: 'MDYN' },\\n  'Titan Laboratories': { stockSymbol: 'TITN' },\\n};\\n\\nexport function main(ns) {\\n  // ns.tprint(Object.keys(COMPANY_NAMES).length);\\n  // ns.tprint(ns.stock.getSymbols().length);\\n  const serverNames = getAllServerNames(ns);\\n  for (const serverName of serverNames) {\\n    ns.tprint(ns.getServer(serverName).organizationName);\\n  }\\n}\\n\",\"filename\":\"/utils/companies.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///fd79090d-3e5c-44c0-bd2a-2784feb89ded\"},{\"filename\":\"/utils/companies.js\",\"url\":\"blob:file:///1286c66f-cb85-4d0a-8f25-beba3ad005cb\"}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"_hash\":\"e794661723ab1af3726d0ee386e3e10b8c6e5d84afe5dad138446185ab3a4d4b\",\"moduleSequenceNumber\":319058,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const ORGANIZATIONS = {\\n  ECorp: { stockSymbol: 'ECP', serverName: 'ecorp' },\\n  MegaCorp: { stockSymbol: 'MGCP', serverName: 'megacorp' },\\n  'Blade Industries': { stockSymbol: 'BLD', serverName: 'blade' },\\n  'Clarke Incorporated': { stockSymbol: 'CLRK', serverName: 'clarkinc' },\\n  'OmniTek Incorporated': { stockSymbol: 'OMTK', serverName: 'omnitek' },\\n  'Four Sigma': { stockSymbol: 'FSIG', serverName: '4sigma' },\\n  'KuaiGong International': { stockSymbol: 'KGI', serverName: 'kuai-gong' },\\n  'Fulcrum Technologies': { stockSymbol: 'FLCM', serverName: 'fulcrumtech' },\\n  'Storm Technologies': { stockSymbol: 'STM', serverName: 'stormtech' },\\n  DefComm: { stockSymbol: 'DCOMM', serverName: 'defcomm' },\\n  'Helios Labs': { stockSymbol: 'HLS', serverName: 'helios' },\\n  VitaLife: { stockSymbol: 'VITA', serverName: 'vitalife' },\\n  'Icarus Microsystems': { stockSymbol: 'ICRS', serverName: 'icarus' },\\n  'Universal Energy': { stockSymbol: 'UNV', serverName: 'univ-energy' },\\n  AeroCorp: { stockSymbol: 'AERO', serverName: 'aerocorp' },\\n  'Omnia Cybersystems': { stockSymbol: 'OMN', serverName: 'omnia' },\\n  'Solaris Space Systems': { stockSymbol: 'SLRS', serverName: 'solaris' },\\n  'Global Pharmaceuticals': { stockSymbol: 'GPH', serverName: 'global-pharm' },\\n  'Nova Medical': { stockSymbol: 'NVMD', serverName: 'nova-med' },\\n  'Watchdog Security': { stockSymbol: 'WDS' },\\n  LexoCorp: { stockSymbol: 'LXO', serverName: 'lexo-corp' },\\n  'Rho Construction': { stockSymbol: 'RHOC', serverName: 'rho-construction' },\\n  'Alpha Enterprises': { stockSymbol: 'APHE', serverName: 'alpha-ent' },\\n  'SysCore Securities': { stockSymbol: 'SYSC', serverName: 'syscore' },\\n  CompuTek: { stockSymbol: 'CTK', serverName: 'comptek' },\\n  'NetLink Technologies': { stockSymbol: 'NTLK', serverName: 'netlink' },\\n  'Omega Software': { stockSymbol: 'OMGA', serverName: 'omega-net' },\\n  FoodNStuff: { stockSymbol: 'FNS', serverName: 'foodnstuff' },\\n  'Sigma Cosmetics': { stockSymbol: 'SGC', serverName: 'sigma-cosmetics' },\\n  \\\"Joe's Guns\\\": { stockSymbol: 'JGN', serverName: 'joesguns' },\\n  'Catalyst Ventures': { stockSymbol: 'CTYS', serverName: 'catalyst' },\\n  'Microdyne Technologies': { stockSymbol: 'MDYN', serverName: 'microdyne' },\\n  'Titan Laboratories': { stockSymbol: 'TITN', serverName: 'titan-labs' },\\n};\\n\\n/**\\n * @param {string} serverName\\n * @returns {string|undefined} stock symbol\\n */\\nexport function getStockSymbol(serverName) {\\n  const organizations = Object.values(ORGANIZATIONS);\\n  const organization = organizations.find(\\n    organization => organization.serverName === serverName\\n  );\\n  return organization === undefined ? undefined : organization.stockSymbol;\\n}\\n\",\"filename\":\"/utils/organizations.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/utils/servers.js\",\"url\":\"blob:file:///fd79090d-3e5c-44c0-bd2a-2784feb89ded\"},{\"filename\":\"/utils/organizations.js\",\"url\":\"blob:file:///e98eb0ff-a686-41d3-9223-a2ac132a04dd\"}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"_hash\":\"87c11a870fd8c62ffd2783a85ca99f5023b43d9b5d1922aaf0ad763d3a0eb9dc\",\"moduleSequenceNumber\":319407,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"lauren-4\",\"lauren-18\",\"lauren-13\",\"lauren-9\",\"lauren-0\",\"lauren-15\",\"lauren-14\",\"lauren-1\",\"lauren-6\",\"lauren-16\",\"lauren-8\",\"lauren-5\",\"lauren-22\",\"lauren-17\",\"lauren-11\",\"lauren-20\",\"lauren-2\",\"lauren-23\",\"lauren\",\"lauren-3\",\"lauren-19\",\"lauren-7\",\"lauren-12\",\"lauren-21\",\"lauren-10\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":27.956000000000035,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"40.3.7.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"ecorp\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320306,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"ecorp\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320307,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"ecorp\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320308,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":38.49699999999998,\"minDifficulty\":33,\"moneyAvailable\":2116.2180253054457,\"moneyMax\":144957598987.5,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1355,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"38.7.2.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"megacorp\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320372,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"megacorp\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320373,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"megacorp\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320374,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":69.282,\"minDifficulty\":33,\"moneyAvailable\":26385696448.901962,\"moneyMax\":164639606453.4375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1177,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"15.3.8.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"b-and-a\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320348,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"b-and-a\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320349,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"b-and-a\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320350,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omnitek\",\"megacorp\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":83,\"hackDifficulty\":28.95800000000004,\"minDifficulty\":28,\"moneyAvailable\":86788.75031861324,\"moneyMax\":65265191718.75,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":955,\"serverGrowth\":76}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"77.4.5.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":31.45,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19957,\"ramUsage\":1.75,\"server\":\"blade\",\"threads\":17,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322957}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20094,\"ramUsage\":1.7,\"server\":\"blade\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320398}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320732}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"blade\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320732,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322957}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"blade\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322957,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320398}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"blade\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320398,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":94,\"hackDifficulty\":87.03599999999999,\"minDifficulty\":31,\"moneyAvailable\":8866.209764512749,\"moneyMax\":54444993674.0625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1027,\"serverGrowth\":79}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"44.5.8.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nwo\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320360,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nwo\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320361,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nwo\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320362,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":91.74199999999999,\"minDifficulty\":33,\"moneyAvailable\":1195298607.8523116,\"moneyMax\":79889215038.75,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1205,\"serverGrowth\":68}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"97.3.1.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"clarkinc\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320300,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"clarkinc\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320301,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"clarkinc\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320302,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"kuai-gong\",\"ecorp\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":58,\"hackDifficulty\":34.211999999999996,\"minDifficulty\":19,\"moneyAvailable\":98.16944551467896,\"moneyMax\":54813950310.9375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1002,\"serverGrowth\":48}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"40.2.6.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":127.45,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19956,\"ramUsage\":1.75,\"server\":\"omnitek\",\"threads\":67,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322956}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20093,\"ramUsage\":1.7,\"server\":\"omnitek\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320397}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320731}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omnitek\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320731,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322956}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omnitek\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322956,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320397}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omnitek\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320397,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"fulcrumtech\",\"b-and-a\",\"blade\",\"nwo\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":92,\"hackDifficulty\":31,\"minDifficulty\":31,\"moneyAvailable\":55889696988.76866,\"moneyMax\":58273203670.3125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1078,\"serverGrowth\":99}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"41.3.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"4sigma\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320330,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"4sigma\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320331,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"4sigma\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320332,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":55,\"hackDifficulty\":41.852,\"minDifficulty\":18,\"moneyAvailable\":0,\"moneyMax\":52955424447.1875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1062,\"serverGrowth\":75}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"61.8.6.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"kuai-gong\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320294,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"kuai-gong\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320295,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"kuai-gong\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320296,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"stormtech\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":97,\"hackDifficulty\":36.48999999999999,\"minDifficulty\":32,\"moneyAvailable\":68243845.41823927,\"moneyMax\":72298932381.5625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":989,\"serverGrowth\":92}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"14.9.8.5\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":510.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2492.60999999988,\"pid\":18026,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"threads\":38,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322955}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19966,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"threads\":44,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322955}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20092,\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"threads\":95,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320396}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20152,\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"threads\":105,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320396}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20157,\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"threads\":16,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320396}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320726}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320726,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322955}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322955,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320396}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320396,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"run4theh111z\",\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":90,\"hackDifficulty\":59.062,\"minDifficulty\":30,\"moneyAvailable\":3472.4475273479025,\"moneyMax\":4177577126.25,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1015,\"serverGrowth\":94}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"9.4.5.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"fulcrumassets\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320378,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"fulcrumassets\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320379,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"fulcrumassets\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320380,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":33,\"minDifficulty\":33,\"moneyAvailable\":2812500,\"moneyMax\":2812500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1292,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"50.1.1.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"stormtech\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320288,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"stormtech\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320289,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"stormtech\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320290,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"microdyne\",\"kuai-gong\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":85,\"hackDifficulty\":89.94000000000003,\"minDifficulty\":28,\"moneyAvailable\":109192757.05761117,\"moneyMax\":3073487284.6875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1070,\"serverGrowth\":83}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"95.5.6.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"defcomm\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320252,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"defcomm\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320253,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"defcomm\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320254,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"unitalife\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":88,\"hackDifficulty\":34.624,\"minDifficulty\":29,\"moneyAvailable\":15420.50170022764,\"moneyMax\":2519306904.375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":934,\"serverGrowth\":64}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"64.8.2.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"infocomm\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320240,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"infocomm\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320241,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"infocomm\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320242,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"icarus\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":88,\"hackDifficulty\":33.11600000000001,\"minDifficulty\":29,\"moneyAvailable\":2356.682245433959,\"moneyMax\":1841946122.8125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":927,\"serverGrowth\":37}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"31.5.6.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":31.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999882,\"pid\":19352,\"ramUsage\":1.75,\"server\":\"helios\",\"threads\":8,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":323299}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19963,\"ramUsage\":1.75,\"server\":\"helios\",\"threads\":8,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":323299}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20212,\"ramUsage\":1.7,\"server\":\"helios\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320392}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320724}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"helios\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320724,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":323299}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"helios\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":323299,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320392}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"helios\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320392,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":87,\"hackDifficulty\":66.78000000000006,\"minDifficulty\":29,\"moneyAvailable\":1313170.0857681343,\"moneyMax\":1677615586.875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":823,\"serverGrowth\":71}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"11.6.2.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":63.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999882,\"pid\":19354,\"ramUsage\":1.75,\"server\":\"vitalife\",\"threads\":11,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":323300}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19965,\"ramUsage\":1.75,\"server\":\"vitalife\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":323300}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20091,\"ramUsage\":1.7,\"server\":\"vitalife\",\"threads\":23,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320394}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320725}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"vitalife\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320725,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":323300}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"vitalife\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":323300,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320394}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"vitalife\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320394,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"applied-energetics\",\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":90,\"hackDifficulty\":78.566,\"minDifficulty\":30,\"moneyAvailable\":260.44674050807953,\"moneyMax\":2072013572.8125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":775,\"serverGrowth\":75}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"75.0.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"icarus\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320228,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"icarus\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320229,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"icarus\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320230,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"deltaone\",\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":95,\"hackDifficulty\":45.408000000000015,\"minDifficulty\":32,\"moneyAvailable\":165.125,\"moneyMax\":2651155588.125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":911,\"serverGrowth\":85}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"64.5.2.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":63,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19298,\"ramUsage\":1.75,\"server\":\"univ-energy\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322246}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19918,\"ramUsage\":1.7,\"server\":\"univ-energy\",\"threads\":32,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319946}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20208,\"ramUsage\":1.7,\"server\":\"univ-energy\",\"threads\":3,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319946}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320720}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"univ-energy\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320720,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322246}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"univ-energy\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322246,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319946}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"univ-energy\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319946,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":84,\"hackDifficulty\":65.33399999999999,\"minDifficulty\":28,\"moneyAvailable\":5074.957471073106,\"moneyMax\":3123001096.875,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":873,\"serverGrowth\":82}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"56.0.8.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":63.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18085,\"ramUsage\":1.75,\"server\":\"titan-labs\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322248}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20089,\"ramUsage\":1.7,\"server\":\"titan-labs\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20151,\"ramUsage\":1.7,\"server\":\"titan-labs\",\"threads\":11,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20189,\"ramUsage\":1.7,\"server\":\"titan-labs\",\"threads\":11,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20213,\"ramUsage\":1.75,\"server\":\"titan-labs\",\"threads\":13,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320722}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320722}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"titan-labs\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320722,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322248}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"titan-labs\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322248,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320390}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"titan-labs\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320390,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"taiyang-digital\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":74,\"hackDifficulty\":76.73400000000002,\"minDifficulty\":25,\"moneyAvailable\":377610859.1375032,\"moneyMax\":2191940926.875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":855,\"serverGrowth\":67}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"8.6.3.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":30.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20210,\"ramUsage\":1.7,\"server\":\"microdyne\",\"threads\":18,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320391}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320723}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"microdyne\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320723,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322249}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"microdyne\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322249,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320391}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"microdyne\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320391,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"taiyang-digital\",\"stormtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":71,\"hackDifficulty\":62.79600000000002,\"minDifficulty\":24,\"moneyAvailable\":7588.836854264382,\"moneyMax\":1703347678.125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":852,\"serverGrowth\":72}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"42.0.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"taiyang-digital\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320264,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"taiyang-digital\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320265,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"taiyang-digital\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320266,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"univ-energy\",\"titan-labs\",\"microdyne\",\"applied-energetics\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":70,\"hackDifficulty\":100,\"minDifficulty\":23,\"moneyAvailable\":2257893852.1875,\"moneyMax\":2257893852.1875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":864,\"serverGrowth\":79}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"76.4.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"galactic-cyber\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320210,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"galactic-cyber\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320211,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"galactic-cyber\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320212,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"millenium-fitness\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":64,\"hackDifficulty\":57.21400000000003,\"minDifficulty\":21,\"moneyAvailable\":890.2107999229837,\"moneyMax\":2155216522.5,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":844,\"serverGrowth\":72}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"83.0.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"aerocorp\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320216,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"aerocorp\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320217,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"aerocorp\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320218,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"millenium-fitness\",\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":84,\"hackDifficulty\":67.42800000000001,\"minDifficulty\":28,\"moneyAvailable\":3952.3028466499027,\"moneyMax\":3012141175.3125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":866,\"serverGrowth\":64}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"14.7.9.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":30.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19942,\"ramUsage\":1.7,\"server\":\"omnia\",\"threads\":18,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320388}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320716}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omnia\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320716,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322242}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omnia\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322242,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320388}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omnia\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320388,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":87,\"hackDifficulty\":43.894,\"minDifficulty\":29,\"moneyAvailable\":199.8428974933325,\"moneyMax\":2670627915,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":928,\"serverGrowth\":66}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"43.8.0.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zb-def\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319907,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zb-def\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":319908,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zb-def\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319909,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":57,\"hackDifficulty\":19.188,\"minDifficulty\":19,\"moneyAvailable\":0,\"moneyMax\":2819895949.6875,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":806,\"serverGrowth\":66}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"22.7.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"applied-energetics\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319913,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"applied-energetics\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":319914,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"applied-energetics\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319915,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"taiyang-digital\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":71,\"hackDifficulty\":32.955999999999996,\"minDifficulty\":24,\"moneyAvailable\":78.3125,\"moneyMax\":2755660030.3125,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":815,\"serverGrowth\":73}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"91.8.1.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":127.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19919,\"ramUsage\":1.7,\"server\":\"solaris\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320389}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20088,\"ramUsage\":1.7,\"server\":\"solaris\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320389}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20209,\"ramUsage\":1.7,\"server\":\"solaris\",\"threads\":72,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320389}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320721}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"solaris\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320721,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322247}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"solaris\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322247,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320389}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"solaris\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320389,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":76,\"hackDifficulty\":25.808000000000007,\"minDifficulty\":25,\"moneyAvailable\":98.625,\"moneyMax\":2230952495.625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":784,\"serverGrowth\":75}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"0.7.4.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"deltaone\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320222,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"deltaone\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320223,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"deltaone\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320224,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"galactic-cyber\",\"icarus\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":85,\"hackDifficulty\":63.33399999999998,\"minDifficulty\":28,\"moneyAvailable\":69.52496456837616,\"moneyMax\":4375950766.875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":834,\"serverGrowth\":65}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"92.1.6.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":31.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19296,\"ramUsage\":1.75,\"server\":\"global-pharm\",\"threads\":16,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321499}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20206,\"ramUsage\":1.7,\"server\":\"global-pharm\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319944}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320180}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"global-pharm\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320180,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321499}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"global-pharm\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321499,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319944}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"global-pharm\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319944,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"lexo-corp\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":84,\"hackDifficulty\":87.25599999999996,\"minDifficulty\":28,\"moneyAvailable\":454.67595532452106,\"moneyMax\":4628055507.1875,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":777,\"serverGrowth\":80}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"91.2.5.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nova-med\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319901,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nova-med\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":319902,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nova-med\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319903,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"defcomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":60,\"hackDifficulty\":74.998,\"minDifficulty\":20,\"moneyAvailable\":15815.035702909025,\"moneyMax\":3412676939.0625,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":800,\"serverGrowth\":67}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"20.7.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zeus-med\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320234,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zeus-med\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320235,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zeus-med\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320236,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":88,\"hackDifficulty\":44.67200000000002,\"minDifficulty\":29,\"moneyAvailable\":135.0625,\"moneyMax\":3963496199.0625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":837,\"serverGrowth\":71}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"46.4.0.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":15.45,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19297,\"ramUsage\":1.75,\"server\":\"unitalife\",\"threads\":3,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322245}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20207,\"ramUsage\":1.7,\"server\":\"unitalife\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319945}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320719}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"unitalife\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320719,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322245}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"unitalife\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322245,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319945}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"unitalife\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319945,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"global-pharm\",\"defcomm\",\"univ-energy\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":70,\"hackDifficulty\":57.763999999999996,\"minDifficulty\":23,\"moneyAvailable\":42111957.888066195,\"moneyMax\":2995937699.0625,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":786,\"serverGrowth\":71}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"0.6.8.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":63.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19294,\"ramUsage\":1.75,\"server\":\"lexo-corp\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322243}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19917,\"ramUsage\":1.7,\"server\":\"lexo-corp\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319941}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19943,\"ramUsage\":1.7,\"server\":\"lexo-corp\",\"threads\":10,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319941}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20203,\"ramUsage\":1.75,\"server\":\"lexo-corp\",\"threads\":7,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320717}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20204,\"ramUsage\":1.7,\"server\":\"lexo-corp\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319941}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320717}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lexo-corp\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320717,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322243}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lexo-corp\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322243,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319941}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lexo-corp\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319941,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"syscore\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":77,\"hackDifficulty\":100,\"minDifficulty\":26,\"moneyAvailable\":68981371.48468876,\"moneyMax\":1987776430.3125,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":687,\"serverGrowth\":56}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"78.5.9.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":63.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2492.60999999988,\"pid\":18024,\"ramUsage\":1.75,\"server\":\"rho-construction\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321497}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19915,\"ramUsage\":1.7,\"server\":\"rho-construction\",\"threads\":24,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319572}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19940,\"ramUsage\":1.7,\"server\":\"rho-construction\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319572}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20086,\"ramUsage\":1.7,\"server\":\"rho-construction\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319572}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319372}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"rho-construction\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319372,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321497}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"rho-construction\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321497,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319572}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"rho-construction\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319572,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":44,\"hackDifficulty\":51.802000000000014,\"minDifficulty\":15,\"moneyAvailable\":293.9877499612048,\"moneyMax\":1753211067.1875,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":505,\"serverGrowth\":55}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"61.8.1.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":31.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19295,\"ramUsage\":1.75,\"server\":\"alpha-ent\",\"threads\":16,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322244}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20205,\"ramUsage\":1.7,\"server\":\"alpha-ent\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319942}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320718}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"alpha-ent\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320718,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322244}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"alpha-ent\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322244,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319942}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"alpha-ent\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319942,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"syscore\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":64,\"hackDifficulty\":39.99599999999999,\"minDifficulty\":21,\"moneyAvailable\":6805.21175882013,\"moneyMax\":1947308551.875,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":527,\"serverGrowth\":55}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"37.5.8.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":31.15,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18080,\"ramUsage\":1.75,\"server\":\"aevum-police\",\"threads\":11,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322948}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19931,\"ramUsage\":1.7,\"server\":\"aevum-police\",\"threads\":7,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319940}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320715}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"aevum-police\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320715,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322948}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"aevum-police\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322948,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319940}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"aevum-police\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319940,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":80,\"hackDifficulty\":27.186,\"minDifficulty\":27,\"moneyAvailable\":0,\"moneyMax\":914492382.1875,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":403,\"serverGrowth\":48}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"28.0.8.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":15.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19939,\"ramUsage\":1.7,\"server\":\"rothman-uni\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319569}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319370}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319370,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322953}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322953,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319569}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"rothman-uni\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319569,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"crush-fitness\",\"rho-construction\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":50,\"hackDifficulty\":17.166,\"minDifficulty\":17,\"moneyAvailable\":0,\"moneyMax\":631099847.8125,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":427,\"serverGrowth\":44}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"52.8.9.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19291,\"ramUsage\":1.75,\"server\":\"zb-institute\",\"threads\":12,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322946}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19912,\"ramUsage\":1.7,\"server\":\"zb-institute\",\"threads\":3,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320387}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19927,\"ramUsage\":1.7,\"server\":\"zb-institute\",\"threads\":3,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320387}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320714}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zb-institute\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320714,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322946}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zb-institute\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322946,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320387}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zb-institute\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320387,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":78,\"hackDifficulty\":77.50200000000001,\"minDifficulty\":26,\"moneyAvailable\":0,\"moneyMax\":2921496058.125,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":770,\"serverGrowth\":78}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"81.4.7.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":15.45,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19293,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"threads\":1,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322954}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":19999,\"ramUsage\":1.7,\"server\":\"summit-uni\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319570}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20202,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"threads\":2,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319371}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319371}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"summit-uni\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319371,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322954}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"summit-uni\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322954,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319570}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"summit-uni\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319570,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":62,\"hackDifficulty\":77.95799999999998,\"minDifficulty\":21,\"moneyAvailable\":371.92827272016484,\"moneyMax\":732880383.75,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":440,\"serverGrowth\":58}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"81.8.4.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"syscore\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319865,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"syscore\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":319866,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"syscore\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319867,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"crush-fitness\",\"lexo-corp\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":68,\"hackDifficulty\":84.91550000000001,\"minDifficulty\":23,\"moneyAvailable\":1171476.983981209,\"moneyMax\":1661009596.875,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":602,\"serverGrowth\":64}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"65.9.7.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":127.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19292,\"ramUsage\":1.75,\"server\":\"catalyst\",\"threads\":26,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322952}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19914,\"ramUsage\":1.7,\"server\":\"catalyst\",\"threads\":7,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319568}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19936,\"ramUsage\":1.7,\"server\":\"catalyst\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319568}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19938,\"ramUsage\":1.7,\"server\":\"catalyst\",\"threads\":39,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319568}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319369}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"catalyst\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319369,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322952}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"catalyst\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322952,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319568}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"catalyst\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319568,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":70,\"hackDifficulty\":100,\"minDifficulty\":23,\"moneyAvailable\":83950997.97900951,\"moneyMax\":962887620.9375,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":413,\"serverGrowth\":39}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"52.8.9.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":62.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18077,\"ramUsage\":1.75,\"server\":\"the-hub\",\"threads\":31,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322947}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19928,\"ramUsage\":1.7,\"server\":\"the-hub\",\"threads\":5,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319558}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319362}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"the-hub\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319362,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322947}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"the-hub\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322947,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319558}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"the-hub\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319558,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omega-net\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":43,\"hackDifficulty\":100,\"minDifficulty\":14,\"moneyAvailable\":47773.818517454325,\"moneyMax\":477712707.1875,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":310,\"serverGrowth\":46}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":true,\"ip\":\"7.7.4.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"comptek\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319303,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"comptek\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":319304,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"comptek\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319305,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"neo-net\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":62,\"hackDifficulty\":64.35500000000002,\"minDifficulty\":21,\"moneyAvailable\":982.5418267505306,\"moneyMax\":631749839.0625,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":300,\"serverGrowth\":57}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"19.8.5.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":63.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18078,\"ramUsage\":1.75,\"server\":\"netlink\",\"threads\":10,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321494}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19929,\"ramUsage\":1.7,\"server\":\"netlink\",\"threads\":27,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319560}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319363}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"netlink\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319363,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321494}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"netlink\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321494,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319560}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"netlink\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319560,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":77,\"hackDifficulty\":100,\"minDifficulty\":26,\"moneyAvailable\":690141042.2146201,\"moneyMax\":773437500,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":378,\"serverGrowth\":48}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"70.4.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"johnson-ortho\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319291,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"johnson-ortho\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":319292,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"johnson-ortho\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319293,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":44,\"hackDifficulty\":15.31,\"minDifficulty\":15,\"moneyAvailable\":0,\"moneyMax\":235859259.375,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":278,\"serverGrowth\":49}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"23.0.8.3\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":3.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19884,\"ramUsage\":1.7,\"server\":\"n00dles\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319546}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319348}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"n00dles\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319348,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321469}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"n00dles\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321469,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319546}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"n00dles\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319546,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1.1295000000000015,\"minDifficulty\":1,\"moneyAvailable\":196875,\"moneyMax\":196875,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"80.7.8.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":15.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20150,\"ramUsage\":1.7,\"server\":\"foodnstuff\",\"threads\":4,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319547}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20185,\"ramUsage\":1.7,\"server\":\"foodnstuff\",\"threads\":5,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319547}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319349}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319349,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321470}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321470,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319547}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foodnstuff\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319547,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":100,\"minDifficulty\":3,\"moneyAvailable\":5355942.573541328,\"moneyMax\":5625000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"21.3.9.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":8.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"pid\":20136,\"ramUsage\":1.7,\"server\":\"sigma-cosmetics\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319548}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20153,\"ramUsage\":1.7,\"server\":\"sigma-cosmetics\",\"threads\":3,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319548}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319350}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319350,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321471}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321471,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319548}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"sigma-cosmetics\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319548,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":100,\"minDifficulty\":3,\"moneyAvailable\":2958727.4645020063,\"moneyMax\":6468750,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"70.2.0.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":15.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19885,\"ramUsage\":1.7,\"server\":\"joesguns\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319549}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319351}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"joesguns\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319351,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321472}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"joesguns\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321472,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319549}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"joesguns\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319549,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":11.282,\"minDifficulty\":5,\"moneyAvailable\":0,\"moneyMax\":7031250,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"81.2.8.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":31.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19959,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":9,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":323301}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20096,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319575}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319374}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zer0\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319374,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":323301}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zer0\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":323301,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319575}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zer0\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319575,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"joesguns\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":25,\"hackDifficulty\":96.27600000000001,\"minDifficulty\":8,\"moneyAvailable\":21093750,\"moneyMax\":21093750,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"51.1.1.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":15.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19923,\"ramUsage\":1.7,\"server\":\"nectar-net\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319553}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319358}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nectar-net\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319358,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322943}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nectar-net\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322943,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319553}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nectar-net\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319553,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"foodnstuff\",\"phantasy\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":20,\"hackDifficulty\":7.132,\"minDifficulty\":7,\"moneyAvailable\":0,\"moneyMax\":7734375,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"83.0.7.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":30.9,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18084,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322951}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19935,\"ramUsage\":1.7,\"server\":\"neo-net\",\"threads\":12,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319567}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319368}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"neo-net\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319368,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322951}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"neo-net\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322951,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319567}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"neo-net\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319567,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"CSEC\",\"comptek\",\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":25,\"hackDifficulty\":89.418,\"minDifficulty\":8,\"moneyAvailable\":7146106.152331378,\"moneyMax\":14062500,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"5.7.9.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":63.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18083,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":6,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321496}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19913,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":3,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319566}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19934,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":28,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319566}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319367}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"silver-helix\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319367,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321496}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"silver-helix\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321496,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319566}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"silver-helix\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319566,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"max-hardware\",\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":13.126000000000001,\"minDifficulty\":10,\"moneyAvailable\":0,\"moneyMax\":126562500,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"51.2.7.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":15.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19886,\"ramUsage\":1.7,\"server\":\"hong-fang-tea\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319550}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319352}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319352,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321473}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321473,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319550}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"hong-fang-tea\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319550,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":100,\"minDifficulty\":5,\"moneyAvailable\":8437500,\"moneyMax\":8437500,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"13.1.3.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":15.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19887,\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319551}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319353}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319353,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321474}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321474,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319551}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319551,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":67.884,\"minDifficulty\":5,\"moneyAvailable\":0,\"moneyMax\":11250000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"71.2.3.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":30.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19924,\"ramUsage\":1.7,\"server\":\"phantasy\",\"threads\":18,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319554}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319359}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"phantasy\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319359,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322944}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"phantasy\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322944,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319554}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"phantasy\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319554,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"nectar-net\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":20,\"hackDifficulty\":38.9,\"minDifficulty\":7,\"moneyAvailable\":0,\"moneyMax\":67500000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"37.8.4.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":30.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18081,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322949}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19932,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":16,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319563}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319365}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"max-hardware\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319365,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322949}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"max-hardware\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322949,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319563}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"max-hardware\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319563,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"sigma-cosmetics\",\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":30.47600000000001,\"minDifficulty\":5,\"moneyAvailable\":0,\"moneyMax\":28125000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"98.4.8.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":30.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19911,\"ramUsage\":1.7,\"server\":\"omega-net\",\"threads\":12,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319555}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19925,\"ramUsage\":1.7,\"server\":\"omega-net\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319555}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319360}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omega-net\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319360,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322945}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"omega-net\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322945,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319555}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omega-net\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319555,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"nectar-net\",\"the-hub\",\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":31,\"hackDifficulty\":10.142,\"minDifficulty\":10,\"moneyAvailable\":0,\"moneyMax\":178465263.75,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":189,\"serverGrowth\":32}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"55.4.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"crush-fitness\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319309,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"crush-fitness\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":319310,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"crush-fitness\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319311,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"neo-net\",\"rothman-uni\",\"summit-uni\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":35,\"hackDifficulty\":100,\"minDifficulty\":12,\"moneyAvailable\":5122979.008540299,\"moneyMax\":139908757.5,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":229,\"serverGrowth\":33}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"65.2.3.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":30.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19888,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"threads\":18,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319552}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319354}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"iron-gym\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319354,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321475}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"iron-gym\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321475,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319552}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"iron-gym\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319552,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":16.703999999999997,\"minDifficulty\":10,\"moneyAvailable\":0,\"moneyMax\":56250000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"61.9.1.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":255.9,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2492.60999999988,\"pid\":18025,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"threads\":52,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321498}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19916,\"ramUsage\":1.7,\"server\":\"millenium-fitness\",\"threads\":12,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319574}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19941,\"ramUsage\":1.7,\"server\":\"millenium-fitness\",\"threads\":52,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319574}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20087,\"ramUsage\":1.7,\"server\":\"millenium-fitness\",\"threads\":33,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319574}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319373}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319373,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321498}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321498,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319574}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"millenium-fitness\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319574,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"rothman-uni\",\"galactic-cyber\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":46,\"hackDifficulty\":73.816,\"minDifficulty\":15,\"moneyAvailable\":3788.0666878518905,\"moneyMax\":703125000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":500,\"serverGrowth\":29}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"55.1.8.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":31.15,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19958,\"ramUsage\":1.75,\"server\":\"powerhouse-fitness\",\"threads\":11,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322958}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20095,\"ramUsage\":1.7,\"server\":\"powerhouse-fitness\",\"threads\":7,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320399}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320733}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"powerhouse-fitness\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320733,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322958}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"powerhouse-fitness\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322958,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":320399}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"powerhouse-fitness\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320399,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":58,\"hackDifficulty\":73.72599999999998,\"minDifficulty\":19,\"moneyAvailable\":214.14759039878845,\"moneyMax\":2531250000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1014,\"serverGrowth\":54}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"48.1.3.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"snap-fitness\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319931,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"snap-fitness\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":319932,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"snap-fitness\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319933,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":40,\"hackDifficulty\":65.941,\"minDifficulty\":13,\"moneyAvailable\":604.259124685952,\"moneyMax\":1265625000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":705,\"serverGrowth\":52}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"95.5.7.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":254.9,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18086,\"ramUsage\":1.75,\"server\":\"run4theh111z\",\"threads\":32,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321500}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20000,\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"threads\":33,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319948}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20090,\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"threads\":78,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319948}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20211,\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"threads\":6,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319948}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320181}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"run4theh111z\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320181,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321500}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"run4theh111z\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321500,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319948}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319948,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"taiyang-digital\",\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":548,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"84.0.9.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":255.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18079,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"threads\":69,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321495}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19930,\"ramUsage\":1.7,\"server\":\"I.I.I.I\",\"threads\":79,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319562}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319364}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319364,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321495}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321495,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319562}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"I.I.I.I\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319562,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"the-hub\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":351,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"66.3.3.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":127.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18076,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"threads\":36,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321493}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19926,\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"threads\":38,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319557}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319361}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319361,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":321493}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":321493,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319557}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319557,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"phantasy\",\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":216,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"85.1.4.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":15.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999882,\"pid\":19353,\"ramUsage\":1.75,\"server\":\".\",\"threads\":5,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":324035}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19964,\"ramUsage\":1.75,\"server\":\".\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":324035}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":320182}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\".\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320182,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":324035}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\".\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":324035,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319949}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\".\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319949,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"stormtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":535,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"52.5.6.8\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":6.9,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18082,\"ramUsage\":1.75,\"server\":\"CSEC\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322950}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19933,\"ramUsage\":1.7,\"server\":\"CSEC\",\"threads\":2,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319564}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":319366}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"CSEC\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":319366,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":322950}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"CSEC\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":322950,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":319564}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"CSEC\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":319564,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"sigma-cosmetics\",\"neo-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":54,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"42.4.3.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"The-Cave\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320312,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"The-Cave\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320313,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"The-Cave\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320314,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"clarkinc\",\"w0r1d_d43m0n\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":true,\"ip\":\"52.4.0.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"w0r1d_d43m0n\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320318,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"w0r1d_d43m0n\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320319,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"w0r1d_d43m0n\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320320,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":9000,\"serverGrowth\":0}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"76.7.8.8\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"darkweb\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":320198,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"darkweb\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":320199,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"darkweb\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":320200,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-4\",\"httpPortOpen\":true,\"ip\":\"56.9.0.3\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8190.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2496.20999999988,\"pid\":18012,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":97,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":325851}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":214.60999999999902,\"pid\":19188,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":226,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":325851}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":207.40999999999892,\"pid\":19244,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":228,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999882,\"pid\":19366,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":164,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19630,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":750,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.40999999999937,\"pid\":19726,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":228,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19806,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":103,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19825,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"threads\":202,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":325853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19830,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":54,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19909,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":80,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20009,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"threads\":33,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":325853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20049,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"threads\":258,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":325853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20054,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":1232,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20060,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":575,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":325851}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20100,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"threads\":127,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":325853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20163,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":107,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000002,\"pid\":20172,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"threads\":99,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":325853}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20214,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"threads\":138,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":326220}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-4\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":326220,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":325851}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-4\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":325851,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":325853}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-4\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":325853,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-18\",\"httpPortOpen\":true,\"ip\":\"39.2.2.3\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4094.95,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2474.609999999881,\"pid\":18151,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":63,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":339847}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":221.8099999999991,\"pid\":19156,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":24,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":339847}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19223,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":120,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":339848}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":193.00999999999877,\"pid\":19394,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":65,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":339848}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19473,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":161,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":339848}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":168.2099999999985,\"pid\":19549,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":170,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":339848}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19636,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":7,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":339848}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19659,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":62,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":339848}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19807,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":113,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":339848}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19843,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":227,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":339847}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000033,\"pid\":19858,\"ramUsage\":1.7,\"server\":\"lauren-18\",\"threads\":202,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":339849}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20068,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":637,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":339848}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20098,\"ramUsage\":1.7,\"server\":\"lauren-18\",\"threads\":101,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":339849}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"pid\":20137,\"ramUsage\":1.7,\"server\":\"lauren-18\",\"threads\":84,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":339849}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20158,\"ramUsage\":1.7,\"server\":\"lauren-18\",\"threads\":110,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":339849}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000002,\"pid\":20178,\"ramUsage\":1.7,\"server\":\"lauren-18\",\"threads\":44,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":339849}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20191,\"ramUsage\":1.7,\"server\":\"lauren-18\",\"threads\":55,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":339849}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20219,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"threads\":112,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":339847}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":339848}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-18\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":339848,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":339847}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-18\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":339847,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":339849}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-18\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":339849,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-13\",\"httpPortOpen\":true,\"ip\":\"15.7.8.6\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4094.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2492.60999999988,\"pid\":18028,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":239,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":340537}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19224,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":17,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":340539}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19309,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":19,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":340537}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19470,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":131,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":340539}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19628,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":267,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":340539}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19660,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":62,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":340539}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19831,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":113,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":340539}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19970,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":151,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":340539}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20038,\"ramUsage\":1.7,\"server\":\"lauren-13\",\"threads\":138,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":340538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20048,\"ramUsage\":1.7,\"server\":\"lauren-13\",\"threads\":175,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":340538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20055,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":443,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":340539}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20106,\"ramUsage\":1.7,\"server\":\"lauren-13\",\"threads\":258,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":340538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20109,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":91,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":340537}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20159,\"ramUsage\":1.7,\"server\":\"lauren-13\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":340538}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20164,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":225,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":340539}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20220,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"threads\":26,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":340537}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":340539}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-13\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":340539,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":340537}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-13\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":340537,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":340538}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-13\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":340538,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-9\",\"httpPortOpen\":true,\"ip\":\"1.1.4.3\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4095.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18087,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"threads\":49,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":341908}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":207.40999999999892,\"pid\":19243,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"threads\":128,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":341908}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19828,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"threads\":295,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342589}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19971,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"threads\":308,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342589}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999996,\"pid\":20023,\"ramUsage\":1.7,\"server\":\"lauren-9\",\"threads\":104,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":341907}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20056,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"threads\":36,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342589}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20105,\"ramUsage\":1.7,\"server\":\"lauren-9\",\"threads\":175,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":341907}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20110,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"threads\":718,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":341908}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"pid\":20138,\"ramUsage\":1.7,\"server\":\"lauren-9\",\"threads\":34,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":341907}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"pid\":20141,\"ramUsage\":1.7,\"server\":\"lauren-9\",\"threads\":127,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":341907}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"pid\":20144,\"ramUsage\":1.7,\"server\":\"lauren-9\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":341907}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000002,\"pid\":20180,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"threads\":134,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342589}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20200,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"threads\":98,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342589}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20215,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"threads\":138,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342589}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342589}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-9\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":342589,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":341908}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-9\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":341908,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":341907}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-9\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":341907,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-0\",\"httpPortOpen\":true,\"ip\":\"15.5.1.4\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":4094.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2492.60999999988,\"pid\":18029,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":454,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":342940}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":243.60999999999936,\"pid\":19021,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":99,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342938}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19225,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":58,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342938}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19310,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":8,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":342940}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19631,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":74,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342938}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.40999999999937,\"pid\":19727,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":32,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342938}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19808,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":166,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342938}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19829,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":229,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342938}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19832,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":331,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342938}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19895,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"threads\":144,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":342937}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19975,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":194,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":342940}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20069,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":121,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342938}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20111,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":211,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":342940}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000002,\"pid\":20173,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"threads\":21,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":342937}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000002,\"pid\":20176,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"threads\":50,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":342937}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20192,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"threads\":140,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":342937}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20221,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"threads\":18,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":342940}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":342938}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-0\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":342938,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":342940}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-0\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":342940,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":342937}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-0\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":342937,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-15\",\"httpPortOpen\":true,\"ip\":\"39.3.1.8\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.65,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2496.20999999988,\"pid\":18014,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":19,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":345327}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":221.8099999999991,\"pid\":19157,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":804,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":345327}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19226,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":178,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":193.00999999999877,\"pid\":19402,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":24,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19479,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":73,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19637,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":410,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19706,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":20,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.40999999999937,\"pid\":19728,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":172,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19809,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":259,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19833,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":257,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19976,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":991,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":345327}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20002,\"ramUsage\":1.7,\"server\":\"lauren-15\",\"threads\":111,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":346009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20070,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":200,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20112,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":746,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":345327}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20117,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":198,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"pid\":20143,\"ramUsage\":1.7,\"server\":\"lauren-15\",\"threads\":54,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":346009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000002,\"pid\":20177,\"ramUsage\":1.7,\"server\":\"lauren-15\",\"threads\":77,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":346009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000002,\"pid\":20179,\"ramUsage\":1.7,\"server\":\"lauren-15\",\"threads\":75,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":346009}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20216,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"threads\":22,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":345328}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-15\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":345328,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":345327}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-15\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":345327,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":346009}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-15\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":346009,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-14\",\"httpPortOpen\":true,\"ip\":\"84.0.7.7\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8190.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2496.20999999988,\"pid\":18015,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":85,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":347378}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":225.40999999999914,\"pid\":19131,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":385,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":347378}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19201,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":325,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":347378}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19227,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":150,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":207.40999999999892,\"pid\":19245,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":17,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19325,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":242,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19632,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":35,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19707,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":101,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.40999999999937,\"pid\":19729,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":1122,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19810,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":229,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19920,\"ramUsage\":1.7,\"server\":\"lauren-14\",\"threads\":40,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":347376}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19977,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":54,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":347378}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19978,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":476,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999996,\"pid\":20024,\"ramUsage\":1.7,\"server\":\"lauren-14\",\"threads\":176,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":347376}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20071,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":565,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20118,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":185,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20161,\"ramUsage\":1.7,\"server\":\"lauren-14\",\"threads\":175,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":347376}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20162,\"ramUsage\":1.7,\"server\":\"lauren-14\",\"threads\":258,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":347376}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20165,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":19,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20222,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"threads\":60,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":347378}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":347377}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-14\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":347377,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":347378}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-14\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":347378,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":347376}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-14\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":347376,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-1\",\"httpPortOpen\":true,\"ip\":\"84.6.2.0\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2492.60999999988,\"pid\":18030,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":79,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":348065}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":229.00999999999917,\"pid\":19098,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":93,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19228,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":51,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19311,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":384,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":348065}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19633,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":134,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19661,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":36,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8099999999996,\"pid\":19761,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":879,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.00999999999985,\"pid\":19782,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":246,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":348065}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19834,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":94,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19837,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":282,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19979,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":911,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20001,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"threads\":101,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":348747}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20003,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"threads\":5,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":348747}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20072,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":1283,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20119,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":75,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20223,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"threads\":31,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":348065}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348066}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-1\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":348066,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":348065}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-1\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":348065,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":348747}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-1\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":348747,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-6\",\"httpPortOpen\":true,\"ip\":\"4.6.5.1\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.8,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2496.20999999988,\"pid\":18016,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":384,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":348755}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19312,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":159,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":348755}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19471,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":381,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348754}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19662,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":54,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348754}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19712,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":191,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348754}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.00999999999985,\"pid\":19783,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":4,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":348755}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19835,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":679,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348754}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19889,\"ramUsage\":1.7,\"server\":\"lauren-6\",\"threads\":93,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":348756}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19896,\"ramUsage\":1.7,\"server\":\"lauren-6\",\"threads\":81,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":348756}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19973,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":1013,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348754}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20064,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":1194,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348754}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20120,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":317,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348754}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20166,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":129,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348754}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20224,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"threads\":7,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":348755}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":348754}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-6\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":348754,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":348755}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-6\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":348755,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":348756}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-6\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":348756,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-16\",\"httpPortOpen\":true,\"ip\":\"87.9.5.1\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18088,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":352,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2357.409999999881,\"pid\":18805,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":111,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":218.20999999999904,\"pid\":19175,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":269,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19229,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":8,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19322,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":388,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.60999999999854,\"pid\":19532,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":399,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19634,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":153,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19676,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":608,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19708,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":70,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.00999999999985,\"pid\":19784,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":272,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19838,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":541,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19980,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":235,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20004,\"ramUsage\":1.7,\"server\":\"lauren-16\",\"threads\":138,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20010,\"ramUsage\":1.7,\"server\":\"lauren-16\",\"threads\":8,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999996,\"pid\":20032,\"ramUsage\":1.7,\"server\":\"lauren-16\",\"threads\":180,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20073,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":440,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20121,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":333,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20167,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":65,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20225,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"threads\":120,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349103}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349105}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-16\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":349105,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349103}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-16\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":349103,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349104}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-16\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":349104,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-8\",\"httpPortOpen\":true,\"ip\":\"13.0.0.5\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18089,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":29,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349793}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2375.0099999998815,\"pid\":18730,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":62,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349793}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":221.8099999999991,\"pid\":19158,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":61,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349793}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19230,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":76,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":207.40999999999892,\"pid\":19246,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":153,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19338,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":980,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19481,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":413,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19639,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":214,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19709,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":104,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8099999999996,\"pid\":19762,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":23,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":136.00999999999985,\"pid\":19785,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":552,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349793}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19818,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":36,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19981,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":171,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999996,\"pid\":20031,\"ramUsage\":1.7,\"server\":\"lauren-8\",\"threads\":175,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349795}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.00999999999996,\"pid\":20033,\"ramUsage\":1.7,\"server\":\"lauren-8\",\"threads\":78,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349795}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20039,\"ramUsage\":1.7,\"server\":\"lauren-8\",\"threads\":142,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349795}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20042,\"ramUsage\":1.7,\"server\":\"lauren-8\",\"threads\":4,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349795}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20076,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":271,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20122,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":382,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"pid\":20148,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":464,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349793}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20184,\"ramUsage\":1.7,\"server\":\"lauren-8\",\"threads\":120,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349795}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20190,\"ramUsage\":1.7,\"server\":\"lauren-8\",\"threads\":116,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349795}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20195,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":13,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20217,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"threads\":60,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":349794}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-8\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":349794,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":349793}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-8\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":349793,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":349795}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-8\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":349795,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-5\",\"httpPortOpen\":true,\"ip\":\"68.5.1.6\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8190.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18090,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":90,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350140}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2375.0099999998815,\"pid\":18731,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":47,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350140}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":218.20999999999904,\"pid\":19176,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":970,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350140}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19231,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":127,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":193.00999999999877,\"pid\":19403,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":193,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19480,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":314,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19677,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":675,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350140}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19710,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":286,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8099999999996,\"pid\":19763,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":29,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19839,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":52,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19982,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":827,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20011,\"ramUsage\":1.7,\"server\":\"lauren-5\",\"threads\":21,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":351185}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20061,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":41,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350140}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20097,\"ramUsage\":1.7,\"server\":\"lauren-5\",\"threads\":24,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":351185}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20123,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":109,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"pid\":20145,\"ramUsage\":1.7,\"server\":\"lauren-5\",\"threads\":150,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":351185}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000002,\"pid\":20181,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":175,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20199,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":485,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350140}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20218,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"threads\":71,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":350141}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-5\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":350141,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350140}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-5\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":350140,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":351185}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-5\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":351185,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-22\",\"httpPortOpen\":true,\"ip\":\"44.2.6.7\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8030.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2485.6099999998805,\"pid\":18091,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":335,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350827}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2357.409999999881,\"pid\":18806,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":155,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350827}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19313,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":126,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350827}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":171.60999999999854,\"pid\":19533,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":183,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351883}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19638,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":642,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351883}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19711,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":52,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351883}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8099999999996,\"pid\":19764,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":96,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351883}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19974,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":351,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351883}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19983,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":1187,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351883}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19984,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":511,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351883}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20062,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":536,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350827}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20124,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":405,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351883}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20130,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"threads\":10,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351883}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351883}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-22\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":351883,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":350827}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-22\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":350827,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":352564}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-22\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":352564,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-17\",\"httpPortOpen\":true,\"ip\":\"44.7.2.1\",\"isConnectedTo\":false,\"maxRam\":16384,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":16383.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2499.8099999998794,\"pid\":17998,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":263,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351190}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2385.8099999998817,\"pid\":18655,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":360,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351190}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":221.8099999999991,\"pid\":19159,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":350,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351190}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"snap-fitness\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":207.40999999999892,\"pid\":19247,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":595,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":203.8099999999989,\"pid\":19258,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":54,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":193.00999999999877,\"pid\":19405,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":118,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":189.40999999999875,\"pid\":19417,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":294,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":185.8099999999987,\"pid\":19428,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":714,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19482,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":667,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19640,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":1653,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19663,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":66,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8099999999996,\"pid\":19765,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":245,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19844,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":92,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351190}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19903,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":146,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"icarus\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":123.81000000000034,\"pid\":19910,\"ramUsage\":1.7,\"server\":\"lauren-17\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":351187}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19985,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":1061,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20012,\"ramUsage\":1.7,\"server\":\"lauren-17\",\"threads\":58,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":351187}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20014,\"ramUsage\":1.7,\"server\":\"lauren-17\",\"threads\":1,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":351187}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20065,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":1778,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20081,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":1,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20133,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":837,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20134,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"threads\":1,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20154,\"ramUsage\":1.7,\"server\":\"lauren-17\",\"threads\":9,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":351187}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351191}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-17\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":351191,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351190}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-17\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":351190,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":351187}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-17\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":351187,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-11\",\"httpPortOpen\":true,\"ip\":\"72.1.1.1\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2467.6099999998814,\"pid\":18184,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":401,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351178}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":225.40999999999914,\"pid\":19128,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":345,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19326,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":380,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19455,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":78,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":168.2099999999985,\"pid\":19547,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":256,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351178}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":154.0099999999988,\"pid\":19635,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":446,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8099999999996,\"pid\":19766,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":796,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8099999999996,\"pid\":19767,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":153,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19840,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":21,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19986,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":186,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20063,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":87,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351178}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20066,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":596,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20131,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"threads\":936,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351532}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-11\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":351532,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351178}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-11\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":351178,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":351175}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-11\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":351175,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-20\",\"httpPortOpen\":true,\"ip\":\"9.1.7.5\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2499.8099999998794,\"pid\":17999,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":687,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351541}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2364.409999999881,\"pid\":18775,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":52,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351541}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":229.00999999999917,\"pid\":19099,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":156,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351542}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19232,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":156,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351542}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19456,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":97,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351542}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19458,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":285,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351541}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19665,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":875,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351542}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19811,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":202,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351542}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19845,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":475,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351541}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19987,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":179,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351542}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20013,\"ramUsage\":1.7,\"server\":\"lauren-20\",\"threads\":55,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":352905}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20015,\"ramUsage\":1.7,\"server\":\"lauren-20\",\"threads\":54,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":352905}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20067,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":239,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351542}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20077,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":87,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351542}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20132,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"threads\":1085,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351542}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":351542}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-20\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":351542,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":351541}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-20\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":351541,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":352905}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-20\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":352905,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-2\",\"httpPortOpen\":true,\"ip\":\"35.3.1.4\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8190.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2428.609999999882,\"pid\":18379,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":1061,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353261}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2357.409999999881,\"pid\":18807,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":107,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353261}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":229.00999999999917,\"pid\":19100,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":112,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":352914}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19202,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":247,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353261}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19233,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":88,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":352914}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19678,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":477,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353261}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19679,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":215,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353261}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19812,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":292,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":352914}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19813,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":891,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353261}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19836,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":212,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":352914}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19988,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":63,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":352914}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20016,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"threads\":203,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":352913}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.60999999999995,\"pid\":20017,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"threads\":135,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":352913}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20078,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":245,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":352914}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20125,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"threads\":342,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":352914}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":352914}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-2\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":352914,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353261}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-2\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":353261,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":352913}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-2\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":352913,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-23\",\"httpPortOpen\":true,\"ip\":\"16.6.3.7\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8192,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2432.009999999882,\"pid\":18328,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"threads\":1061,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353263}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.00999999999897,\"pid\":19203,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"threads\":667,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353263}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19327,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"threads\":142,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353262}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":132.41000000000005,\"pid\":19814,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"threads\":348,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353263}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000033,\"pid\":19878,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"threads\":146,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353262}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000033,\"pid\":19880,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"threads\":331,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353262}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19989,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"threads\":267,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353262}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20057,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"threads\":323,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353262}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20126,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"threads\":1197,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353262}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.609999999999989,\"pid\":20139,\"ramUsage\":1.7,\"server\":\"lauren-23\",\"threads\":205,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":358081}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353262}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-23\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":353262,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353263}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-23\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":353263,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":358081}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-23\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":358081,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren\",\"httpPortOpen\":true,\"ip\":\"9.0.3.7\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8046.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2450.009999999882,\"pid\":18252,\"ramUsage\":1.75,\"server\":\"lauren\",\"threads\":432,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353950}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2357.409999999881,\"pid\":18808,\"ramUsage\":1.75,\"server\":\"lauren\",\"threads\":88,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353950}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19328,\"ramUsage\":1.75,\"server\":\"lauren\",\"threads\":128,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353952}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":193.00999999999877,\"pid\":19387,\"ramUsage\":1.75,\"server\":\"lauren\",\"threads\":1239,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353950}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19841,\"ramUsage\":1.75,\"server\":\"lauren\",\"threads\":174,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353952}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19972,\"ramUsage\":1.75,\"server\":\"lauren\",\"threads\":432,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353952}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19990,\"ramUsage\":1.75,\"server\":\"lauren\",\"threads\":142,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353952}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20079,\"ramUsage\":1.75,\"server\":\"lauren\",\"threads\":413,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353952}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20115,\"ramUsage\":1.75,\"server\":\"lauren\",\"threads\":54,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353950}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20186,\"ramUsage\":1.7,\"server\":\"lauren\",\"threads\":275,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":353951}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20193,\"ramUsage\":1.7,\"server\":\"lauren\",\"threads\":137,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":353951}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20194,\"ramUsage\":1.7,\"server\":\"lauren\",\"threads\":179,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":353951}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20196,\"ramUsage\":1.75,\"server\":\"lauren\",\"threads\":922,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353952}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":353952}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":353952,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":353950}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":353950,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":353951}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":353951,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-3\",\"httpPortOpen\":true,\"ip\":\"27.6.2.1\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8190.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2442.809999999882,\"pid\":18273,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":1061,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":354639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":229.00999999999917,\"pid\":19101,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":83,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":354641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":225.40999999999914,\"pid\":19132,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":463,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":354639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19459,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":465,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":354639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":150.40999999999897,\"pid\":19680,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":910,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":354639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19842,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":294,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":354641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19846,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":445,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":354639}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":128.8100000000003,\"pid\":19849,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":34,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":354641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19991,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":528,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":354641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20052,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":259,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":354641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20127,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":62,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":354641}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.410000000000002,\"pid\":20174,\"ramUsage\":1.7,\"server\":\"lauren-3\",\"threads\":59,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":354640}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.8099999999999998,\"pid\":20197,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"threads\":19,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":354641}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":354641}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-3\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":354641,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":354639}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-3\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":354639,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":354640}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-3\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":354640,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-19\",\"httpPortOpen\":true,\"ip\":\"16.3.9.7\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2425.009999999882,\"pid\":18410,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"threads\":1075,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":355328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19323,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"threads\":1149,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":355329}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19460,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"threads\":489,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":355328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000033,\"pid\":19881,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"threads\":17,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":355329}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19992,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"threads\":344,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":355329}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20058,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"threads\":138,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":355329}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20116,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"threads\":1185,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":355328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20128,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"threads\":284,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":355329}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":355329}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-19\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":355329,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":355328}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-19\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":355328,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-19\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":355327,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-7\",\"httpPortOpen\":true,\"ip\":\"73.4.6.9\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2396.4099999998816,\"pid\":18555,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"threads\":1175,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":193.00999999999877,\"pid\":19395,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"threads\":22,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000033,\"pid\":19876,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"threads\":30,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":355680}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19993,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"threads\":1273,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357391}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20053,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"threads\":632,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357391}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20059,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"threads\":424,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357391}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20080,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"threads\":3,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357391}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20129,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"threads\":1122,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357391}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357391}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-7\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":357391,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":355680}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-7\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":355680,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":355677}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-7\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":355677,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-12\",\"httpPortOpen\":true,\"ip\":\"44.1.7.9\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2364.409999999881,\"pid\":18764,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"threads\":1175,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19324,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"threads\":127,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.20999999999887,\"pid\":19329,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"threads\":157,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":139.8099999999996,\"pid\":19752,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"threads\":614,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":356029}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19994,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"threads\":10,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19995,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"threads\":1278,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20082,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"threads\":198,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20113,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"threads\":891,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357390}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.40999999999998,\"pid\":20114,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"threads\":231,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357390}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357390}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-12\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":357390,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":356029}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-12\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":356029,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-12\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":356026,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-21\",\"httpPortOpen\":true,\"ip\":\"98.6.1.3\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8191.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19453,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"threads\":1175,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.8099999999986,\"pid\":19472,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"threads\":275,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357740}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000033,\"pid\":19877,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"threads\":702,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":357739}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19996,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"threads\":1288,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357740}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20074,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"threads\":1241,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357740}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":357740}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-21\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":357740,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":357739}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-21\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":357739,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-21\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":357737,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"lauren-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-10\",\"httpPortOpen\":true,\"ip\":\"20.7.1.4\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":8190.6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19697,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"threads\":1175,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\",1],\"dataMap\":{},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19705,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"threads\":1239,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":358090}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.00999999999917,\"pid\":19713,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"threads\":402,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":358091}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":125.01000000000033,\"pid\":19882,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"threads\":33,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":358091}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.20999999999994,\"pid\":19997,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"threads\":1288,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":358091}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20075,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"threads\":77,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":358091}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\",1],\"dataMap\":{},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999997,\"pid\":20083,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"threads\":308,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":358091}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\",1],\"dataMap\":{},\"filename\":\"hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.01,\"pid\":20155,\"ramUsage\":1.7,\"server\":\"lauren-10\",\"threads\":163,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":358088}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that grows the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run grow.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run grow.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountGrown = await ns.grow(host, { stock: true });\\n    amountGrown === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:file:///23c6a4e4-5484-44a1-acd6-035337e78909\",\"moduleSequenceNumber\":358091}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-10\",\"_hash\":\"e945142ad6d997f0c79d01662eb0785d4bb6a43a9a159e5d20a9c96fdf5e6f34\",\"moduleSequenceNumber\":358091,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that weakens the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run weaken.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run weaken.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountDecreased = await ns.weaken(host, { stock: true });\\n    amountDecreased === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:file:///27133086-7104-46b9-9725-dd2e67f22550\",\"moduleSequenceNumber\":358090}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"lauren-10\",\"_hash\":\"cfeb253726dc037a133269588fceeb106b6eb044a1210133121a71433021c414\",\"moduleSequenceNumber\":358090,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Small script that hacks the host.\\n *\\n * If the number of times is passed into the argument, then only runs for that\\n * many times. Otherwise, runs infinitely.\\n *\\n * @example run hack.js <hostname> <number of times>\\n * @param {import('index').NS } ns\\n */\\nexport async function main(ns) {\\n  const host = ns.args[0];\\n  const numberOfTimes = ns.args[1];\\n  if (typeof host !== 'string') {\\n    ns.tprint(`usage: run hack.js <host> <number of times>`);\\n    return;\\n  }\\n  let index = 0;\\n  let noEffectTimeCount = 0;\\n  while (\\n    (typeof numberOfTimes !== 'number' ? true : index++ < numberOfTimes) &&\\n    noEffectTimeCount < 5\\n  ) {\\n    const amountStolen = await ns.hack(host, { stock: true });\\n    amountStolen === 0 ? noEffectTimeCount++ : (noEffectTimeCount = 0);\\n  }\\n}\\n\\n/**\\n * @param {Object} data\\n * @returns {string[]}\\n */\\nexport const autocomplete = data => [...data.servers];\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:file:///ff641d5b-b3bd-4a53-9d14-78b3063dd4c5\",\"moduleSequenceNumber\":358088}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lauren-10\",\"_hash\":\"23eeceade267c2508b3185b29f4a5dbbab36284c57f85a03b9b9c60b6a5fb855\",\"moduleSequenceNumber\":358088,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":176.0004,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":27120.360649745395,\"favor\":66.002,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":4.6945,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":174.0004,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":172.0004,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":2.0076,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":7.0072,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":135.0004,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":149.0004,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":139.0004,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":180.0004,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":122.0008,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.008,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":256.8973,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":281.7922,\"isBanned\":false,\"isMember\":true,\"name\":\"MegaCorp\",\"playerReputation\":2434362.9082586477}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":239.925,\"isBanned\":false,\"isMember\":true,\"name\":\"BitRunners\",\"playerReputation\":2115238.872205798}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":246.6153,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":2185172.213476973}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":249.4883,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":2203331.9239046103}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":122.8427,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":247.1138,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":2188267.8249348756}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"Speakers for the Dead\",\"playerReputation\":73890.08803529556}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"The Dark Army\",\"playerReputation\":62311.288791784755}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":160.7723,\"isBanned\":false,\"isMember\":true,\"name\":\"The Syndicate\",\"playerReputation\":1582846.604693039}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":81.2158,\"isBanned\":false,\"isMember\":true,\"name\":\"Tetrads\",\"playerReputation\":989242.6829659631}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":250.2859,\"isBanned\":false,\"isMember\":true,\"name\":\"Slum Snakes\",\"playerReputation\":2126098.5252131466}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":313.9212,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":2625326.485126968}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":133.8232,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":1400535.2829518863}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":250.1874,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":2207739.365721698}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":false}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":false}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":false}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":false}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":false}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":false}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":false}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":false}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":true}}}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":23358.423085559894,\"lastPrice\":23392.005008101536,\"playerShares\":169432,\"playerAvgPx\":23925.682181771237,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.45,\"b\":false,\"otlkMag\":20.854762273182892,\"otlkMagForecast\":29.89863196900016,\"cap\":277398475,\"spreadPerc\":0.2,\"shareTxForMovement\":56865,\"shareTxUntilMovement\":5980,\"totalShares\":125600000,\"maxShares\":25100000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":22856.562346376577,\"lastPrice\":22823.021000667533,\"playerShares\":51,\"playerAvgPx\":22858.177889259885,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.46,\"b\":true,\"otlkMag\":18.980519467500717,\"otlkMagForecast\":68.51975052586654,\"cap\":206122821,\"spreadPerc\":0.2,\"shareTxForMovement\":75796,\"shareTxUntilMovement\":75796,\"totalShares\":94800000,\"maxShares\":19000000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":19953.779018176643,\"lastPrice\":20002.228403536807,\"playerShares\":221575,\"playerAvgPx\":18981.606650620484,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":true,\"otlkMag\":11.959387933730559,\"otlkMagForecast\":63.026934511814154,\"cap\":334829730,\"spreadPerc\":0.4,\"shareTxForMovement\":60591,\"shareTxUntilMovement\":25976,\"totalShares\":116200000,\"maxShares\":23200000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":16491.751817951354,\"lastPrice\":16453.37866591539,\"playerShares\":287458,\"playerAvgPx\":17638.35361235001,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":11.369347980722768,\"otlkMagForecast\":61.89617086451028,\"cap\":106387014,\"spreadPerc\":0.4,\"shareTxForMovement\":58872,\"shareTxUntilMovement\":12412,\"totalShares\":88400000,\"maxShares\":17700000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":44018.25259644061,\"lastPrice\":44112.47563864563,\"playerShares\":211,\"playerAvgPx\":39777.073646444645,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":true,\"otlkMag\":10.953076678356311,\"otlkMagForecast\":62.01272713443227,\"cap\":299930874,\"spreadPerc\":0.2,\"shareTxForMovement\":75369,\"shareTxUntilMovement\":75369,\"totalShares\":49100000,\"maxShares\":9800000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":68557.14231166417,\"lastPrice\":68323.57938451965,\"playerShares\":42812,\"playerAvgPx\":49280.30366736886,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.07,\"b\":true,\"otlkMag\":18.61540361681719,\"otlkMagForecast\":65.31050312696902,\"cap\":273961535,\"spreadPerc\":0.1,\"shareTxForMovement\":65336,\"shareTxUntilMovement\":24648,\"totalShares\":27000000,\"maxShares\":5400000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":20336.923832408964,\"lastPrice\":20286.370652340636,\"playerShares\":2585233,\"playerAvgPx\":17034.886444896685,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.78,\"b\":true,\"otlkMag\":10.438388816988637,\"otlkMagForecast\":60.30635454966499,\"cap\":83150456,\"spreadPerc\":0.1,\"shareTxForMovement\":57242,\"shareTxUntilMovement\":49369,\"totalShares\":80300000,\"maxShares\":16100000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":24229.78234395414,\"lastPrice\":24133.40429665903,\"playerShares\":1112291,\"playerAvgPx\":20614.985184636287,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.25,\"b\":true,\"otlkMag\":13.31365421116046,\"otlkMagForecast\":64.01973953534274,\"cap\":499390877,\"spreadPerc\":0.6,\"shareTxForMovement\":51523,\"shareTxUntilMovement\":22710,\"totalShares\":67400000,\"maxShares\":13500000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":29183.3943394124,\"lastPrice\":29258.915793592478,\"playerShares\":264754,\"playerAvgPx\":25306.308928858667,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.81,\"b\":true,\"otlkMag\":7.688284361315196,\"otlkMagForecast\":56.686801169526646,\"cap\":298461249,\"spreadPerc\":1,\"shareTxForMovement\":86355,\"shareTxUntilMovement\":84566,\"totalShares\":50400000,\"maxShares\":10100000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":15177.838826438663,\"lastPrice\":15208.872946222946,\"playerShares\":52164,\"playerAvgPx\":17492.197917195674,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":false,\"otlkMag\":10.203547066183756,\"otlkMagForecast\":40.404050103022556,\"cap\":188785452,\"spreadPerc\":1,\"shareTxForMovement\":63501,\"shareTxUntilMovement\":16384,\"totalShares\":56300000,\"maxShares\":11300000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":10427.398014991633,\"lastPrice\":10447.053215743357,\"playerShares\":507647,\"playerAvgPx\":11203.926135184172,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":false,\"otlkMag\":8.557657405088003,\"otlkMagForecast\":40.935168276773084,\"cap\":166320560,\"spreadPerc\":0.9,\"shareTxForMovement\":73218,\"shareTxUntilMovement\":10221,\"totalShares\":71100000,\"maxShares\":14200000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":10287.600439563892,\"lastPrice\":10311.922218086369,\"playerShares\":519976,\"playerAvgPx\":11864.9224376376,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":false,\"otlkMag\":6.4056535636782606,\"otlkMagForecast\":43.31922699569776,\"cap\":71974692,\"spreadPerc\":0.2,\"shareTxForMovement\":92471,\"shareTxUntilMovement\":40484,\"totalShares\":98800000,\"maxShares\":19800000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":22725.30702931509,\"lastPrice\":22772.499491602914,\"playerShares\":299197,\"playerAvgPx\":22354.6892010412,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":false,\"otlkMag\":8.288879495894147,\"otlkMagForecast\":42.498633202159965,\"cap\":479089967,\"spreadPerc\":0.6,\"shareTxForMovement\":64954,\"shareTxUntilMovement\":29112,\"totalShares\":34900000,\"maxShares\":7000000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":17839.58162576651,\"lastPrice\":17807.15372130696,\"playerShares\":1168,\"playerAvgPx\":17228.99365515506,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.57,\"b\":true,\"otlkMag\":11.381976000229475,\"otlkMagForecast\":59.22260318629324,\"cap\":511229762,\"spreadPerc\":0.4,\"shareTxForMovement\":73081,\"shareTxUntilMovement\":72591,\"totalShares\":39400000,\"maxShares\":7900000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":8324.817218781598,\"lastPrice\":8342.10493340493,\"playerShares\":3049960,\"playerAvgPx\":8549.93825530047,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":6.113973411838148,\"otlkMagForecast\":56.40994312821599,\"cap\":198050125,\"spreadPerc\":0.3,\"shareTxForMovement\":64406,\"shareTxUntilMovement\":47238,\"totalShares\":74000000,\"maxShares\":14800000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":9790.059350175397,\"lastPrice\":9767.279754651987,\"playerShares\":1262564,\"playerAvgPx\":10800.395245436614,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":5.790064394363505,\"otlkMagForecast\":44.85618423125735,\"cap\":93614129,\"spreadPerc\":0.9,\"shareTxForMovement\":66339,\"shareTxUntilMovement\":66339,\"totalShares\":57900000,\"maxShares\":11600000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":14755.103991254851,\"lastPrice\":14717.95695743922,\"playerShares\":32086,\"playerAvgPx\":14849.523932621634,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":true,\"otlkMag\":7.615737532998231,\"otlkMagForecast\":58.691584826410995,\"cap\":144064782,\"spreadPerc\":0.5,\"shareTxForMovement\":82265,\"shareTxUntilMovement\":55140,\"totalShares\":44900000,\"maxShares\":9000000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":26151.4856051451,\"lastPrice\":26199.109042891032,\"playerShares\":454895,\"playerAvgPx\":26207.342434459453,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.57,\"b\":true,\"otlkMag\":9.629886472271837,\"otlkMagForecast\":60.8207985720279,\"cap\":69157424,\"spreadPerc\":0.6,\"shareTxForMovement\":83015,\"shareTxUntilMovement\":48295,\"totalShares\":28800000,\"maxShares\":5800000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":24824.494163689116,\"lastPrice\":24886.356245629202,\"playerShares\":164691,\"playerAvgPx\":24831.678688854066,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.78,\"b\":true,\"otlkMag\":5.889412631078097,\"otlkMagForecast\":54.91962833013822,\"cap\":126996309,\"spreadPerc\":0.9,\"shareTxForMovement\":65113,\"shareTxUntilMovement\":35758,\"totalShares\":22700000,\"maxShares\":4500000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":3688.6420879176917,\"lastPrice\":3658.6022323861034,\"playerShares\":1043363,\"playerAvgPx\":3548.396076567923,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.57,\"b\":true,\"otlkMag\":5.702207154726114,\"otlkMagForecast\":54.968595454962156,\"cap\":35836225,\"spreadPerc\":1,\"shareTxForMovement\":30238,\"shareTxUntilMovement\":28965,\"totalShares\":59500000,\"maxShares\":11900000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":7148.636127947399,\"lastPrice\":7122.240975528369,\"playerShares\":9047339,\"playerAvgPx\":7797.692259423511,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.16,\"b\":false,\"otlkMag\":5.458470269206122,\"otlkMagForecast\":43.19586656253794,\"cap\":108177459,\"spreadPerc\":0.7,\"shareTxForMovement\":100791,\"shareTxUntilMovement\":29659,\"totalShares\":53100000,\"maxShares\":10600000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":2614.4763257121904,\"lastPrice\":2610.0568032042884,\"playerShares\":11999998,\"playerAvgPx\":2799.7647796918136,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.53,\"b\":false,\"otlkMag\":1.5399540480252096,\"otlkMagForecast\":50.74356165137234,\"cap\":66742742,\"spreadPerc\":0.3,\"shareTxForMovement\":83725,\"shareTxUntilMovement\":62252,\"totalShares\":60200000,\"maxShares\":12000000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":13919.952197263608,\"lastPrice\":14004.89383543183,\"playerShares\":52465,\"playerAvgPx\":13918.477664875887,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.91,\"b\":true,\"otlkMag\":8.969881152687861,\"otlkMagForecast\":61.269917406915,\"cap\":13798018,\"spreadPerc\":1.3,\"shareTxForMovement\":55925,\"shareTxUntilMovement\":6985,\"totalShares\":47700000,\"maxShares\":9500000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":4369.643478257149,\"lastPrice\":4347.420556429525,\"playerShares\":11800000,\"playerAvgPx\":3478.477180891619,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.6,\"b\":true,\"otlkMag\":1.248190625100036,\"otlkMagForecast\":51.68852945692666,\"cap\":33217780,\"spreadPerc\":0.6,\"shareTxForMovement\":31629,\"shareTxUntilMovement\":3467,\"totalShares\":59000000,\"maxShares\":11800000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":1190.7711722499741,\"lastPrice\":1187.0167633720378,\"playerShares\":29100000,\"playerAvgPx\":1180.40572942999,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.99,\"b\":false,\"otlkMag\":2.4388758262082484,\"otlkMagForecast\":44.30985704148741,\"cap\":17297159,\"spreadPerc\":0.9,\"shareTxForMovement\":64008,\"shareTxUntilMovement\":29490,\"totalShares\":145700000,\"maxShares\":29100000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":4020.50600598688,\"lastPrice\":3972.4063031102282,\"playerShares\":2900000,\"playerAvgPx\":6539.038508890477,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":3.79,\"b\":true,\"otlkMag\":0.11976662734430188,\"otlkMagForecast\":44.81454516874672,\"cap\":35096868,\"spreadPerc\":1.3,\"shareTxForMovement\":52397,\"shareTxUntilMovement\":48090,\"totalShares\":14700000,\"maxShares\":2900000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":8622.116298774936,\"lastPrice\":8596.847965576359,\"playerShares\":1600000,\"playerAvgPx\":7927.408283120656,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.92,\"b\":true,\"otlkMag\":1.9072191377226204,\"otlkMagForecast\":49.03797490727586,\"cap\":143586152,\"spreadPerc\":1.3,\"shareTxForMovement\":89413,\"shareTxUntilMovement\":15284,\"totalShares\":7900000,\"maxShares\":1600000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":1098.8885366118125,\"lastPrice\":1096.4015267825598,\"playerShares\":8400000,\"playerAvgPx\":1072.1283566884752,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":true,\"otlkMag\":3.0841758738160188,\"otlkMagForecast\":50.810942943510334,\"cap\":5955859,\"spreadPerc\":0.7,\"shareTxForMovement\":131517,\"shareTxUntilMovement\":21348,\"totalShares\":41800000,\"maxShares\":8400000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":3159.8027129109755,\"lastPrice\":3148.837268534463,\"playerShares\":905552,\"playerAvgPx\":3160.954960163381,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.09,\"b\":true,\"otlkMag\":1.796288097165363,\"otlkMagForecast\":48.900827335123644,\"cap\":42800648,\"spreadPerc\":1.3,\"shareTxForMovement\":21951,\"shareTxUntilMovement\":12407,\"totalShares\":10000000,\"maxShares\":2000000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":1066.6286375983,\"lastPrice\":1058.0427253893536,\"playerShares\":6100000,\"playerAvgPx\":1181.9540081294258,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.54,\"b\":true,\"otlkMag\":5.487257020677068,\"otlkMagForecast\":57.36717892491164,\"cap\":9308214,\"spreadPerc\":0.9,\"shareTxForMovement\":36272,\"shareTxUntilMovement\":31098,\"totalShares\":30600000,\"maxShares\":6100000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":834.0205376131387,\"lastPrice\":830.5709307693556,\"playerShares\":46384028,\"playerAvgPx\":715.8618262984955,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.3,\"b\":true,\"otlkMag\":5.305868151895348,\"otlkMagForecast\":62.84334398099289,\"cap\":10111491,\"spreadPerc\":0.5,\"shareTxForMovement\":58010,\"shareTxUntilMovement\":45986,\"totalShares\":232000000,\"maxShares\":46400000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":31198.698952448856,\"lastPrice\":31128.089906699894,\"playerShares\":190457,\"playerAvgPx\":30634.699980799112,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.71,\"b\":true,\"otlkMag\":8.088292454746986,\"otlkMagForecast\":57.9576331525951,\"cap\":253682539,\"spreadPerc\":0.8,\"shareTxForMovement\":205097,\"shareTxUntilMovement\":18840,\"totalShares\":13100000,\"maxShares\":2600000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":17251.683480519394,\"lastPrice\":17281.446347450965,\"playerShares\":134919,\"playerAvgPx\":16224.936268737896,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":true,\"otlkMag\":10.225926514323701,\"otlkMagForecast\":60.507517018541,\"cap\":145547539,\"spreadPerc\":0.9,\"shareTxForMovement\":203685,\"shareTxUntilMovement\":72476,\"totalShares\":26000000,\"maxShares\":5200000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":166781,\"lastUpdate\":1642697079376,\"ticksUntilCycle\":2}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":30,\"CodeInstructionRunTime\":100,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":true,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxLogCapacity\":500,\"MaxPortCapacity\":70,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":0,\"PurchaseAugmentationsOrder\":3,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":true,\"SuppressFactionInvites\":true,\"SuppressMessages\":true,\"SuppressTravelConfirmation\":true,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":true,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":true,\"MonacoFontSize\":16,\"MonacoVim\":true,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true}}","VersionSave":"10","AllGangsSave":"","LastExportBonus":"1642617240091","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}","SaveTimestamp":"1642697080199"}}