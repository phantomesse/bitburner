{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":68,\"max\":68},\"skills\":{\"hacking\":3811,\"strength\":571,\"defense\":589,\"dexterity\":501,\"agility\":193,\"charisma\":152,\"intelligence\":0},\"exp\":{\"hacking\":1148931287.3336606,\"strength\":2263.139770911597,\"defense\":2263.139770911597,\"dexterity\":2602.610736548397,\"agility\":2824.916852928281,\"charisma\":2256.2813615562654,\"intelligence\":0},\"mults\":{\"hacking_chance\":2.9536864379865424,\"hacking_speed\":3.1784580446610278,\"hacking_money\":9.582543912948495,\"hacking_grow\":4.478390484794237,\"hacking\":8.152211807345948,\"hacking_exp\":12.593710560023048,\"strength\":10.595658849014448,\"strength_exp\":2.84876816438454,\"defense\":10.914591724068398,\"defense_exp\":2.84876816438454,\"dexterity\":8.701977121664704,\"dexterity_exp\":3.276083389042221,\"agility\":3.2378451509084596,\"agility_exp\":2.84876816438454,\"charisma\":2.8375082111656287,\"charisma_exp\":2.84876816438454,\"hacknet_node_money\":5.163392297946978,\"hacknet_node_purchase_cost\":0.37366940325590736,\"hacknet_node_ram_cost\":0.48845673628223185,\"hacknet_node_core_cost\":0.48845673628223185,\"hacknet_node_level_cost\":0.41518822583989706,\"company_rep\":3.9313000668506657,\"faction_rep\":2.978257626402019,\"work_money\":2.251990643782245,\"crime_success\":2.814988304727806,\"crime_money\":4.451200256850844,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":72,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"LuminCloaking-V1 Skin Implant\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Augmented Targeting II\"},{\"level\":1,\"name\":\"LuminCloaking-V2 Skin Implant\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"SmartSonar Implant\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"HemoRecirculator\"},{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V2 Upgrade\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"Neuregen Gene Modification\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"DermaForce Particle Barrier\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":1,\"name\":\"Power Recirculation Core\"},{\"level\":1,\"name\":\"BrachiBlades\"},{\"level\":1,\"name\":\"INFRARET Enhancement\"},{\"level\":1,\"name\":\"Embedded Netburner Module Analyze Engine\"},{\"level\":1,\"name\":\"Synfibril Muscle\"},{\"level\":1,\"name\":\"Bionic Arms\"},{\"level\":1,\"name\":\"The Shadow's Simulacrum\"},{\"level\":1,\"name\":\"Bionic Spine\"},{\"level\":1,\"name\":\"Combat Rib III\"},{\"level\":1,\"name\":\"Augmented Targeting III\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"NutriGen Implant\"}],\"city\":\"Aevum\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"Daedalus\",\"BitRunners\",\"The Black Hand\",\"NiteSec\",\"New Tokyo\",\"Tetrads\",\"Slum Snakes\",\"Netburners\",\"Tian Di Hui\",\"CyberSec\"],\"factionInvitations\":[\"Chongqing\",\"Ishima\"],\"factionRumors\":{\"ctor\":\"JSONSet\",\"data\":[\"The Syndicate\",\"KuaiGong International\",\"OmniTek Incorporated\",\"Speakers for the Dead\"]},\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4605.999999998141,\"ram\":64,\"totalMoneyGenerated\":216186957.41456416,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4604.99999999814,\"ram\":64,\"totalMoneyGenerated\":215756613.61483902,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4590.7999999981375,\"ram\":64,\"totalMoneyGenerated\":215159444.75128707,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4588.799999998137,\"ram\":64,\"totalMoneyGenerated\":214659503.29343694,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4586.799999998137,\"ram\":64,\"totalMoneyGenerated\":214148633.00184375,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4585.799999998136,\"ram\":64,\"totalMoneyGenerated\":213812153.6578164,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4583.799999998136,\"ram\":64,\"totalMoneyGenerated\":213464518.71030042,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4582.799999998136,\"ram\":64,\"totalMoneyGenerated\":213069678.68480605,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4581.799999998135,\"ram\":64,\"totalMoneyGenerated\":212675720.88670117,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4580.799999998135,\"ram\":64,\"totalMoneyGenerated\":212369275.53478462,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4578.799999998135,\"ram\":64,\"totalMoneyGenerated\":211962455.18772224,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4577.799999998134,\"ram\":64,\"totalMoneyGenerated\":211629889.09979618,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4576.799999998134,\"ram\":64,\"totalMoneyGenerated\":211380583.44400668,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4571.599999998133,\"ram\":64,\"totalMoneyGenerated\":211089391.79304063,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4570.599999998132,\"ram\":64,\"totalMoneyGenerated\":210723082.1351152,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4562.59999999813,\"ram\":64,\"totalMoneyGenerated\":210456568.26606014,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4558.5999999981295,\"ram\":64,\"totalMoneyGenerated\":210152294.44962215,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4535.599999998125,\"ram\":64,\"totalMoneyGenerated\":209907148.54785118,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4528.399999998123,\"ram\":64,\"totalMoneyGenerated\":209656120.8837246,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4524.399999998122,\"ram\":64,\"totalMoneyGenerated\":209512306.68670797,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4446.999999998105,\"ram\":64,\"totalMoneyGenerated\":209473871.1482219,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":4424.999999998099,\"ram\":64,\"totalMoneyGenerated\":209408221.04672158,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":3526.599999998898,\"ram\":64,\"totalMoneyGenerated\":167002380.51936316,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":3525.599999998899,\"ram\":64,\"totalMoneyGenerated\":166955025.4520123,\"name\":\"hacknet-node-23\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":3086.799999999344,\"ram\":64,\"totalMoneyGenerated\":146175621.898449,\"name\":\"hacknet-node-24\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":3058.599999999376,\"ram\":64,\"totalMoneyGenerated\":144840208.99915442,\"name\":\"hacknet-node-25\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":3032.3999999994053,\"ram\":64,\"totalMoneyGenerated\":143599506.23456183,\"name\":\"hacknet-node-26\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":716.4000000000259,\"ram\":64,\"totalMoneyGenerated\":33925170.25011841,\"name\":\"hacknet-node-27\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":715.4000000000257,\"ram\":64,\"totalMoneyGenerated\":33877815.18276762,\"name\":\"hacknet-node-28\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":714.4000000000254,\"ram\":64,\"totalMoneyGenerated\":33830460.11541683,\"name\":\"hacknet-node-29\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":47355.06735080518,\"onlineTimeSeconds\":713.4000000000252,\"ram\":64,\"totalMoneyGenerated\":33783105.04806604,\"name\":\"hacknet-node-30\"}}],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0,\"Company Favor\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{\"Joe's Guns\":\"Part-time Employee\",\"KuaiGong International\":\"IT Intern\",\"Omega Software\":\"Junior Software Engineer\",\"Omnia Cybersystems\":\"Junior Software Engineer\",\"OmniTek Incorporated\":\"Junior Software Engineer\"},\"karma\":-7314.949999999634,\"numPeopleKilled\":119,\"location\":\"Travel Agency\",\"money\":78877607540.23141,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-2786.400000000001,\"codingcontract\":0,\"corporation\":0,\"crime\":45201938.608320184,\"gang\":0,\"hacking\":5138190096697.687,\"hacknet\":5570643725.879307,\"hacknet_expenses\":-90338960707.79889,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-4772837962796.076,\"total\":78876607540.23141,\"work\":2211468.3241381245,\"servers\":-91470720000,\"other\":-110281400000,\"augmentations\":-2500000}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-4254626.400000005,\"codingcontract\":2587500000,\"corporation\":0,\"crime\":3040322449.3825936,\"gang\":0,\"hacking\":129852195101157.31,\"hacknet\":146899599542.0734,\"hacknet_expenses\":-48828304116088.9,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":-12474829784305.523,\"total\":290713885483.7036,\"work\":52354605.57105219,\"servers\":-22094423479464.39,\"other\":-26487485090494.375,\"augmentations\":-19829014267792.125}},\"playtimeSinceLastAug\":4610200,\"playtimeSinceLastBitnode\":683787600,\"lastAugReset\":1704749304197,\"lastNodeReset\":-1,\"purchasedServers\":[\"lauren\",\"lauren-0\",\"lauren-1\",\"lauren-2\",\"lauren-3\",\"lauren-4\",\"lauren-5\",\"lauren-6\",\"lauren-7\",\"lauren-8\",\"lauren-9\",\"lauren-10\",\"lauren-11\",\"lauren-12\",\"lauren-13\",\"lauren-14\",\"lauren-15\",\"lauren-16\",\"lauren-17\",\"lauren-18\",\"lauren-19\",\"lauren-20\",\"lauren-21\",\"lauren-22\",\"lauren-23\"],\"scriptProdSinceLastAug\":4905283926727.904,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1704070135213},{\"ID\":\"FROZE\",\"unlockedOn\":1704070135222},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1704079402616},{\"ID\":\"WORKOUT\",\"unlockedOn\":1704081997256},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1704085310642},{\"ID\":\"TOR\",\"unlockedOn\":1704088636233},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1704091709650},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1704125258633},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1704144228234},{\"ID\":\"TRAVEL\",\"unlockedOn\":1704151357816},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1704169468544},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1704170548545},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1704228378452},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1704238095961},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1704241395954},{\"ID\":\"NITESEC\",\"unlockedOn\":1704242995955},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1704331510388},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1704337810388},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1704343390388},{\"ID\":\"4S\",\"unlockedOn\":1704343870389},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1704404274170},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1704651907253},{\"ID\":\"DISCOUNT\",\"unlockedOn\":1704661239445},{\"ID\":\"DONATION\",\"unlockedOn\":1704671467161},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1704684346576},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1704729001977},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1704729001980},{\"ID\":\"REPUTATION_10M\",\"unlockedOn\":1704743986025}],\"terminalCommandHistory\":[\"backdoor\",\"home\",\"connect hong-fang-tea; connect CSEC; connect silver-helix; connect avmnite-02h; connect rothman-uni; connect alpha-ent; connect aerocorp; connect deltaone; connect defcomm\",\"backdoor\",\"home\",\"connect hong-fang-tea; connect CSEC; connect silver-helix; connect avmnite-02h; connect rothman-uni; connect alpha-ent; connect aerocorp; connect deltaone; connect defcomm; connect infocomm\",\"backdoor\",\"home\",\"connect hong-fang-tea; connect CSEC; connect silver-helix; connect avmnite-02h; connect rothman-uni; connect alpha-ent; connect aerocorp; connect deltaone; connect icarus\",\"backdoor\",\"home\",\"connect hong-fang-tea; connect CSEC; connect silver-helix; connect avmnite-02h; connect rothman-uni; connect alpha-ent; connect aerocorp; connect deltaone; connect zeus-med\",\"backdoor\",\"home\",\"connect hong-fang-tea; connect CSEC; connect silver-helix; connect avmnite-02h; connect rothman-uni; connect alpha-ent; connect aerocorp; connect unitalife\",\"backdoor\",\"home\",\"connect hong-fang-tea; connect CSEC; connect silver-helix; connect avmnite-02h; connect rothman-uni; connect alpha-ent; connect aerocorp; connect unitalife; connect univ-energy\",\"backdoor\",\"home\",\"connect hong-fang-tea; connect CSEC; connect silver-helix; connect avmnite-02h; connect rothman-uni; connect alpha-ent; connect snap-fitness\",\"backdoor\",\"home\",\"connect hong-fang-tea; connect CSEC; connect silver-helix; connect avmnite-02h; connect syscore\",\"backdoor\",\"home\",\"connect darkweb\",\"backdoor\",\"home\",\"run get-net-worth.js \",\"run manage-servers.js \",\"run manage-hacknet.js \",\"run sell-all-stock.js \",\"kill manage-servers.js ; run manage-servers.js \",\"run manage-stocks.js \",\"run manage-hacking.js 30\",\"killall\",\"run init.js \",\"kill manage-hacking.js ; run manage-hacking.js 30\",\"kill manage-servers.js \",\"run monitor-servers.js \",\"run get-net-worth.js \",\"clear\",\"ls\",\"kill manage-hacknet.js \",\"clear\",\"ls\",\"run find-backdoors.js \",\"run sell-all-stock.js \",\"run manage-stocks.js \"],\"lastUpdate\":1704753914337,\"lastSave\":1704753892941,\"totalPlaytime\":683787600,\"currentWork\":{\"ctor\":\"CrimeWork\",\"data\":{\"type\":\"CRIME\",\"singularity\":false,\"cyclesWorked\":1790,\"crimeType\":\"Homicide\",\"unitCompleted\":1000}},\"focus\":false,\"entropy\":0,\"identifier\":\"113891341353c3\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":2,\"fn\":\"contract-392216.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[7,-4,-9,-9,-5,4,-8,-3,-9,0,-5,4,-3,7,-4,4,10,-1,-9,4,-4,5,3,4,2,-3,-3,3,-5,1,-7,5,7],\"reward\":null}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":2,\"fn\":\"contract-761378.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-8,-4,2,-4,9,8],\"reward\":null}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":2,\"fn\":\"contract-32101.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-3,-7,1,-7,9,-7,2,3,-1,5,-3,10,1,3,5,-7,5,-2,-3,-1,-5,3,3],\"reward\":null}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":2,\"fn\":\"contract-336224.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-8,3,4,10,6,-3,5,6,6,7,-4,7,-6],\"reward\":null}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":2,\"fn\":\"contract-108415.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[3,1,-9,-3,6,6,10,-10,-2,-8,-6,-3,-3,8,1,8,-4,9,-10,-2,-4,-4,-2,6,-9,2,-9,-10,9,-1,-5,4,2,-1,10],\"reward\":null}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":1,\"fn\":\"contract-927756.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-10,-8,8,-9,2,-4,8,-6,8,-9,7,-8,-10,2,5,5,5,-4,-6,9,1,0,2,-1,-10,7,8,-5,8,10,3,10,-1,3],\"reward\":null}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":1,\"fn\":\"contract-755811.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-2,-6,5,0,-4,2,7,-1,10,6,8,4,-9,3,6,-10,-8,5,5,3,-8],\"reward\":null}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":1,\"fn\":\"contract-243540.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-3,-5,1,-4,-9,10,4,-6,3,8,-8,9,4,5,-2,-5,-1,-7,0,9,-2,8,-4,-7,8,-5,-6,-7,9,-2,4,7,3],\"reward\":null}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":1,\"fn\":\"contract-969413.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[8,-7,-3,-5,-5,-7,7,-9,-1,-4,-2,8,4,-8,-2,3,10,2],\"reward\":null}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":1,\"fn\":\"contract-435722.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-7,-2,-9,0,10,2,-2,5,-8,8,-8,-10,-10,2,-3,-3,-10,1,4,1,9,-3,-4,-1,-5,-2,-4,-10,6,-6,3,5,-4,-7,-5],\"reward\":null}}],\"cpuCores\":5,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":true,\"ip\":\"38.4.6.6\",\"isConnectedTo\":true,\"maxRam\":262144,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"BruteSSH.exe\",\"fl1ght.exe\",\"SQLInject.exe\",\"HTTPWorm.exe\"],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { HOME_HOSTNAME } from 'utils/constants';\\n\\n/**\\n * @param {import(\\\"../NetscriptDefinitions\\\").ReactNode} content\\n * @param {[Object.<string, string|number>]} style\\n * @returns {import(\\\"../NetscriptDefinitions\\\").ReactElement}\\n */\\nexport function createReactElement(content, style) {\\n  return React.createElement('div', { style: style ?? {} }, content);\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"home\"}}],[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"home\"}}],[\"manage-hacknet.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { ONE_SECOND, HOME_HOSTNAME } from 'utils/constants';\\n\\n/**\\n * Manages purchasing and upgrading Hacknet nodes.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  while (true) {\\n    const moneyAvailable = ns.getServerMoneyAvailable(HOME_HOSTNAME) / 2;\\n\\n    // Attempt to purchase a new node.\\n    if (\\n      ns.hacknet.numNodes() < ns.hacknet.maxNumNodes() &&\\n      ns.hacknet.getPurchaseNodeCost() < moneyAvailable\\n    ) {\\n      ns.hacknet.purchaseNode();\\n    }\\n\\n    const nodeCount = ns.hacknet.numNodes();\\n    for (let i = 0; i < nodeCount; i++) {\\n      // Upgrade level.\\n      upgrade(\\n        () => ns.hacknet.getLevelUpgradeCost(i) < moneyAvailable,\\n        () => ns.hacknet.upgradeLevel(i)\\n      );\\n\\n      // Upgrade RAM.\\n      upgrade(\\n        () => ns.hacknet.getRamUpgradeCost(i) < moneyAvailable,\\n        () => ns.hacknet.upgradeRam(i)\\n      );\\n\\n      // Upgrade cores.\\n      upgrade(\\n        () => ns.hacknet.getCoreUpgradeCost(i) < moneyAvailable,\\n        () => ns.hacknet.upgradeCore(i)\\n      );\\n    }\\n\\n    await ns.sleep(ONE_SECOND);\\n  }\\n}\\n\\n/**\\n * Upgrades using the given upgrade function until it is no longer possible.\\n *\\n * @param {function():boolean} canUpgradeFunction\\n * @param {function():boolean} upgradeFunction\\n */\\nfunction upgrade(canUpgradeFunction, upgradeFunction) {\\n  let canUpgrade;\\n  do {\\n    canUpgrade = canUpgradeFunction();\\n    canUpgrade = upgradeFunction();\\n  } while (canUpgrade);\\n}\\n\",\"filename\":\"manage-hacknet.js\",\"server\":\"home\"}}],[\"manage-servers.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getServers, updateServers } from 'database/servers';\\nimport {\\n  HOME_HOSTNAME,\\n  MAX_PURCHASED_SERVER_COUNT,\\n  ONE_MINUTE,\\n  UPDATE_SERVERS_PORT,\\n} from 'utils/constants';\\nimport { formatMoney } from 'utils/format';\\n\\nconst MAX_RAM_POWER = 20;\\n\\n/**\\n * Manages purchasing and upgrading servers.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  ns.disableLog('ALL');\\n\\n  const purchasedHostnames = getServers(ns)\\n    .filter(server => server.isPurchased)\\n    .map(server => server.hostname);\\n\\n  while (true) {\\n    const moneyAvailable = ns.getServerMoneyAvailable(HOME_HOSTNAME);\\n\\n    for (let power = MAX_RAM_POWER; power > 1; power--) {\\n      const ram = Math.pow(2, power);\\n\\n      // Attempt to purchase a server.\\n      if (purchasedHostnames.length < MAX_PURCHASED_SERVER_COUNT) {\\n        const cost = ns.getPurchasedServerCost(ram);\\n        if (cost <= moneyAvailable) {\\n          const hostname = ns.purchaseServer('lauren', ram);\\n          if (hostname.length > 0) {\\n            purchasedHostnames.push(hostname);\\n            updateServers(ns, {\\n              hostname: hostname,\\n              organization: '',\\n              path: [hostname],\\n              isPurchased: true,\\n              maxRam: ram,\\n              maxMoney: 0,\\n              minSecurity: 0,\\n              baseSecurity: 0,\\n              hackingLevel: 0,\\n            });\\n            ns.writePort(UPDATE_SERVERS_PORT, 1);\\n            ns.toast(\\n              `Purchased ${hostname} (${ns.formatRam(\\n                ram,\\n                0\\n              )}) for ${formatMoney(ns, cost)}`\\n            );\\n          }\\n        }\\n      }\\n\\n      // Attempt to upgrade an existing server.\\n      for (const hostname of purchasedHostnames) {\\n        const currentRam = ns.getServerMaxRam(hostname);\\n        if (ram <= currentRam) continue;\\n        const cost = ns.getPurchasedServerUpgradeCost(hostname, ram);\\n        const upgradeSuccessful = ns.upgradePurchasedServer(hostname, ram);\\n        if (upgradeSuccessful) {\\n          updateServers(ns, {\\n            hostname: hostname,\\n            maxRam: ram,\\n          });\\n          ns.writePort(UPDATE_SERVERS_PORT, 1);\\n          ns.toast(\\n            `Upgraded ${hostname} from ${ns.formatRam(\\n              currentRam,\\n              0\\n            )} to ${ns.formatRam(ram, 0)} for ${formatMoney(ns, cost)}`\\n          );\\n        }\\n      }\\n    }\\n\\n    await ns.sleep(ONE_MINUTE);\\n  }\\n}\\n\",\"filename\":\"manage-servers.js\",\"server\":\"home\"}}],[\"database/servers.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** Util functions for managing servers.txt */\\n\\n/**\\n * @typedef Server\\n * @property {string} hostname\\n * @property {string} organization\\n * @property {string[]} path\\n *           path from home to the hostname not including home but including the\\n *           hostname (e.g. ['foodnstuff', 'CSEC'] for 'CSEC' server)\\n * @property {[boolean]} isPurchased\\n * @property {[number]} maxRam maximum RAM the server has\\n * @property {[number]} maxMoney\\n * @property {[number]} minSecurity\\n * @property {[number]} baseSecurity\\n * @property {[number]} hackingLevel required hacking level\\n */\\n\\nconst SERVERS_FILENAME = 'database/servers.txt';\\n\\n/**\\n * Updates any existing servers in the database and adds any new servers to the\\n * database.\\n *\\n * @param {NS} ns\\n * @param  {...Server} serversToUpdate\\n */\\nexport function updateServers(ns, ...serversToUpdate) {\\n  const databaseServers = getServers(ns);\\n\\n  for (const server of serversToUpdate) {\\n    const databaseServer = databaseServers.find(\\n      databaseServer => databaseServer.hostname === server.hostname\\n    );\\n    if (!databaseServer) {\\n      databaseServers.push(server);\\n    } else {\\n      Object.keys(server).forEach(key => (databaseServer[key] = server[key]));\\n    }\\n  }\\n\\n  ns.write(SERVERS_FILENAME, JSON.stringify(databaseServers), 'w');\\n}\\n\\n/**\\n * @param {NS} ns\\n * @returns {Server[]} all servers in file\\n */\\nexport function getServers(ns) {\\n  return JSON.parse(ns.read(SERVERS_FILENAME) || '[]');\\n}\\n\",\"filename\":\"database/servers.js\",\"server\":\"home\"}}],[\"manage-hacking.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getServers } from 'database/servers';\\nimport { createColorForString } from 'utils/colors';\\nimport {\\n  HOME_HOSTNAME,\\n  ONE_SECOND,\\n  UPDATE_SERVERS_PORT,\\n} from 'utils/constants';\\nimport { formatTime, formatMoney } from 'utils/format';\\nimport { printTable } from 'utils/table';\\n\\nconst MIN_MONEY_AMOUNT = 1000000;\\nconst HACK_JS = 'hack.js';\\nconst GROW_JS = 'grow.js';\\nconst WEAKEN_JS = 'weaken.js';\\n\\n/**\\n * Manages hacking in all servers, reserving enough RAM in Home server to run\\n * all other scripts.\\n *\\n * Override the RAM to reserve by passing as an argument.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  ns.disableLog('ALL');\\n  ns.atExit(() => ns.closeTail());\\n\\n  // Get all servers from database.\\n  let allServers = getServers(ns);\\n\\n  while (true) {\\n    if (ns.readPort(UPDATE_SERVERS_PORT) === 1) allServers = getServers(ns);\\n\\n    // Get amount of RAM to resolve based on the combination of all scripts in\\n    // the Home server.\\n    const ramToReserveInHome =\\n      ns.args[0] ??\\n      ns\\n        .ls(HOME_HOSTNAME, '.js')\\n        .filter(\\n          filename =>\\n            !ns.isRunning(filename, HOME_HOSTNAME) &&\\n            ![HACK_JS, GROW_JS, WEAKEN_JS, 'utils.js'].includes(filename) &&\\n            filename.indexOf('/') < 0\\n        )\\n        .map(filename => ns.getScriptRam(filename))\\n        .reduce((a, b) => a + b);\\n\\n    // Get servers to hack, weaken, and grow.\\n    let serversToHack = getServersToHack(\\n      ns,\\n      allServers.map(server => JSON.parse(JSON.stringify(server)))\\n    );\\n    let serversToWeaken = getServersToWeaken(\\n      ns,\\n      allServers.map(server => JSON.parse(JSON.stringify(server)))\\n    );\\n    let serversToGrow = getServersToGrow(\\n      ns,\\n      allServers.map(server => JSON.parse(JSON.stringify(server)))\\n    );\\n\\n    // Get all servers that can run scripts.\\n    const runnableServers = allServers.filter(\\n      server => ns.hasRootAccess(server.hostname) && server.maxRam > 0\\n    );\\n\\n    // Get number of threads that are already hacking, weakening, and growing\\n    // servers on all runnable servers.\\n    const runningHackServerToThreadCount = {};\\n    const runningWeakenServerToThreadCount = {};\\n    const runningGrowServerToThreadCount = {};\\n    for (const runnableServer of runnableServers) {\\n      const processes = ns.ps(runnableServer.hostname);\\n      for (const process of processes) {\\n        if (![HACK_JS, WEAKEN_JS, GROW_JS].includes(process.filename)) continue;\\n        const targetHostname = process.args[0];\\n        const threadCount = process.threads;\\n        switch (process.filename) {\\n          case HACK_JS:\\n            if (targetHostname in runningHackServerToThreadCount) {\\n              runningHackServerToThreadCount[targetHostname] += threadCount;\\n            } else {\\n              runningHackServerToThreadCount[targetHostname] = threadCount;\\n            }\\n            break;\\n          case WEAKEN_JS:\\n            if (targetHostname in runningWeakenServerToThreadCount) {\\n              runningWeakenServerToThreadCount[targetHostname] += threadCount;\\n            } else {\\n              runningWeakenServerToThreadCount[targetHostname] = threadCount;\\n            }\\n            break;\\n          case GROW_JS:\\n            if (targetHostname in runningGrowServerToThreadCount) {\\n              runningGrowServerToThreadCount[targetHostname] += threadCount;\\n            } else {\\n              runningGrowServerToThreadCount[targetHostname] = threadCount;\\n            }\\n            break;\\n        }\\n      }\\n    }\\n\\n    // Subtract running script threads from threads needed.\\n    for (const server of serversToHack) {\\n      if (!(server.hostname in runningHackServerToThreadCount)) continue;\\n      server.threadsNeeded -= runningHackServerToThreadCount[server.hostname];\\n    }\\n    serversToHack = serversToHack.filter(server => server.threadsNeeded > 0);\\n    for (const server of serversToWeaken) {\\n      if (!(server.hostname in runningWeakenServerToThreadCount)) continue;\\n      server.threadsNeeded -= runningWeakenServerToThreadCount[server.hostname];\\n    }\\n    serversToWeaken = serversToWeaken.filter(\\n      server => server.threadsNeeded > 0\\n    );\\n    for (const server of serversToGrow) {\\n      if (!(server.hostname in runningGrowServerToThreadCount)) continue;\\n      server.threadsNeeded -= runningGrowServerToThreadCount[server.hostname];\\n    }\\n    serversToGrow = serversToGrow.filter(server => server.threadsNeeded > 0);\\n\\n    // Log servers to hack, grow, and weaken.\\n    logServers(ns, serversToHack, serversToGrow, serversToWeaken);\\n\\n    for (const runnableServer of runnableServers) {\\n      // Copy over scripts to faciliate hacking, weakening, and growing.\\n      [HACK_JS, GROW_JS, WEAKEN_JS].forEach(scriptName => {\\n        if (!ns.fileExists(scriptName, runnableServer.hostname)) {\\n          ns.scp(scriptName, runnableServer.hostname);\\n        }\\n      });\\n\\n      // Hack.\\n      if (serversToHack.length > 0) {\\n        const serverToHack = serversToHack.shift();\\n        serverToHack.threadsNeeded -= runScript(\\n          ns,\\n          HACK_JS,\\n          runnableServer,\\n          serverToHack.hostname,\\n          serverToHack.threadsNeeded,\\n          ramToReserveInHome\\n        );\\n        if (serverToHack.threadsNeeded > 0) serversToHack.unshift(serverToHack);\\n      }\\n\\n      // Weaken.\\n      if (serversToWeaken.length > 0) {\\n        const serverToWeaken = serversToWeaken.shift();\\n        serverToWeaken.threadsNeeded -= runScript(\\n          ns,\\n          WEAKEN_JS,\\n          runnableServer,\\n          serverToWeaken.hostname,\\n          serverToWeaken.threadsNeeded,\\n          ramToReserveInHome\\n        );\\n        if (serverToWeaken.threadsNeeded > 0) {\\n          serversToWeaken.unshift(serverToWeaken);\\n        }\\n      }\\n\\n      // Grow.\\n      if (serversToGrow.length > 0) {\\n        const serverToGrow = serversToGrow.shift();\\n        serverToGrow.threadsNeeded -= runScript(\\n          ns,\\n          GROW_JS,\\n          runnableServer,\\n          serverToGrow.hostname,\\n          serverToGrow.threadsNeeded,\\n          ramToReserveInHome\\n        );\\n        if (serverToGrow.threadsNeeded > 0) serversToGrow.unshift(serverToGrow);\\n      }\\n    }\\n\\n    await ns.sleep(ONE_SECOND);\\n  }\\n}\\n\\n/**\\n * Runs a script on a server with the targetHostname passed as an argument.\\n *\\n * @param {NS} ns\\n * @param {string} scriptName\\n * @param {import('database/servers').Server} server\\n * @param {string} targetHostname\\n * @param {number} maxThreads maximum number of threads to run\\n * @param {number} ramToReserveinHome\\n * @returns {number} number of threads used\\n */\\nfunction runScript(\\n  ns,\\n  scriptName,\\n  server,\\n  targetHostname,\\n  maxThreads,\\n  ramToReserveinHome\\n) {\\n  const threadsAvailable = Math.floor(\\n    (server.maxRam - ns.getServerUsedRam(server.hostname)) /\\n      ns.getScriptRam(scriptName, server.hostname) -\\n      (server.hostname === HOME_HOSTNAME ? ramToReserveinHome : 0)\\n  );\\n  const threads = Math.min(threadsAvailable, maxThreads);\\n  if (threads <= 0) return 0;\\n  const pid = ns.exec(scriptName, server.hostname, threads, targetHostname);\\n  return pid === 0 ? 0 : threads;\\n}\\n\\n/**\\n * @param {NS} ns\\n * @param {import('database/servers').Server} allServers\\n * @returns {import('database/servers').Server[]}\\n *          servers that can be hacked sorted from least time to hack to most\\n *          adding in a `threadsNeeded` field to indicate the number of threads\\n *          needed to hack half the available money\\n */\\nfunction getServersToHack(ns, allServers) {\\n  const servers = allServers\\n    .filter(\\n      server =>\\n        ns.hasRootAccess(server.hostname) &&\\n        server.maxMoney > 0 &&\\n        ns.getServerMoneyAvailable(server.hostname) >\\n          Math.min(server.maxMoney / 2, MIN_MONEY_AMOUNT) &&\\n        ns.hackAnalyzeChance(server.hostname) > 0.5\\n    )\\n    .map(server => {\\n      server.threadsNeeded = Math.floor(\\n        ns.hackAnalyzeThreads(\\n          server.hostname,\\n          ns.getServerMoneyAvailable(server.hostname) / 2\\n        )\\n      );\\n      return server;\\n    })\\n    .filter(server => server.threadsNeeded > 0);\\n  servers.sort((server1, server2) => {\\n    ns.getHackTime(server1.hostname) - ns.getHackTime(server2.hostname);\\n  });\\n  return servers;\\n}\\n\\n/**\\n * @param {NS} ns\\n * @param {import('database/servers').Server} allServers\\n * @returns {import('database/servers').Server[]}\\n *          servers that can be grown\\n */\\nfunction getServersToGrow(ns, allServers) {\\n  let servers = allServers\\n    .filter(\\n      server =>\\n        ns.hasRootAccess(server.hostname) &&\\n        server.maxMoney > 0 &&\\n        ns.getServerMoneyAvailable(server.hostname) < server.maxMoney / 2\\n    )\\n    .map(server => {\\n      server.threadsNeeded = Math.floor(\\n        ns.growthAnalyze(\\n          server.hostname,\\n          Math.floor(\\n            server.maxMoney / (ns.getServerMoneyAvailable(server.hostname) || 1)\\n          )\\n        )\\n      );\\n      return server;\\n    })\\n    .filter(server => server.threadsNeeded > 0);\\n  const serversLimitedByHackingLevel = servers.filter(\\n    server => server.hackingLevel <= ns.getHackingLevel()\\n  );\\n  if (serversLimitedByHackingLevel.length > 0) {\\n    servers = serversLimitedByHackingLevel;\\n  }\\n  servers.sort((server1, server2) => {\\n    ns.getGrowTime(server1.hostname) - ns.getGrowTime(server2.hostname);\\n  });\\n  return servers;\\n}\\n\\n/**\\n * @param {NS} ns\\n * @param {import('database/servers').Server} allServers\\n * @returns {import('database/servers').Server[]}\\n *          servers that can be weakened\\n */\\nfunction getServersToWeaken(ns, allServers) {\\n  let servers = allServers\\n    .filter(\\n      server =>\\n        ns.hasRootAccess(server.hostname) &&\\n        server.maxMoney > 0 &&\\n        ns.getServerSecurityLevel(server.hostname) > server.minSecurity &&\\n        ns.hackAnalyzeChance(server.hostname) <= 0.5\\n    )\\n    .map(server => {\\n      const securityToDecrease =\\n        ns.getServerSecurityLevel(server.hostname) - server.minSecurity;\\n      let threads = 0;\\n      do {\\n        threads++;\\n      } while (ns.weakenAnalyze(threads) < securityToDecrease);\\n      server.threadsNeeded = threads;\\n      return server;\\n    })\\n    .filter(server => server.threadsNeeded > 0);\\n  const serversLimitedByHackingLevel = servers.filter(\\n    server => server.hackingLevel <= ns.getHackingLevel()\\n  );\\n  if (serversLimitedByHackingLevel.length > 0) {\\n    servers = serversLimitedByHackingLevel;\\n  }\\n\\n  servers.sort((server1, server2) => {\\n    ns.getWeakenTime(server1.hostname) - ns.getWeakenTime(server2.hostname);\\n  });\\n  return servers;\\n}\\n\\n/**\\n * Log tables showing servers to hack, grow, and weaken.\\n *\\n * @param {NS} ns\\n * @param {import('database/servers').Server[]} serversToHack\\n * @param {import('database/servers').Server[]} serversToGrow\\n * @param {import('database/servers').Server[]} serversToWeaken\\n */\\nfunction logServers(ns, serversToHack, serversToGrow, serversToWeaken) {\\n  ns.clearLog();\\n\\n  // Print servers to hack.\\n  if (serversToHack.length > 0) {\\n    ns.print('Servers to hack');\\n\\n    const table = { rows: [], style: { color: ns.ui.getTheme().error } };\\n    for (const server of serversToHack) {\\n      const row = {\\n        cells: [\\n          {\\n            column: { name: 'Hostname', style: {} },\\n            content: server.hostname,\\n          },\\n          {\\n            column: { name: 'Available Money', style: { textAlign: 'right' } },\\n            content: formatMoney(\\n              ns,\\n              ns.getServerMoneyAvailable(server.hostname)\\n            ),\\n          },\\n          {\\n            column: { name: 'Hack Chance', style: { textAlign: 'right' } },\\n            content: ns.formatPercent(ns.hackAnalyzeChance(server.hostname)),\\n          },\\n          {\\n            column: { name: 'Hack Time', style: { textAlign: 'center' } },\\n            content: formatTime(ns, ns.getHackTime(server.hostname)),\\n          },\\n          {\\n            column: { name: 'Threads Needed', style: { textAlign: 'right' } },\\n            content: ns.formatNumber(server.threadsNeeded, 0),\\n          },\\n        ],\\n        style: { color: createColorForString(ns, server.hostname) },\\n      };\\n      table.rows.push(row);\\n    }\\n    printTable(ns, table);\\n\\n    ns.print(' ');\\n  }\\n\\n  // Print servers to weaken.\\n  if (serversToWeaken.length > 0) {\\n    ns.print('Servers to weaken');\\n\\n    const table = { rows: [], style: { color: ns.ui.getTheme().warning } };\\n    for (const server of serversToWeaken) {\\n      const row = {\\n        cells: [\\n          {\\n            column: { name: 'Hostname', style: {} },\\n            content: server.hostname,\\n          },\\n          {\\n            column: { name: 'Current Security', style: { textAlign: 'right' } },\\n            content: ns.formatNumber(\\n              ns.getServerSecurityLevel(server.hostname)\\n            ),\\n          },\\n          {\\n            column: { name: 'Min Security', style: { textAlign: 'right' } },\\n            content: ns.formatNumber(server.minSecurity, 0),\\n          },\\n          {\\n            column: { name: 'Base Security', style: { textAlign: 'right' } },\\n            content: ns.formatNumber(server.baseSecurity, 0),\\n          },\\n          {\\n            column: { name: 'Hack Chance', style: { textAlign: 'right' } },\\n            content: ns.formatPercent(ns.hackAnalyzeChance(server.hostname)),\\n          },\\n          {\\n            column: { name: 'Weaken Time', style: { textAlign: 'center' } },\\n            content: formatTime(ns, ns.getWeakenTime(server.hostname)),\\n          },\\n          {\\n            column: { name: 'Threads Needed', style: { textAlign: 'right' } },\\n            content: ns.formatNumber(server.threadsNeeded, 0),\\n          },\\n        ],\\n        style: { color: createColorForString(ns, server.hostname) },\\n      };\\n      table.rows.push(row);\\n    }\\n    printTable(ns, table);\\n\\n    ns.print(' ');\\n  }\\n\\n  // Print servers to grow.\\n  if (serversToGrow.length > 0) {\\n    ns.print('Servers to grow');\\n\\n    const table = { rows: [], style: { color: ns.ui.getTheme().success } };\\n    for (const server of serversToGrow) {\\n      const row = {\\n        cells: [\\n          {\\n            column: { name: 'Hostname', style: {} },\\n            content: server.hostname,\\n          },\\n          {\\n            column: { name: 'Available Money', style: { textAlign: 'right' } },\\n            content: formatMoney(\\n              ns,\\n              ns.getServerMoneyAvailable(server.hostname)\\n            ),\\n          },\\n          {\\n            column: { name: 'Max Money', style: { textAlign: 'right' } },\\n            content: formatMoney(ns, server.maxMoney),\\n          },\\n          {\\n            column: { name: 'Grow Time', style: { textAlign: 'center' } },\\n            content: formatTime(ns, ns.getGrowTime(server.hostname)),\\n          },\\n          {\\n            column: { name: 'Threads Needed', style: { textAlign: 'right' } },\\n            content: ns.formatNumber(server.threadsNeeded, 0),\\n          },\\n        ],\\n        style: { color: createColorForString(ns, server.hostname) },\\n      };\\n      table.rows.push(row);\\n    }\\n    printTable(ns, table);\\n\\n    ns.print(' ');\\n  }\\n}\\n\",\"filename\":\"manage-hacking.js\",\"server\":\"home\"}}],[\"gain-access.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getServers } from 'database/servers';\\nimport { ONE_MINUTE } from 'utils/constants';\\n\\n/**\\n * Attempts to gain root access to servers.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  let hostnames = getServers(ns).map(server => server.hostname);\\n\\n  do {\\n    for (const hostname of hostnames) {\\n      runProgram(() => ns.brutessh(hostname));\\n      runProgram(() => ns.ftpcrack(hostname));\\n      runProgram(() => ns.httpworm(hostname));\\n      runProgram(() => ns.relaysmtp(hostname));\\n      runProgram(() => ns.sqlinject(hostname));\\n      runProgram(() => ns.nuke(hostname));\\n    }\\n    hostnames = hostnames.filter(hostname => !ns.hasRootAccess(hostname));\\n    if (hostnames.length > 0) await ns.sleep(ONE_MINUTE);\\n  } while (hostnames.length > 0);\\n}\\n\\n/** @param {function()} programFunction */\\nfunction runProgram(programFunction) {\\n  try {\\n    programFunction();\\n  } catch (_) {}\\n}\\n\",\"filename\":\"gain-access.js\",\"server\":\"home\"}}],[\"init.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { updateServers } from 'database/servers';\\nimport { writeStocks } from 'database/stocks';\\nimport { getAllPaths } from 'utils/servers';\\nimport { HOME_HOSTNAME, ONE_SECOND } from 'utils/constants';\\n\\n/**\\n * Run this script at the beginning of every session.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  ns.disableLog('ALL');\\n\\n  // Optionally clean up files in all servers if there is enough RAM to do so.\\n  const cleanupFilesPid = ns.run('cleanup-files.js');\\n  while (ns.isRunning(cleanupFilesPid)) await ns.sleep(ONE_SECOND);\\n\\n  // Reset database files.\\n  const hostnameToPathMap = { [HOME_HOSTNAME]: [] };\\n  const allPaths = getAllPaths(ns, HOME_HOSTNAME);\\n  for (const path of allPaths) {\\n    hostnameToPathMap[path[path.length - 1]] = path.slice(1);\\n  }\\n  updateServers(\\n    ns,\\n    ...Object.keys(hostnameToPathMap).map(hostname =>\\n      getServerData(ns, hostname, hostnameToPathMap[hostname])\\n    )\\n  );\\n  if (ns.stock.hasWSEAccount() && ns.stock.hasTIXAPIAccess()) {\\n    writeStocks(ns);\\n    ns.run('manage-stocks.js', { preventDuplicates: true });\\n  }\\n\\n  // Start scripts.\\n  ns.run('gain-access.js', { preventDuplicates: true });\\n  ns.run('manage-hacking.js', { preventDuplicates: true });\\n  ns.run('manage-hacknet.js', { preventDuplicates: true });\\n  ns.run('manage-servers.js', { preventDuplicates: true });\\n}\\n\\n/**\\n * Get stats of a server to save to the database.\\n *\\n * @param {NS} ns\\n * @param {string} hostname\\n * @param {string[]} path\\n * @returns {import('database/servers').Server} server\\n */\\nexport function getServerData(ns, hostname, path) {\\n  const serverData = ns.getServer(hostname);\\n  return {\\n    hostname: hostname,\\n    path: path,\\n    organization: serverData.organizationName,\\n    isPurchased: serverData.purchasedByPlayer,\\n    maxRam: serverData.maxRam,\\n    maxMoney: serverData.moneyMax,\\n    minSecurity: ns.getServerMinSecurityLevel(hostname),\\n    baseSecurity: ns.getServerBaseSecurityLevel(hostname),\\n    hackingLevel: ns.getServerRequiredHackingLevel(hostname),\\n  };\\n}\\n\",\"filename\":\"init.js\",\"server\":\"home\"}}],[\"cleanup-files.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getAllHostnames } from 'utils/servers';\\nimport { HOME_HOSTNAME } from 'utils/constants';\\n\\n/**\\n * Stops all scripts and removes JS files from every server except the home\\n * server. Also remove database files.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  const allHostnames = getAllHostnames(ns);\\n  for (const hostname of allHostnames) {\\n    if (hostname === HOME_HOSTNAME) continue;\\n\\n    // Kill all scripts.\\n    ns.killall(hostname);\\n\\n    // Remove files.\\n    const filenames = ns.ls(hostname, '.js');\\n    for (const filename of filenames) ns.rm(filename, hostname);\\n  }\\n\\n  // Remove database files.\\n  const filenames = ns.ls(HOME_HOSTNAME, '.txt');\\n  for (const filename of filenames) ns.rm(filename);\\n}\\n\",\"filename\":\"cleanup-files.js\",\"server\":\"home\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"home\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"home\"}}],[\"contracts/total-ways-to-sum.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Total Ways to Sum\\n *\\n * It is possible write four as a sum in exactly four different ways:\\n *     3 + 1\\n *     2 + 2\\n *     2 + 1 + 1\\n *     1 + 1 + 1 + 1\\n *\\n * How many different distinct ways can the number 46 be written as a sum of at\\n * least two positive integers?\\n *\\n * @param {number} input\\n */\\nexport default function totalWaysToSum(input) {\\n  const waysToSum = new Array(input + 1).fill(0);\\n  waysToSum[0] = 1;\\n\\n  for (let i = 1; i < input; i++) {\\n    for (let j = i; j < input + 1; j++) {\\n      waysToSum[j] = waysToSum[j] + waysToSum[j - i];\\n    }\\n  }\\n\\n  return waysToSum[input];\\n}\\n\",\"filename\":\"contracts/total-ways-to-sum.js\",\"server\":\"home\"}}],[\"contracts/array-jumping-game.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Array Jumping Game\\n *\\n * You are given the following array of integers:\\n *\\n * 4,0,0,3,3,4,7,5,0,1,2,4,5,1\\n *\\n * Each element in the array represents your MAXIMUM jump length at that\\n * position. This means that if you are at position i and your maximum jump\\n * length is n, you can jump to any position from i to i+n.\\n *\\n * Assuming you are initially positioned at the start of the array, determine\\n * whether you are able to reach the last index.\\n *\\n * Your answer should be submitted as 1 or 0, representing true and false\\n * respectively\\n *\\n * @param {number[]} maxJumps\\n * @returns {0|1} representing whether able to reach the last index\\n */\\nexport default function arrayJumpingGame(maxJumps) {\\n  return canReachEnd(0, maxJumps) ? 1 : 0;\\n}\\n\\n/**\\n * @param {number} index\\n * @param {number[]} maxJumps\\n * @returns {boolean}\\n */\\nfunction canReachEnd(index, maxJumps) {\\n  if (index === maxJumps.length - 1) return true;\\n  if (index >= maxJumps.length) return false;\\n\\n  for (let jump = 1; jump <= maxJumps[index]; jump++) {\\n    if (canReachEnd(index + jump, maxJumps)) return true;\\n  }\\n  return false;\\n}\\n\\n// console.log(arrayJumpingGame([4, 0, 0, 3, 3, 4, 7, 5, 0, 1, 2, 4, 5, 1])); // 1\\n// console.log(\\n//   arrayJumpingGame([9, 1, 2, 0, 9, 1, 6, 7, 9, 4, 0, 0, 10, 0, 7, 1, 4, 2])\\n// ); // 1\\n\",\"filename\":\"contracts/array-jumping-game.js\",\"server\":\"home\"}}],[\"monitor-servers.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getServers } from 'database/servers';\\nimport { createReactElement } from 'utils/dom';\\nimport { formatTime } from 'utils/format';\\nimport { printTable } from 'utils/table';\\nimport { ONE_SECOND } from 'utils/constants';\\nimport { createColorForString } from 'utils/colors';\\n\\n/**\\n * Monitors all servers that can run scripts in the --tail.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  ns.disableLog('ALL');\\n  ns.tail();\\n  ns.resizeTail(750, 1000);\\n  ns.moveTail(800, 50);\\n  ns.atExit(() => ns.closeTail());\\n\\n  while (true) {\\n    const allServers = getServers(ns);\\n    const hostnameToColor = {};\\n    for (const server of allServers) {\\n      hostnameToColor[server.hostname] = createColorForString(\\n        ns,\\n        server.hostname\\n      );\\n    }\\n\\n    const servers = allServers.filter(\\n      server => ns.hasRootAccess(server.hostname) && server.maxRam > 0\\n    );\\n    servers.sort(\\n      (server1, server2) =>\\n        ns.getServerUsedRam(server2.hostname) -\\n        ns.getServerUsedRam(server1.hostname)\\n    );\\n\\n    /** @type {import('utils/table').Table} */ const table = { rows: [] };\\n    for (const server of servers) {\\n      const usedRam = ns.getServerUsedRam(server.hostname);\\n\\n      /** @type {import('utils/table').Row} */ const row = {\\n        cells: [\\n          {\\n            column: { name: 'Hostname', style: { width: 'max-content' } },\\n            content: createReactElement(server.hostname, {\\n              color: hostnameToColor[server.hostname],\\n            }),\\n          },\\n          {\\n            column: {\\n              name: 'Used Ram',\\n              style: { textAlign: 'right', width: 'max-content' },\\n            },\\n            content: ns.formatRam(usedRam, 0),\\n            style: { color: usedRam === 0 ? ns.ui.getTheme().error : '' },\\n          },\\n          {\\n            column: {\\n              name: 'Max Ram',\\n              style: { textAlign: 'right', width: 'max-content' },\\n            },\\n            content: ns.formatRam(server.maxRam, 0),\\n          },\\n          {\\n            column: { name: 'Running Scripts', style: {} },\\n            content: getRunningScripts(ns, server.hostname, hostnameToColor),\\n          },\\n        ],\\n      };\\n      table.rows.push(row);\\n    }\\n\\n    ns.clearLog();\\n    printTable(ns, table);\\n    await ns.sleep(ONE_SECOND);\\n  }\\n}\\n\\n/**\\n * Returns a ReactElement showing the scripts that are running on a given\\n * hostname.\\n *\\n * @param {NS} ns\\n * @param {string} hostname\\n * @param {Object.<string, string>} hostnameToColor\\n * @returns {import('../NetscriptDefinitions').ReactElement}\\n */\\nfunction getRunningScripts(ns, hostname, hostnameToColor) {\\n  const elements = ns.ps(hostname).map(process => {\\n    const style = {};\\n    const message = [createReactElement(process.filename, {}, 'span')];\\n\\n    for (const args of process.args) {\\n      message.push(\\n        createReactElement(\\n          ` ${args}`,\\n          {\\n            color: args in hostnameToColor ? hostnameToColor[args] : 'inherit',\\n          },\\n          'span'\\n        )\\n      );\\n    }\\n\\n    message.push(\\n      createReactElement(` (${process.threads.toLocaleString()})`, {}, 'span')\\n    );\\n\\n    if (['hack.js', 'grow.js', 'weaken.js'].includes(process.filename)) {\\n      const script = ns.getRunningScript(process.pid, hostname);\\n      const totalTimeMessage = script.logs[0]\\n        .match(/ in .* \\\\(/)[0]\\n        .replace(' in ', '')\\n        .replace(' (', '');\\n      const totalSeconds = totalTimeMessage\\n        .match(/[0-9.]+ [a-z]+/g)\\n        .map(timePart => {\\n          const number = parseFloat(timePart.split(' ')[0]);\\n          if (timePart.includes('hour')) return number * 60 * 60;\\n          if (timePart.includes('minute')) return number * 60;\\n          if (timePart.includes('second')) return number;\\n          return number;\\n        })\\n        .reduce((a, b) => a + b);\\n      message.push(\\n        createReactElement(\\n          ` - ${formatTime(\\n            ns,\\n            (totalSeconds - script.onlineRunningTime) * 1000\\n          )} left`,\\n          {},\\n          'span'\\n        )\\n      );\\n      style.color = {\\n        'hack.js': ns.ui.getTheme().error,\\n        'grow.js': ns.ui.getTheme().success,\\n        'weaken.js': ns.ui.getTheme().warning,\\n      }[process.filename];\\n    }\\n\\n    return createReactElement(message, style);\\n  });\\n  return React.createElement('div', {}, ...elements);\\n}\\n\",\"filename\":\"monitor-servers.js\",\"server\":\"home\"}}],[\"utils/formatting.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utils for formatting for printing to either --tail logs or to the terminal.\\n */\\n\\n/**\\n * @param {NS} ns\\n */\\nexport function printTable(ns) {}\\n\\nexport function tprintTable(ns) {}\\n\\nfunction getTableForPrinting() {}\\n\",\"filename\":\"utils/formatting.js\",\"server\":\"home\"}}],[\"utils/table.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utils for formatting for printing tables to either --tail logs or to the\\n * terminal.\\n */\\n\\n/**\\n * @typedef Column\\n * @property {string} name\\n * @property {[import('utils/dom').Style]} style\\n */\\n\\n/**\\n * @typedef Cell\\n * @property {Column} column\\n * @property {import('../../NetscriptDefinitions').ReactNode} content\\n * @property {[import('utils/dom').Style]} style\\n */\\n\\n/**\\n * @typedef Row\\n * @property {Cell[]} cells\\n * @property {[import('utils/dom').Style]} style\\n */\\n\\n/**\\n * @typedef Table\\n * @property {Row[]} rows\\n * @property {[import('utils/dom').Style]} style\\n */\\n\\n/**\\n * Prints a table to --tail logs.\\n *\\n * @param {NS} ns\\n * @param {Table} table\\n */\\nexport const printTable = (ns, table) =>\\n  ns.printRaw(getTableForPrinting(ns, table, true));\\n\\n/**\\n * Prints a table to the terminal.\\n *\\n * @param {NS} ns\\n * @param {Table} table\\n */\\nexport const tprintTable = (ns, table) =>\\n  ns.tprintRaw(getTableForPrinting(ns, table));\\n\\n/**\\n * Gets a formatted table for printing\\n *\\n * @param {NS} ns\\n * @param {Table} table\\n * @param {[boolean]} fillWidth\\n *        whether the table should take up the full width of the window\\n * @returns {import('../../NetscriptDefinitions').ReactElement}\\n */\\nfunction getTableForPrinting(ns, table, fillWidth) {\\n  if (table.rows.length === 0) return createReactElement('Nothing to print!');\\n\\n  // Get border color.\\n  let primaryColor = ns.ui.getTheme().primary.substring(1);\\n  if (primaryColor.length === 3) {\\n    const colors = primaryColor.split('');\\n    primaryColor =\\n      colors[0] + colors[0] + colors[1] + colors[1] + colors[2] + colors[2];\\n  }\\n  const border = `.5px #${primaryColor}33 solid`;\\n\\n  // Build and return ReactElement for table.\\n  const cellStyling = {\\n    border: border,\\n    padding: '2px 8px',\\n  };\\n  const headerCellElements = table.rows[0].cells.map(cell =>\\n    createReactElement(cell.column.name, {\\n      ...cellStyling,\\n      ...cell.column.style,\\n      fontWeight: 'bold',\\n      width: 'auto',\\n    })\\n  );\\n  const cellElements = table.rows\\n    .map(row => {\\n      const rowStyle = row.style ?? {};\\n      return row.cells.map(cell =>\\n        createReactElement(cell.content, {\\n          ...cellStyling,\\n          ...cell.column.style,\\n          ...rowStyle,\\n          ...cell.style,\\n          width: 'auto',\\n        })\\n      );\\n    })\\n    .flat();\\n  const tableStyle = table.style ?? {};\\n  return createReactElement([...headerCellElements, ...cellElements], {\\n    ...tableStyle,\\n    border: border,\\n    display: 'grid',\\n    gridTemplateColumns: table.rows[0].cells\\n      .map(cell => {\\n        if (cell.column.style.width) return cell.column.style.width;\\n        return fillWidth ? '1fr' : 'max-content';\\n      })\\n      .join(' '),\\n    width: fillWidth ? '100%' : 'max-content',\\n  });\\n}\\n\\n/**\\n * Creates a <div> react element.\\n *\\n * @param {import('../../NetscriptDefinitions').ReactNode|import('../../NetscriptDefinitions').ReactNode[]} content\\n * @param {[import('utils/dom').Style]} style\\n * @returns {import('../../NetscriptDefinitions').ReactElement}\\n */\\nfunction createReactElement(content, style) {\\n  return React.createElement('div', { style: style ?? {} }, content);\\n}\\n\",\"filename\":\"utils/table.js\",\"server\":\"home\"}}],[\"contracts/hamming-codes.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * HammingCodes: Encoded Binary to Integer\\n *\\n * You are given the following encoded binary string:\\n * '10100000000001101100000001110011'\\n *\\n * Treat it as an extended Hamming code with 1 'possible' error at a random\\n * index.\\n *\\n * Find the 'possible' wrong bit, fix it and extract the decimal value, which is\\n * hidden inside the string.\\n *\\n * Note: The length of the binary string is dynamic, but its encoding/decoding\\n * follows Hamming's 'rule'\\n *\\n * Note 2: Index 0 is an 'overall' parity bit. Watch the Hamming code video from\\n * 3Blue1Brown for more information\\n *\\n * Note 3: There's a ~55% chance for an altered Bit. So... MAYBE there is an\\n * altered Bit 😉\\n *\\n * Note: The endianness of the encoded decimal value is reversed in relation to\\n * the endianness of the Hamming code. Where the Hamming code is expressed as\\n * little-endian (LSB at index 0), the decimal value encoded in it is expressed\\n * as big-endian (MSB at index 0).\\n *\\n * Extra note for automation: return the decimal value as a string\\n */\\n\",\"filename\":\"contracts/hamming-codes.js\",\"server\":\"home\"}}],[\"utils/format.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Utils for formatting strings.\\n */\\n\\n/**\\n * @param {NS} ns\\n * @param {number} amount\\n * @returns {string} e.g. \\\"$123.45\\\"\\n */\\nexport function formatMoney(ns, amount) {\\n  return '$' + ns.formatNumber(amount, 2);\\n}\\n\\n/**\\n * @param {NS} ns\\n * @param {number} milliseconds\\n * @returns {string} e.g. \\\"12m 34s\\\"\\n */\\nexport function formatTime(ns, milliseconds) {\\n  const totalSeconds = Math.ceil(milliseconds / 1000);\\n  if (totalSeconds < 60) return `${totalSeconds}s`;\\n\\n  const minutes = Math.floor(totalSeconds / 60);\\n  const seconds = totalSeconds - minutes * 60;\\n  return `${minutes}m ${seconds}s`;\\n}\\n\",\"filename\":\"utils/format.js\",\"server\":\"home\"}}],[\"utils/constants.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import {\\n  algorithmicStockTraderI,\\n  algorithmicStockTraderII,\\n  algorithmicStockTraderIII,\\n  algorithmicStockTraderIV,\\n} from 'contracts/algorithmic-stock-trader';\\nimport arrayJumpingGame from 'contracts/array-jumping-game';\\nimport compressionIILZDecompression from 'contracts/compression-ii-lz-decompression';\\nimport encryptionICaesarCipher from 'contracts/encryption-i-caesar-cipher';\\nimport encryptionIIVigenereCipher from 'contracts/encryption-ii-vigenere-cipher';\\nimport findLargestPrimeFactor from 'contracts/find-largest-prime-factor';\\nimport mergeOverlappingIntervals from 'contracts/merge-overlapping-intervals';\\nimport sanitizeParenthesesInExpression from 'contracts/sanitize-parentheses-in-expression';\\nimport shortestPathInAGrid from 'contracts/shortest-path-in-a-grid';\\nimport spiralizeMatrix from 'contracts/spiralize-matrix';\\nimport totalWaysToSum from 'contracts/total-ways-to-sum';\\nimport uniquePathsInAGridI from 'contracts/unique-paths-in-a-grid-i';\\n\\nexport const HOME_HOSTNAME = 'home';\\n\\n/** Maximum number of servers that we can buy. */\\nexport const MAX_PURCHASED_SERVER_COUNT = 25;\\n\\n/** One second in milliseconds. */\\nexport const ONE_SECOND = 1000;\\n\\n/** One minute in milliseconds. */\\nexport const ONE_MINUTE = ONE_SECOND * 60;\\n\\n/** Port to tell other scripts that the server list has been updated. */\\nexport const UPDATE_SERVERS_PORT = 13;\\n\\nexport const CONTRACT_TYPE_TO_SOLVER_MAP = {\\n  'Algorithmic Stock Trader I': algorithmicStockTraderI,\\n  'Algorithmic Stock Trader II': algorithmicStockTraderII,\\n  'Algorithmic Stock Trader III': algorithmicStockTraderIII,\\n  'Algorithmic Stock Trader IV': algorithmicStockTraderIV,\\n  'Array Jumping Game II': null,\\n  'Array Jumping Game': arrayJumpingGame,\\n  'Compression I: RLE Compression': null,\\n  'Compression II: LZ Decompression': compressionIILZDecompression,\\n  'Compression III: LZ Compression': null,\\n  'Encryption I: Caesar Cipher': encryptionICaesarCipher,\\n  'Encryption II: Vigenère Cipher': encryptionIIVigenereCipher,\\n  'Find All Valid Math Expressions': null,\\n  'Find Largest Prime Factor': findLargestPrimeFactor,\\n  'Generate IP Addresses': null,\\n  'HammingCodes: Encoded Binary to Integer': null,\\n  'HammingCodes: Integer to Encoded Binary': null,\\n  'Merge Overlapping Intervals': mergeOverlappingIntervals,\\n  'Minimum Path Sum in a Triangle': null,\\n  'Proper 2-Coloring of a Graph': null,\\n  'Sanitize Parentheses in Expression': sanitizeParenthesesInExpression,\\n  'Shortest Path in a Grid': shortestPathInAGrid,\\n  'Spiralize Matrix': spiralizeMatrix,\\n  'Subarray with Maximum Sum': null,\\n  'Total Ways to Sum II': null,\\n  'Total Ways to Sum': totalWaysToSum,\\n  'Unique Paths in a Grid I': uniquePathsInAGridI,\\n  'Unique Paths in a Grid II': null,\\n};\\n\",\"filename\":\"utils/constants.js\",\"server\":\"home\"}}],[\"contracts/santize.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Sanitize Parentheses in Expression\\n *\\n * Given the following string:\\n *\\n * )))a())a)((\\n *\\n * remove the minimum number of invalid parentheses in order to validate the\\n * string. If there are multiple minimal ways to validate the string, provide\\n * all of the possible results. The answer should be provided as an array of\\n * strings. If it is impossible to validate the string the result should be an\\n * array with only an empty string.\\n *\\n * IMPORTANT: The string may contain letters, not just parentheses. Examples:\\n * \\\"()())()\\\" -> [\\\"()()()\\\", \\\"(())()\\\"]\\n * \\\"(a)())()\\\" -> [\\\"(a)()()\\\", \\\"(a())()\\\"]\\n * \\\")(\\\" -> [\\\"\\\"]\\n *\\n * @param {string} input\\n */\\nexport function sanitizeParenthesesInExpression(input) {}\\n\\n/**\\n * Checks if an expression is valid based on the parentheses pairs.\\n *\\n * @param {string} expression\\n */\\nfunction isValidExpression(expression) {\\n  const parentheses = [];\\n  const characters = expression.split('');\\n  for (const character of characters) {\\n    switch (character) {\\n      case '(':\\n        parentheses.push(1);\\n        break;\\n      case ')':\\n        if (parentheses.pop() === undefined) return false;\\n        break;\\n    }\\n  }\\n  return parentheses.length === 0;\\n}\\n\\nconsole.log(isValidExpression('(a)())()'));\\n\",\"filename\":\"contracts/santize.js\",\"server\":\"home\"}}],[\"contracts/santize-parentheses-in-expression.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Sanitize Parentheses in Expression\\n *\\n * Given the following string:\\n *\\n * )))a())a)((\\n *\\n * remove the minimum number of invalid parentheses in order to validate the\\n * string. If there are multiple minimal ways to validate the string, provide\\n * all of the possible results. The answer should be provided as an array of\\n * strings. If it is impossible to validate the string the result should be an\\n * array with only an empty string.\\n *\\n * IMPORTANT: The string may contain letters, not just parentheses. Examples:\\n * \\\"()())()\\\" -> [\\\"()()()\\\", \\\"(())()\\\"]\\n * \\\"(a)())()\\\" -> [\\\"(a)()()\\\", \\\"(a())()\\\"]\\n * \\\")(\\\" -> [\\\"\\\"]\\n *\\n * @param {string} input\\n */\\nexport function sanitizeParenthesesInExpression(input) {\\n  // Input expression is already valid.\\n  if (isValidExpression(input)) return [input];\\n\\n  const validExpressions = [];\\n  for (let i = 0; i < input.length; i++) {\\n    const newExpression = input.slice(0, i) + input.slice(i + 1);\\n    console.log(newExpression);\\n  }\\n}\\n\\n/**\\n * Checks if an expression is valid based on the parentheses pairs.\\n *\\n * @param {string} expression\\n */\\nfunction isValidExpression(expression) {\\n  const parentheses = [];\\n  const characters = expression.split('');\\n  for (const character of characters) {\\n    switch (character) {\\n      case '(':\\n        parentheses.push(1);\\n        break;\\n      case ')':\\n        if (parentheses.pop() === undefined) return false;\\n        break;\\n    }\\n  }\\n  return parentheses.length === 0;\\n}\\n\\nconsole.log(sanitizeParenthesesInExpression);\\n\",\"filename\":\"contracts/santize-parentheses-in-expression.js\",\"server\":\"home\"}}],[\"contracts/sanitize-parentheses-in-expression.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Sanitize Parentheses in Expression\\n *\\n * Given the following string:\\n *\\n * )))a())a)((\\n *\\n * remove the minimum number of invalid parentheses in order to validate the\\n * string. If there are multiple minimal ways to validate the string, provide\\n * all of the possible results. The answer should be provided as an array of\\n * strings. If it is impossible to validate the string the result should be an\\n * array with only an empty string.\\n *\\n * IMPORTANT: The string may contain letters, not just parentheses. Examples:\\n * \\\"()())()\\\" -> [\\\"()()()\\\", \\\"(())()\\\"]\\n * \\\"(a)())()\\\" -> [\\\"(a)()()\\\", \\\"(a())()\\\"]\\n * \\\")(\\\" -> [\\\"\\\"]\\n *\\n * @param {string} expression\\n * @returns {string[]} valid expressions\\n */\\nexport default function sanitizeParenthesesInExpression(expression) {\\n  // Input expression is already valid.\\n  if (isValidExpression(expression)) return [expression];\\n\\n  const validExpressions = [...new Set(getValidExpressions(expression))];\\n  return validExpressions.length > 0 ? validExpressions : [''];\\n}\\n\\n/**\\n * Returns a list of the most minimal valid exprssions.\\n *\\n * @param {string} expression\\n * @returns {string[]} valid expressions or empty array if no valid found\\n */\\nfunction getValidExpressions(expression) {\\n  if (expression.length === 1) return [];\\n\\n  const shortenedExpressions = new Set();\\n  for (let i = 0; i < expression.length; i++) {\\n    shortenedExpressions.add(expression.slice(0, i) + expression.slice(i + 1));\\n  }\\n  const validExpressions = [...shortenedExpressions].filter(isValidExpression);\\n  if (validExpressions.length > 0) return validExpressions;\\n\\n  for (const shortenedExpression of shortenedExpressions) {\\n    validExpressions.push(...getValidExpressions(shortenedExpression));\\n  }\\n  let longestExpressionLength = validExpressions.reduce(\\n    (longestLength, expression) => Math.max(longestLength, expression.length),\\n    0\\n  );\\n  return validExpressions.filter(\\n    expression => expression.length === longestExpressionLength\\n  );\\n}\\n\\n/**\\n * Checks if an expression is valid based on the parentheses pairs.\\n *\\n * @param {string} expression\\n */\\nfunction isValidExpression(expression) {\\n  const parentheses = [];\\n  const characters = expression.split('');\\n  for (const character of characters) {\\n    switch (character) {\\n      case '(':\\n        parentheses.push(1);\\n        break;\\n      case ')':\\n        if (parentheses.pop() === undefined) return false;\\n        break;\\n    }\\n  }\\n  return parentheses.length === 0;\\n}\\n\",\"filename\":\"contracts/sanitize-parentheses-in-expression.js\",\"server\":\"home\"}}],[\"contracts/unique-paths-on-a-grid.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Unique Paths in a Grid I\\n *\\n * You are in a grid with 6 rows and 2 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.\\n *\\n * NOTE: The data returned for this contract is an array with the number of rows and columns:\\n *\\n * [6, 2]\\n *\\n * @param {number[]} input\\n */\\nexport default function uniquePathsInAGridI {}\\n\",\"filename\":\"contracts/unique-paths-on-a-grid.js\",\"server\":\"home\"}}],[\"contracts/unique-paths-in-a-grid-i.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Unique Paths in a Grid I\\n *\\n * You are in a grid with 6 rows and 2 columns, and you are positioned in the\\n * top-left corner of that grid. You are trying to reach the bottom-right corner\\n * of the grid, but you can only move down or right on each step. Determine how\\n * many unique paths there are from start to finish.\\n *\\n * NOTE: The data returned for this contract is an array with the number of rows\\n * and columns:\\n *\\n * [6, 2]\\n *\\n * @param {number[]} input\\n */\\nexport default function uniquePathsInAGridI(input) {\\n  const [rows, columns] = input;\\n  return new Set(getPaths(0, 0, new Grid(rows, columns), [])).size;\\n}\\n\\n/**\\n * @typedef {('d'|'r')[]} Path\\n */\\n\\n/**\\n * Gets all possible (can have duplicates) paths from the given position to the\\n * bottom-right corner ({x: columns, y: rows}).\\n *\\n * @param {number} x\\n * @param {number} y\\n * @param {Grid} grid\\n * @param {Path[]} pathThusFar\\n */\\nfunction getPaths(x, y, grid, pathThusFar) {\\n  if (x === grid.columns - 1 && y === grid.rows - 1) return [pathThusFar];\\n\\n  const paths = [];\\n\\n  const rightPosition = { x: x + 1, y: y };\\n  if (grid.isValidPosition(rightPosition.x, rightPosition.y)) {\\n    paths.push(\\n      ...getPaths(rightPosition.x, rightPosition.y, grid, [...pathThusFar, 'r'])\\n    );\\n  }\\n\\n  const downPosition = { x: x, y: y + 1 };\\n  if (grid.isValidPosition(downPosition.x, downPosition.y)) {\\n    paths.push(\\n      ...getPaths(downPosition.x, downPosition.y, grid, [...pathThusFar, 'd'])\\n    );\\n  }\\n\\n  return paths;\\n}\\n\\nclass Grid {\\n  /**\\n   * @param {number} rows\\n   * @param {number} columns\\n   */\\n  constructor(rows, columns) {\\n    this.rows = rows;\\n    this.columns = columns;\\n  }\\n\\n  /**\\n   * @param {number} x\\n   * @param {number} y\\n   * @returns {boolean} whether the position is valid\\n   */\\n  isValidPosition(x, y) {\\n    return x >= 0 && y >= 0 && x < this.columns && y < this.rows;\\n  }\\n}\\n\",\"filename\":\"contracts/unique-paths-in-a-grid-i.js\",\"server\":\"home\"}}],[\"contracts/unique-paths-in-a-grid-i.old.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Unique Paths in a Grid I\\n *\\n * You are in a grid with 6 rows and 2 columns, and you are positioned in the\\n * top-left corner of that grid. You are trying to reach the bottom-right corner\\n * of the grid, but you can only move down or right on each step. Determine how\\n * many unique paths there are from start to finish.\\n *\\n * NOTE: The data returned for this contract is an array with the number of rows\\n * and columns:\\n *\\n * [6, 2]\\n *\\n * @param {number[]} input\\n */\\nexport default function uniquePathsInAGridI(input) {\\n  const [rows, columns] = input;\\n  return new Set(\\n    getPaths({ x: 0, y: columns }, rows, columns, []).map(path => path.join(''))\\n  ).size;\\n  // return new Set(getPaths({ x: 0, y: columns }, rows, columns, [])).size;\\n}\\n\\n/**\\n * @typedef {('d'|'r')[]} Path\\n *\\n * @typedef Position\\n * @property {number} x\\n * @property {number} y\\n */\\n\\n/**\\n * Gets all possible (can have duplicates) paths from the given position to the\\n * bottom-right corner ({x: columns, y: 0}).\\n *\\n * @param {Position} position\\n * @param {number} rows\\n * @param {number} columns\\n * @param {Path} pathThusFar\\n * @returns {Path[]} possible paths\\n */\\nfunction getPaths(position, rows, columns, pathThusFar) {\\n  if (position.x === columns - 1 && position.y === 0) {\\n    // Reached the bottom-right corner.\\n    return [pathThusFar];\\n  }\\n\\n  const paths = [];\\n\\n  if (position.x < columns) {\\n    // Can move right.\\n    console.log(\\n      'new position is ' + JSON.stringify({ x: position.x + 1, y: position.y })\\n    );\\n    paths.push(\\n      ...getPaths({ x: position.x + 1, y: position.y }, rows, columns, [\\n        ...pathThusFar,\\n        'r',\\n      ])\\n    );\\n  }\\n\\n  if (position.y > 0) {\\n    // Can move down.\\n    paths.push(\\n      ...getPaths({ x: position.x, y: position.y - 1 }, rows, columns, [\\n        ...pathThusFar,\\n        'd',\\n      ])\\n    );\\n  }\\n\\n  return paths;\\n}\\n\\nconsole.log(uniquePathsInAGridI([9, 9]));\\n\",\"filename\":\"contracts/unique-paths-in-a-grid-i.old.js\",\"server\":\"home\"}}],[\"contracts/unique-paths-in-a-grid-i.old-copy.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Unique Paths in a Grid I\\n *\\n * You are in a grid with 6 rows and 2 columns, and you are positioned in the\\n * top-left corner of that grid. You are trying to reach the bottom-right corner\\n * of the grid, but you can only move down or right on each step. Determine how\\n * many unique paths there are from start to finish.\\n *\\n * NOTE: The data returned for this contract is an array with the number of rows\\n * and columns:\\n *\\n * [6, 2]\\n *\\n * @param {number[]} input\\n */\\nexport default function uniquePathsInAGridI(input) {\\n  const [rows, columns] = input;\\n  return new Set(\\n    getPaths({ x: 0, y: columns }, rows, columns, []).map(path => path.join(''))\\n  ).size;\\n  // return new Set(getPaths({ x: 0, y: columns }, rows, columns, [])).size;\\n}\\n\\n/**\\n * @typedef {('d'|'r')[]} Path\\n *\\n * @typedef Position\\n * @property {number} x\\n * @property {number} y\\n */\\n\\n/**\\n * Gets all possible (can have duplicates) paths from the given position to the\\n * bottom-right corner ({x: rows, y: 0}).\\n *\\n * @param {Position} position\\n * @param {number} rows\\n * @param {number} columns\\n * @param {Path} pathThusFar\\n * @returns {Path[]} possible paths\\n */\\nfunction getPaths(position, rows, columns, pathThusFar) {\\n  if (position.x === columns && position.y === 0) {\\n    // Reached the bottom-right corner.\\n    return [pathThusFar];\\n  }\\n\\n  const paths = [];\\n\\n  if (position.x < columns) {\\n    // Can move right.\\n    console.log(\\n      'new position is ' + JSON.stringify({ x: position.x + 1, y: position.y })\\n    );\\n    paths.push(\\n      ...getPaths({ x: position.x + 1, y: position.y }, rows, columns, [\\n        ...pathThusFar,\\n        'r',\\n      ])\\n    );\\n  }\\n\\n  if (position.y > 0) {\\n    // Can move down.\\n    paths.push(\\n      ...getPaths({ x: position.x, y: position.y - 1 }, rows, columns, [\\n        ...pathThusFar,\\n        'd',\\n      ])\\n    );\\n  }\\n\\n  return paths;\\n}\\n\\nconsole.log(uniquePathsInAGridI([9, 9]));\\n\",\"filename\":\"contracts/unique-paths-in-a-grid-i.old-copy.js\",\"server\":\"home\"}}],[\"contracts/find-largest-prime-factor.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Find Largest Prime Factor\\n *\\n * A prime factor is a factor that is a prime number. What is the largest prime factor of 301829830?\\n *\\n * @param {number} input\\n */\\nexport default function findLargestPrimeFactor(input) {\\n  for (let i = input / 2; i > 0; i--) {\\n    if (input % i !== 0) continue; // Not a factor.\\n    if (isPrime(i)) return i;\\n  }\\n}\\n\\n/** @type {Object.<number, boolean>}*/\\nconst NUMBER_TO_IS_PRIME = { 1: true, 2: true, 3: true };\\n\\n/**\\n * Checks whether a number is prime and records it into the `NUMBER_TO_IS_PRIME`\\n * map.\\n *\\n * @param {number} number\\n */\\nfunction isPrime(number) {\\n  if (number in NUMBER_TO_IS_PRIME) return NUMBER_TO_IS_PRIME[number];\\n\\n  let isPrime = true;\\n\\n  for (let i = 2; i < number / 2; i++) {\\n    if (number % i === 0) {\\n      isPrime = false;\\n      break;\\n    }\\n  }\\n\\n  NUMBER_TO_IS_PRIME[number] = isPrime;\\n  return isPrime;\\n}\\n\",\"filename\":\"contracts/find-largest-prime-factor.js\",\"server\":\"home\"}}],[\"monitor-hacking.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getServers } from 'database/servers';\\nimport { printTable } from 'utils/table';\\nimport { formatMoney, formatTime } from 'utils/format';\\nimport { ONE_SECOND } from 'utils/constants';\\nimport { createColorForString } from 'utils/colors';\\n\\n/**\\n * Monitors all servers that can be hacked in the --tail.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  ns.disableLog('ALL');\\n  ns.tail();\\n  ns.resizeTail(750, 1000);\\n  ns.moveTail(200, 50);\\n  ns.atExit(() => ns.closeTail());\\n\\n  const allServers = getServers(ns).filter(server => server.maxMoney > 0);\\n  const hackColor = ns.ui.getTheme().error;\\n  const growColor = ns.ui.getTheme().success;\\n  const weakenColor = ns.ui.getTheme().warning;\\n\\n  while (true) {\\n    const servers = allServers.filter(\\n      server =>\\n        ns.hasRootAccess(server.hostname) &&\\n        ns.getHackingLevel() >= server.hackingLevel\\n    );\\n    servers.sort(\\n      (server1, server2) =>\\n        ns.hackAnalyzeChance(server2.hostname) -\\n        ns.hackAnalyzeChance(server1.hostname)\\n    );\\n\\n    /** @type {import('utils/table').Table} */ const table = { rows: [] };\\n    for (const server of servers) {\\n      /** @type {import('utils/table').Row} */ const row = {\\n        cells: [\\n          {\\n            column: { name: 'Hostname', style: { width: 'max-content' } },\\n            content: server.hostname,\\n            style: { color: createColorForString(ns, server.hostname) },\\n          },\\n          {\\n            column: {\\n              name: 'Hack Chance',\\n              style: { textAlign: 'right', color: hackColor },\\n            },\\n            content: ns.formatPercent(ns.hackAnalyzeChance(server.hostname)),\\n          },\\n          {\\n            column: {\\n              name: 'Hack Time',\\n              style: { textAlign: 'center', color: hackColor },\\n            },\\n            content: formatTime(ns, ns.getHackTime(server.hostname)),\\n          },\\n          {\\n            column: {\\n              name: 'Available Money',\\n              style: { textAlign: 'right', color: growColor },\\n            },\\n            content: formatMoney(\\n              ns,\\n              ns.getServerMoneyAvailable(server.hostname)\\n            ),\\n          },\\n          {\\n            column: {\\n              name: 'Max Money',\\n              style: { textAlign: 'right', color: growColor },\\n            },\\n            content: formatMoney(ns, server.maxMoney),\\n          },\\n          {\\n            column: {\\n              name: 'Grow Time',\\n              style: { textAlign: 'right', color: growColor },\\n            },\\n            content: ns.getGrowTime(server.hostname),\\n          },\\n          {\\n            column: {\\n              name: 'Current Security',\\n              style: { textAlign: 'right', color: weakenColor },\\n            },\\n            content: ns.formatNumber(\\n              ns.getServerSecurityLevel(server.hostname)\\n            ),\\n          },\\n          {\\n            column: {\\n              name: 'Min Security',\\n              style: { textAlign: 'right', color: weakenColor },\\n            },\\n            content: ns.formatNumber(server.minSecurity, 0),\\n          },\\n          {\\n            column: {\\n              name: 'Base Security',\\n              style: { textAlign: 'right', color: weakenColor },\\n            },\\n            content: ns.formatNumber(server.baseSecurity, 0),\\n          },\\n          {\\n            column: {\\n              name: 'Weaken Time',\\n              style: { textAlign: 'center', color: weakenColor },\\n            },\\n            content: formatTime(ns, ns.getWeakenTime(server.hostname)),\\n          },\\n        ],\\n      };\\n      table.rows.push(row);\\n    }\\n\\n    ns.clearLog();\\n    printTable(ns, table);\\n    await ns.sleep(ONE_SECOND);\\n  }\\n}\\n\",\"filename\":\"monitor-hacking.js\",\"server\":\"home\"}}],[\"find-contracts.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getServers } from 'database/servers';\\nimport { CONTRACT_TYPE_TO_SOLVER_MAP, HOME_HOSTNAME } from 'utils/constants';\\nimport { createReactElement } from 'utils/dom';\\nimport { getAllPaths } from 'utils/servers';\\nimport { tprintTable } from 'utils/table';\\n\\n/**\\n * Manages contracts.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  const servers = getServers(ns);\\n\\n  /** @type {Contract[]} */ const contracts = servers\\n    .map(server =>\\n      ns.ls(server.hostname, '.cct').map(\\n        fileName =>\\n          /** @type {Contract} */ ({\\n            fileName,\\n            type: ns.codingcontract.getContractType(fileName, server.hostname),\\n            server,\\n          })\\n      )\\n    )\\n    .flat();\\n  contracts.sort((a, b) => a.type.localeCompare(b.type));\\n\\n  /** @type {import('utils/table').Table} */ const table = { rows: [] };\\n  for (const contract of contracts) {\\n    /** @type {import('utils/table').Row} */ const row = {\\n      cells: [\\n        {\\n          column: { name: 'Contract Type', style: {} },\\n          content: contract.type,\\n        },\\n        {\\n          column: { name: 'Status', style: {} },\\n          // content: attemptContract(ns, contract),\\n          content: 'NA',\\n        },\\n        {\\n          column: { name: 'Run Command', style: { maxWidth: '800px' } },\\n          content: getRunCommand(contract),\\n        },\\n      ],\\n    };\\n    table.rows.push(row);\\n  }\\n  tprintTable(ns, table);\\n}\\n/**\\n * @typedef Contract\\n * @property {string} fileName\\n * @property {string} type\\n * @property {Server} server\\n */\\n\\n/**\\n * @param {NS} ns\\n * @param {Contract} connect\\n * @returns {import('NetscriptDefinitions').ReactElement} message representing the status of attempting the contract\\n */\\nfunction attemptContract(ns, contract) {\\n  const theme = ns.ui.getTheme();\\n  if (\\n    !(contract.type in CONTRACT_TYPE_TO_SOLVER_MAP) ||\\n    CONTRACT_TYPE_TO_SOLVER_MAP[contract.type] === null\\n  ) {\\n    return createReactElement('No solver available', { color: theme.warning });\\n  }\\n\\n  const data = ns.codingcontract.getData(\\n    contract.fileName,\\n    contract.server.hostname\\n  );\\n  const solver = CONTRACT_TYPE_TO_SOLVER_MAP[contract.type];\\n  const reward = ns.codingcontract.attempt(\\n    solver(data),\\n    contract.fileName,\\n    contract.server.hostname\\n  );\\n  return reward\\n    ? createReactElement(reward, { color: theme.success })\\n    : createReactElement('Attempt failed!', { color: theme.error });\\n}\\n\\n/**\\n * @param {Contract} contract\\n * @returns {string} run command\\n */\\nfunction getRunCommand(contract) {\\n  return [\\n    'home',\\n    ...contract.server.path.map(hostname => `connect ${hostname}`),\\n    `run ${contract.fileName}`,\\n  ].join('; ');\\n}\\n\",\"filename\":\"find-contracts.js\",\"server\":\"home\"}}],[\"find-backdoors.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getServers } from 'database/servers';\\nimport { executeTerminalCommand } from 'utils/dom';\\n\\n/**\\n * Prints out a command to run backdoor on all unowned servers with root access.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  const currentHackingLevel = ns.getHackingLevel();\\n  const servers = getServers(ns).filter(server => {\\n    const serverData = ns.getServer(server.hostname);\\n    return (\\n      ns.hasRootAccess(server.hostname) &&\\n      serverData.requiredHackingSkill <= currentHackingLevel &&\\n      !serverData.purchasedByPlayer &&\\n      !serverData.backdoorInstalled\\n    );\\n  });\\n  for (const server of servers) {\\n    const commands = [\\n      server.path.map(hostname => `connect ${hostname}`).join('; '),\\n      'backdoor',\\n      'home',\\n    ];\\n    await executeTerminalCommand(ns, ...commands);\\n  }\\n}\\n\",\"filename\":\"find-backdoors.js\",\"server\":\"home\"}}],[\"contracts/algorithmic-stock-trader-iii.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Permutation, Transaction } from 'contracts/algorithmic-stock-trader';\\n\\n/**\\n * Algorithmic Stock Trader III\\n *\\n * You are given the following array of stock prices (which are numbers) where\\n * the i-th element represents the stock price on day i:\\n *\\n * 47,69,73,32,15,167,100,135,5,80,18,192,171,183,152\\n *\\n * Determine the maximum possible profit you can earn using at most two\\n * transactions. A transaction is defined as buying and then selling one share\\n * of the stock. Note that you cannot engage in multiple transactions at once.\\n * In other words, you must sell the stock before you buy it again.\\n *\\n * If no profit can be made, then the answer should be 0\\n *\\n * @param {number[]} stockPrices\\n * @returns {number} profit\\n */\\nexport default function algorithmicStockTraderIII(stockPrices) {\\n  const permutations = [];\\n\\n  for (let buyDay1 = 0; buyDay1 < stockPrices.length; buyDay1++) {\\n    for (let sellDay1 = buyDay1; sellDay1 < stockPrices.length; sellDay1++) {\\n      const transaction1 = new Transaction(stockPrices, buyDay1, sellDay1);\\n      if (transaction1.profit > 0) {\\n        permutations.push(new Permutation(transaction1));\\n      }\\n\\n      for (let buyDay2 = sellDay1; buyDay2 < stockPrices.length; buyDay2++) {\\n        for (\\n          let sellDay2 = buyDay2;\\n          sellDay2 < stockPrices.length;\\n          sellDay2++\\n        ) {\\n          const transaction2 = new Transaction(stockPrices, buyDay2, sellDay2);\\n          const permutation = new Permutation(transaction1, transaction2);\\n          if (permutation.profit > 0) permutations.push(permutation);\\n        }\\n      }\\n    }\\n  }\\n\\n  return Math.max(...permutations.map(permutation => permutation.profit));\\n}\\n\",\"filename\":\"contracts/algorithmic-stock-trader-iii.js\",\"server\":\"home\"}}],[\"contracts/algorithmic-stock-trader-i.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Transaction } from 'contracts/algorithmic-stock-trader';\\n\\n/**\\n * Algorithmic Stock Trader I\\n *\\n * You are given the following array of stock prices (which are numbers) where\\n * the i-th element represents the stock price on day i:\\n *\\n * 35,172,130,31,111,79,19,41,125,183,11,39,153,11,19,126,130,22,139,134,54,47,169,138,75\\n *\\n * Determine the maximum possible profit you can earn using at most one\\n * transaction (i.e. you can only buy and sell the stock once). If no profit can\\n * be made then the answer should be 0. Note that you have to buy the stock\\n * before you can sell it\\n *\\n * @param {number[]} stockPrices\\n * @returns {number} profit\\n */\\nexport default function algorithmicStockTraderI(stockPrices) {\\n  const transactions = [];\\n\\n  for (let buyDay = 0; buyDay < stockPrices.length; buyDay++) {\\n    for (let sellDay = buyDay; sellDay < stockPrices.length; sellDay++) {\\n      const transaction = new Transaction(stockPrices, buyDay, sellDay);\\n      if (transaction.profit >= 0) transactions.push(transaction);\\n    }\\n  }\\n\\n  return Math.max(...transactions.map(transaction => transaction.profit));\\n}\\n\",\"filename\":\"contracts/algorithmic-stock-trader-i.js\",\"server\":\"home\"}}],[\"generate-test-contract.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { createReactElement } from 'utils/dom';\\nimport { CONTRACT_TYPE_TO_SOLVER_MAP, HOME_HOSTNAME } from 'utils/constants';\\n\\nconst PADDING = '16px';\\n\\n/**\\n * Generates test contracts.\\n *\\n * Takes in a contract type as an argument.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  const contractType = ns.args[0];\\n\\n  // Check if there is an existing test contract that we can run.\\n  let contractFileName = getDummyContract(ns, contractType);\\n  if (!contractFileName) {\\n    ns.codingcontract.createDummyContract(contractType);\\n    contractFileName = getDummyContract(ns, contractType);\\n  }\\n\\n  // Print out the contract into --tail logs.\\n  printContract(ns, contractFileName);\\n}\\n\\nexport function autocomplete() {\\n  return Object.keys(CONTRACT_TYPE_TO_SOLVER_MAP).map(\\n    contractType => `\\\"${contractType}\\\"`\\n  );\\n}\\n\\n/**\\n * Returns a dummy contract's file name if it exists and undefined if otherwise.\\n *\\n * @param {NS} ns\\n * @param {string} contractType\\n * @returns {string|undefined} contract file name\\n */\\nfunction getDummyContract(ns, contractType) {\\n  return ns\\n    .ls(HOME_HOSTNAME, '.cct')\\n    .find(\\n      contractFileName =>\\n        ns.codingcontract.getContractType(contractFileName) === contractType\\n    );\\n}\\n\\n/**\\n * Prints a contract to terminal given the contract file name.\\n *\\n * @param {NS} ns\\n * @param {string} contractFileName\\n */\\nfunction printContract(ns, contractFileName) {\\n  const color = ns.ui.getTheme().success;\\n\\n  // Print contract type.\\n  ns.tprintRaw(\\n    createReactElement(ns.codingcontract.getContractType(contractFileName), {\\n      color: color,\\n      fontWeight: 'bold',\\n      padding: PADDING,\\n    })\\n  );\\n\\n  // Print description.\\n  ns.tprintRaw(\\n    createReactElement(ns.codingcontract.getDescription(contractFileName), {\\n      padding: PADDING,\\n    })\\n  );\\n\\n  // Print command to attempt.\\n  ns.tprintRaw(\\n    createReactElement(`home; run ${contractFileName}`, {\\n      color: color,\\n      padding: PADDING,\\n    })\\n  );\\n}\\n\",\"filename\":\"generate-test-contract.js\",\"server\":\"home\"}}],[\"utils/dom.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * @typedef {Object.<string, (string|number)>} Style\\n */\\n\\nimport { ONE_SECOND } from 'utils/constants';\\n\\n/**\\n * Creates a React element that can be appended to the terminal or --tail logs.\\n *\\n * @param {import(\\\"NetscriptDefinitions\\\").ReactNode} content\\n * @param {[Style]} style optional CSS\\n * @param {[string]} tag to override <div>\\n * @returns {import(\\\"NetscriptDefinitions\\\").ReactElement}\\n */\\nexport function createReactElement(content, style, tag) {\\n  if (Array.isArray(content)) {\\n    return React.createElement(\\n      tag ?? 'div',\\n      { style: style ?? {} },\\n      ...content\\n    );\\n  } else {\\n    return React.createElement(tag ?? 'div', { style: style ?? {} }, content);\\n  }\\n}\\n\\n/**\\n * Executes terminal commands (e.g. `connect n00dles`) without RAM penalties.\\n *\\n * @param {NS} ns\\n * @param {...string} commands\\n */\\nexport async function executeTerminalCommand(ns, ...commands) {\\n  for (let command of commands) {\\n    let wasSuccessful = executeCommand(command);\\n    while (!wasSuccessful) {\\n      await ns.sleep(ONE_SECOND / 2);\\n      wasSuccessful = executeCommand(command);\\n    }\\n  }\\n}\\n\\n/**\\n * @param {string} command\\n * @returns {boolean} whether executing the event was successful\\n */\\nfunction executeCommand(command) {\\n  const input = getDocument().getElementById('terminal-input');\\n  if (input === null || input.hasAttribute('disabled')) return false;\\n  input.value = command;\\n  const handler = Object.keys(input)[1];\\n  input[handler].onChange({ target: input });\\n  input[handler].onKeyDown({\\n    key: 'Enter',\\n    code: 'Enter',\\n    which: 13,\\n    keyCode: 13,\\n    preventDefault: () => null,\\n  });\\n  return true;\\n}\\n\\n/**\\n * Returns DOM document without the RAM penalties.\\n *\\n * Note: Make sure to name the variable `doc` instead of `document` to avoid RAM\\n * penalties.\\n *\\n * @returns {Document}\\n */\\nconst getDocument = () => eval('document');\\n\",\"filename\":\"utils/dom.js\",\"server\":\"home\"}}],[\"contracts/algorithmic-stock-trader.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"export class Transaction {\\n  constructor(buyDay, sellDay, stockPrices) {\\n    this.buyDay = buyDay;\\n    this.buyPrice = stockPrices[buyDay];\\n\\n    this.sellDay = sellDay;\\n    this.sellPrice = stockPrices[sellDay];\\n\\n    this.profit = this.sellPrice - this.buyPrice;\\n  }\\n\\n  toString() {\\n    return [\\n      `buy day ${this.buyDay} ($${this.buyPrice})`,\\n      `sell day ${this.sellDay} ($${this.sellPrice})`,\\n      `profit $${this.profit}`,\\n    ].join(', ');\\n  }\\n}\\n\\nexport class Permutation {\\n  /**\\n   * @param  {...Transaction} transactions\\n   */\\n  constructor(...transactions) {\\n    this.transactions = transactions;\\n    this.profit = transactions\\n      .map(transaction => transaction.profit)\\n      .reduce((a, b) => a + b);\\n  }\\n\\n  toString() {\\n    return [\\n      '\\\\n{',\\n      `  ${this.transactions.length} transactions, total profit $${this.profit}`,\\n      ...this.transactions.map(transaction => `  ${transaction}`),\\n      '}',\\n    ].join('\\\\n');\\n  }\\n}\\n\\n/**\\n * Algorithmic Stock Trader I\\n *\\n * You are given the following array of stock prices (which are numbers) where\\n * the i-th element represents the stock price on day i:\\n *\\n * 35,172,130,31,111,79,19,41,125,183,11,39,153,11,19,126,130,22,139,134,54,47,169,138,75\\n *\\n * Determine the maximum possible profit you can earn using at most one\\n * transaction (i.e. you can only buy and sell the stock once). If no profit can\\n * be made then the answer should be 0. Note that you have to buy the stock\\n * before you can sell it\\n *\\n * @param {number[]} stockPrices\\n * @returns {number} profit\\n */\\nexport function algorithmicStockTraderI(stockPrices) {\\n  return getMaxProfit(stockPrices, 1);\\n}\\n\\n/**\\n * Algorithmic Stock Trader II\\n *\\n * You are given the following array of stock prices (which are numbers) where\\n * the i-th element represents the stock price on day i:\\n *\\n * 103,150,154,3,98,150,182,97,41,96,99,1,1,28,66,19,51,4,172,22,199,40,93,33,185,96,158,123,47,76,18,93,103,126,120,92,194,126,97,124,34,86,29,22,73,156,27,18\\n *\\n * Determine the maximum possible profit you can earn using as many transactions\\n * as you'd like. A transaction is defined as buying and then selling one share\\n * of the stock. Note that you cannot engage in multiple transactions at once.\\n * In other words, you must sell the stock before you buy it again.\\n *\\n * If no profit can be made, then the answer should be 0\\n *\\n * @param {number[]} stockPrices\\n * @returns {number} profit\\n */\\nexport function algorithmicStockTraderII(stockPrices) {\\n  return getMaxProfit(stockPrices);\\n}\\n\\n/**\\n * Algorithmic Stock Trader III\\n *\\n * You are given the following array of stock prices (which are numbers) where\\n * the i-th element represents the stock price on day i:\\n *\\n * 47,69,73,32,15,167,100,135,5,80,18,192,171,183,152\\n *\\n * Determine the maximum possible profit you can earn using at most two\\n * transactions. A transaction is defined as buying and then selling one share\\n * of the stock. Note that you cannot engage in multiple transactions at once.\\n * In other words, you must sell the stock before you buy it again.\\n *\\n * If no profit can be made, then the answer should be 0\\n *\\n * @param {number[]} stockPrices\\n * @returns {number} profit\\n */\\nexport function algorithmicStockTraderIII(stockPrices) {\\n  return getMaxProfit(stockPrices, 2);\\n}\\n\\n/**\\n * Algorithmic Stock Trader IV\\n *\\n * You are given the following array with two elements:\\n *\\n * [9, [164,113,142,36,159,53,111,154,6,61,134,22,195,142,7,39,190,28,112,140,17,156,88,78,88]]\\n *\\n * The first element is an integer k. The second element is an array of stock\\n * prices (which are numbers) where the i-th element represents the stock price\\n * on day i.\\n *\\n * Determine the maximum possible profit you can earn using at most k\\n * transactions. A transaction is defined as buying and then selling one share\\n * of the stock. Note that you cannot engage in multiple transactions at once.\\n * In other words, you must sell the stock before you can buy it again.\\n *\\n * If no profit can be made, then the answer should be 0.\\n *\\n * @param {(number, number[])[]} input [k, stockPrices]\\n * @returns {number} profit\\n */\\nexport function algorithmicStockTraderIV(input) {\\n  const [maxTransactions, stockPrices] = input;\\n  return getMaxProfit(stockPrices, maxTransactions);\\n}\\n\\n/**\\n * @param {number[]} stockPrices\\n * @param {[number]} maxTransactions\\n */\\nfunction getMaxProfit(stockPrices, maxTransactions) {\\n  const buyDayToPermutationMap = {};\\n  const permutations = [];\\n  for (let buyDay = 0; buyDay < stockPrices.length - 1; buyDay++) {\\n    permutations.push(\\n      ...getProfitablePermutation(\\n        buyDay,\\n        stockPrices,\\n        buyDayToPermutationMap,\\n        maxTransactions\\n      )\\n    );\\n  }\\n  permutations.sort((a, b) => b.profit - a.profit);\\n  console.log(`${permutations[0]}`);\\n  return permutations[0].profit;\\n}\\n\\n/**\\n * @param {number} buyDay\\n * @param {number[]} stockPrices\\n * @param {Object.<number, Permutation[]>} buyDayToPermutationMap\\n * @param {number} maxTransactions\\n * @returns {Permutation} profitable permutations\\n */\\nfunction getProfitablePermutation(\\n  buyDay,\\n  stockPrices,\\n  buyDayToPermutationMap,\\n  maxTransactions\\n) {\\n  if (buyDay in buyDayToPermutationMap) return buyDayToPermutationMap[buyDay];\\n\\n  const permutations = [];\\n  for (let sellDay = buyDay + 1; sellDay < stockPrices.length; sellDay++) {\\n    const transaction = new Transaction(buyDay, sellDay, stockPrices);\\n    if (transaction.profit <= 0) continue;\\n    permutations.push(new Permutation(transaction));\\n    if (maxTransactions === 1) continue;\\n\\n    for (\\n      let nextBuyDay = sellDay + 1;\\n      nextBuyDay < stockPrices.length - 1;\\n      nextBuyDay++\\n    ) {\\n      const nextBuyDayPermutations = getProfitablePermutation(\\n        nextBuyDay,\\n        stockPrices,\\n        buyDayToPermutationMap,\\n        maxTransactions ? maxTransactions - 1 : maxTransactions\\n      );\\n      if (nextBuyDayPermutations.length === 0) continue;\\n      nextBuyDayPermutations.sort((a, b) => b.profit - a.profit);\\n\\n      // for (const permutation of nextBuyDayPermutations) {\\n      //   permutations.push(\\n      //     new Permutation(transaction, ...permutation.transactions)\\n      //   );\\n      // }\\n\\n      permutations.push(\\n        new Permutation(transaction, ...nextBuyDayPermutations[0].transactions)\\n      );\\n    }\\n  }\\n  permutations.sort((a, b) => b.profit - a.profit);\\n  buyDayToPermutationMap[buyDay] = permutations;\\n  return permutations;\\n}\\n\\nconsole.log(\\n  algorithmicStockTraderIII([\\n    177, 124, 184, 55, 108, 175, 3, 102, 77, 54, 170, 130, 141, 157,\\n  ])\\n);\\n\",\"filename\":\"contracts/algorithmic-stock-trader.js\",\"server\":\"home\"}}],[\"contracts/Shortest-Path-in-a-Grid.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"\",\"filename\":\"contracts/Shortest-Path-in-a-Grid.js\",\"server\":\"home\"}}],[\"contracts/shortest-path-in-a-grid.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Shortest Path in a Grid\\n *\\n * You are located in the top-left corner of the following grid:\\n *\\n *   [[0,0,0,0,0,0],\\n *    [0,0,0,0,0,1],\\n *    [0,0,0,1,0,0],\\n *    [0,0,1,1,1,0],\\n *    [0,0,0,0,0,0],\\n *    [1,1,0,0,0,0],\\n *    [0,1,0,0,0,1],\\n *    [1,1,0,0,0,0]]\\n *\\n * You are trying to find the shortest path to the bottom-right corner of the\\n * grid, but there are obstacles on the grid that you cannot move onto. These\\n * obstacles are denoted by '1', while empty spaces are denoted by 0.\\n *\\n * Determine the shortest path from start to finish, if one exists. The answer\\n * should be given as a string of UDLR characters, indicating the moves along\\n * the path\\n *\\n * NOTE: If there are multiple equally short paths, any of them is accepted as\\n * answer. If there is no path, the answer should be an empty string.\\n *\\n * NOTE: The data returned for this contract is an 2D array of numbers\\n * representing the grid.\\n *\\n * Examples:\\n *\\n *     [[0,1,0,0,0],\\n *      [0,0,0,1,0]]\\n *\\n * Answer: 'DRRURRD'\\n *\\n *     [[0,1],\\n *      [1,0]]\\n *\\n * Answer: ''\\n *\\n * @param {number[][]} grid\\n * @returns {string} path\\n */\\nexport default function shortestPathInAGrid(grid) {\\n  const paths = getPaths(0, 0, grid, []);\\n  paths.sort((path1, path2) => path1.length - path2.length);\\n  return paths[0]?.join('') ?? '';\\n}\\n\\n/**\\n * @typedef {('U'|'L'|'D'|'R')[]} Path\\n */\\n\\n/**\\n * @param {number} x\\n * @param {number} y\\n * @param {number[][]} grid\\n * @param {Path} pathThusFar\\n * @returns {Path[]} all possible paths from x,y to the bottom-right corner\\n */\\nfunction getPaths(x, y, grid, pathThusFar) {\\n  if (!isValidPosition(x, y, grid)) return [];\\n  if (y === grid.length - 1 && x === grid[y].length - 1) return [pathThusFar];\\n\\n  // Create a copy of the grid and mark the current position as an obstacle.\\n  const newGrid = [];\\n  for (let row of grid) {\\n    newGrid.push([...row]);\\n  }\\n  newGrid[y][x] = 1;\\n\\n  const paths = [\\n    { x: x, y: y - 1, direction: 'U' },\\n    { x: x - 1, y: y, direction: 'L' },\\n    { x: x, y: y + 1, direction: 'D' },\\n    { x: x + 1, y: y, direction: 'R' },\\n  ]\\n    .map(newPosition =>\\n      getPaths(newPosition.x, newPosition.y, newGrid, [\\n        ...pathThusFar,\\n        newPosition.direction,\\n      ])\\n    )\\n    .filter(paths => paths.length > 0)\\n    .flat();\\n\\n  return paths;\\n}\\n\\n/**\\n * Checks if a position is a valid empty space on the grid.\\n *\\n * @param {number} x\\n * @param {number} y\\n * @param {number[][]} grid\\n */\\nfunction isValidPosition(x, y, grid) {\\n  if (x < 0 || y < 0 || y >= grid.length || x >= grid[y].length) return false;\\n  return grid[y][x] === 0;\\n}\\n\\n// console.log(\\n//   shortestPathInAGrid([\\n//     [0, 1, 0, 0, 0],\\n//     [0, 0, 0, 1, 0],\\n//   ])\\n// );\\n// console.log(\\n//   shortestPathInAGrid([\\n//     [0, 1],\\n//     [1, 0],\\n//   ])\\n// );\\n\\n// console.log(\\n//   shortestPathInAGrid([\\n//     [0, 0, 0, 0, 0, 0],\\n//     [0, 0, 0, 0, 0, 1],\\n//     [0, 0, 0, 1, 0, 0],\\n//     [0, 0, 1, 1, 1, 0],\\n//     [0, 0, 0, 0, 0, 0],\\n//     [1, 1, 0, 0, 0, 0],\\n//     [0, 1, 0, 0, 0, 1],\\n//     [1, 1, 0, 0, 0, 0],\\n//   ])\\n// ); // DDDDRRDDDRRR\\n\",\"filename\":\"contracts/shortest-path-in-a-grid.js\",\"server\":\"home\"}}],[\"test-contracts.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { HOME_HOSTNAME, CONTRACT_TYPE_TO_SOLVER_MAP } from 'utils/constants';\\nimport { createReactElement } from 'utils/dom';\\nimport { tprintTable } from 'utils/table';\\n\\nconst NUM_CONTRACTS_TO_GENERATE = 5;\\n\\n/**\\n * Generates contracts to test a contract function again.\\n *\\n * Takes in a contract type as an argument.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  const contractType = ns.args[0];\\n\\n  ns.tprintf(`Testing ${contractType}`);\\n\\n  // Generate contracts.\\n  for (let i = 0; i < NUM_CONTRACTS_TO_GENERATE; i++) {\\n    ns.codingcontract.createDummyContract(contractType);\\n  }\\n\\n  // Get generated contract file names.\\n  const contractFileNames = ns\\n    .ls(HOME_HOSTNAME, '.cct')\\n    .filter(\\n      contractFileName =>\\n        ns.codingcontract.getContractType(contractFileName) === contractType\\n    );\\n\\n  // Get contract solver.\\n  const solver = CONTRACT_TYPE_TO_SOLVER_MAP[contractType];\\n\\n  /** @type {import('utils/table').Table} */ const table = { rows: [] };\\n  for (const contractFileName of contractFileNames) {\\n    // Try to solve the contract.\\n    const input = ns.codingcontract.getData(contractFileName);\\n    const startTimestamp = new Date().getUTCMilliseconds();\\n    const output = solver(input);\\n    const endTimestamp = new Date().getUTCMilliseconds();\\n    const wasSuccessful =\\n      ns.codingcontract.attempt(output, contractFileName).length > 0;\\n    await ns.sleep(1);\\n\\n    /** @type {import('utils/table').Row} */ const row = {\\n      cells: [\\n        {\\n          column: { name: 'Contract Name', style: {} },\\n          content: contractFileName,\\n        },\\n        {\\n          column: { name: 'Input', style: { maxWidth: '200px' } },\\n          content: `${input}`,\\n        },\\n        {\\n          column: { name: 'Output', style: {} },\\n          content: `${output}`,\\n        },\\n        {\\n          column: { name: 'Success?', style: {} },\\n          content: createReactElement(\\n            wasSuccessful ? 'Success!' : 'Failed 😭',\\n            {\\n              color: wasSuccessful\\n                ? ns.ui.getTheme().success\\n                : ns.ui.getTheme().error,\\n            }\\n          ),\\n        },\\n        {\\n          column: { name: 'Time', style: { textAlign: 'center' } },\\n          content: `${endTimestamp - startTimestamp}ms`,\\n        },\\n      ],\\n    };\\n    table.rows.push(row);\\n  }\\n  tprintTable(ns, table);\\n}\\n\\nexport function autocomplete() {\\n  return Object.keys(CONTRACT_TYPE_TO_SOLVER_MAP)\\n    .filter(contractType => CONTRACT_TYPE_TO_SOLVER_MAP[contractType] !== null)\\n    .map(contractType => `\\\"${contractType}\\\"`);\\n}\\n\",\"filename\":\"test-contracts.js\",\"server\":\"home\"}}],[\"contracts/compression-ii-lz-decompression.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Compression II: LZ Decompression\\n *\\n * Lempel-Ziv (LZ) compression is a data compression technique which encodes\\n * data using references to earlier parts of the data. In this variant of LZ,\\n * data is encoded in two types of chunk. Each chunk begins with a length L,\\n * encoded as a single ASCII digit from 1 to 9, followed by the chunk data,\\n * which is either:\\n *\\n * 1. Exactly L characters, which are to be copied directly into the\\n *    uncompressed data.\\n * 2. A reference to an earlier part of the uncompressed data. To do this, the\\n *    length is followed by a second ASCII digit X: each of the L output\\n *    characters is a copy of the character X places before it in the\\n *    uncompressed data.\\n *\\n * For both chunk types, a length of 0 instead means the chunk ends immediately,\\n * and the next character is the start of a new chunk. The two chunk types\\n * alternate, starting with type 1, and the final chunk may be of either type.\\n *\\n * You are given the following LZ-encoded string:\\n *     65JFyHC910796NwIZRo6117911y997Qh8e5aQ77902YQHLfWe2378BaqXHi3432AA\\n *\\n * Decode it and output the original string.\\n *\\n * Example: decoding '5aaabb450723abb' chunk-by-chunk\\n *     5aaabb           ->  aaabb\\n *     5aaabb45         ->  aaabbaaab\\n *     5aaabb450        ->  aaabbaaab\\n *     5aaabb45072      ->  aaabbaaababababa\\n *     5aaabb450723abb  ->  aaabbaaababababaabb\\n *\\n * @param {string} encoded message\\n * @returns {string} uncompressed message\\n */\\nexport default function compressionIILZDecompression(encoded) {\\n  let uncompressed = '';\\n\\n  let index = 0;\\n  let chunkType = 1;\\n  while (index < encoded.length) {\\n    const l = parseInt(encoded.charAt(index));\\n    if (l === 0) {\\n      // Chunk ends.\\n      index++;\\n      chunkType = chunkType === 1 ? 2 : 1;\\n      continue;\\n    }\\n\\n    switch (chunkType) {\\n      case 1:\\n        // Copy the next L characters to the uncompressed message.\\n        uncompressed += encoded.substring(index + 1, index + 1 + l);\\n        index = index + 1 + l;\\n        chunkType = 2;\\n        break;\\n      case 2:\\n        const x = parseInt(encoded.charAt(index + 1));\\n        const chunk = uncompressed.substring(\\n          uncompressed.length - x,\\n          uncompressed.length - x + l\\n        );\\n        for (let i = 0; i < l; i++) {\\n          uncompressed += chunk.charAt(i % chunk.length);\\n        }\\n        index += 2;\\n        chunkType = 1;\\n        break;\\n    }\\n  }\\n\\n  return uncompressed;\\n}\\n\",\"filename\":\"contracts/compression-ii-lz-decompression.js\",\"server\":\"home\"}}],[\"contracts/algorithmic-stock-trader-ii.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { Transaction, Permutation } from 'contracts/algorithmic-stock-trader';\\n\\n/**\\n * Algorithmic Stock Trader II\\n *\\n * You are given the following array of stock prices (which are numbers) where\\n * the i-th element represents the stock price on day i:\\n *\\n * 103,150,154,3,98,150,182,97,41,96,99,1,1,28,66,19,51,4,172,22,199,40,93,33,185,96,158,123,47,76,18,93,103,126,120,92,194,126,97,124,34,86,29,22,73,156,27,18\\n *\\n * Determine the maximum possible profit you can earn using as many transactions\\n * as you'd like. A transaction is defined as buying and then selling one share\\n * of the stock. Note that you cannot engage in multiple transactions at once.\\n * In other words, you must sell the stock before you buy it again.\\n *\\n * If no profit can be made, then the answer should be 0\\n *\\n * @param {number[]} stockPrices\\n * @returns {number} profit\\n */\\nexport default function algorithmicStockTraderII(stockPrices) {\\n  const permutations = [];\\n  for (let buyDay = 0; buyDay < stockPrices.length - 1; buyDay++) {\\n    permutations.push(...getAllPermutations(buyDay, stockPrices, {}));\\n  }\\n  permutations.sort((a, b) => b.profit - a.profit);\\n  return permutations.length === 0 ? 0 : permutations[0].profit;\\n}\\n\\n/**\\n * Returns all permutations given a buy day.\\n *\\n * @param {number} buyDay\\n * @param {number[]} stockPrices\\n */\\nfunction getAllPermutations(buyDay, stockPrices, buyDayToPermutationsMap) {\\n  if (buyDay === stockPrices.length - 1) return [];\\n  if (buyDay in buyDayToPermutationsMap) {\\n    return buyDayToPermutationsMap[buyDay];\\n  }\\n\\n  const permutations = [];\\n  for (let sellDay = buyDay + 1; sellDay < stockPrices.length; sellDay++) {\\n    const transaction = new Transaction(stockPrices, buyDay, sellDay);\\n    if (transaction.profit <= 0) continue;\\n    permutations.push(new Permutation(transaction));\\n\\n    for (\\n      let nextBuyDay = sellDay + 1;\\n      nextBuyDay < stockPrices.length;\\n      nextBuyDay++\\n    ) {\\n      const nextBuyDayPermutations = getAllPermutations(\\n        nextBuyDay,\\n        stockPrices,\\n        buyDayToPermutationsMap\\n      );\\n      nextBuyDayPermutations.sort((a, b) => b.profit - a.profit);\\n      if (nextBuyDayPermutations.length > 0) {\\n        const permutation = new Permutation(\\n          transaction,\\n          ...nextBuyDayPermutations[0].transactions\\n        );\\n        if (permutation.profit > 0) permutations.push(permutation);\\n      }\\n    }\\n  }\\n  buyDayToPermutationsMap[buyDay] = permutations;\\n  return permutations;\\n}\\n\",\"filename\":\"contracts/algorithmic-stock-trader-ii.js\",\"server\":\"home\"}}],[\"contracts/hamming-codes-integer-to-encoded-binary.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * HammingCodes: Integer to Encoded Binary\\n *\\n * You are given the following decimal Value:\\n * 223500403664\\n *\\n * Convert it to a binary representation and encode it as an 'extended Hamming\\n * code'. Eg: Value 8 is expressed in binary as '1000', which will be encoded\\n * with the pattern 'pppdpddd', where p is a parity bit and d a data bit. The\\n * encoding of 8 is 11110000. As another example, '10101' (Value 21) will result\\n * into (pppdpdddpd) '1001101011'.\\n *\\n * The answer should be given as a string containing only 1s and 0s.\\n *\\n * NOTE: the endianness of the data bits is reversed in relation to the\\n *       endianness of the parity bits.\\n *\\n * NOTE: The bit at index zero is the overall parity bit, this should be set\\n *       last.\\n *\\n * NOTE 2: You should watch the Hamming Code video from 3Blue1Brown, which\\n *         explains the 'rule' of encoding, including the first index parity bit\\n *         mentioned in the previous note.\\n *\\n * Extra rule for encoding:\\n * There should be no leading zeros in the 'data bit' section\\n */\\n\",\"filename\":\"contracts/hamming-codes-integer-to-encoded-binary.js\",\"server\":\"home\"}}],[\"contracts/algorithmic-stock-trader-iv.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Algorithmic Stock Trader IV\\n *\\n * You are given the following array with two elements:\\n *\\n * [9, [164,113,142,36,159,53,111,154,6,61,134,22,195,142,7,39,190,28,112,140,17,156,88,78,88]]\\n *\\n * The first element is an integer k. The second element is an array of stock\\n * prices (which are numbers) where the i-th element represents the stock price\\n * on day i.\\n *\\n * Determine the maximum possible profit you can earn using at most k\\n * transactions. A transaction is defined as buying and then selling one share\\n * of the stock. Note that you cannot engage in multiple transactions at once.\\n * In other words, you must sell the stock before you can buy it again.\\n *\\n * If no profit can be made, then the answer should be 0.\\n */\\n\",\"filename\":\"contracts/algorithmic-stock-trader-iv.js\",\"server\":\"home\"}}],[\"manage-stocks.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getServers } from 'database/servers';\\nimport { getStocks } from 'database/stocks';\\nimport { HOME_HOSTNAME, ONE_SECOND } from 'utils/constants';\\nimport { formatMoney } from 'utils/format';\\nimport { printTable } from 'utils/table';\\n\\n/**\\n * Manages buying/selling stocks.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  ns.disableLog('ALL');\\n  ns.atExit(() => ns.closeTail());\\n\\n  const stocks = getStocks(ns);\\n  const servers = getServers(ns);\\n  const hostnameToServerMap = {};\\n  for (const server of servers) {\\n    hostnameToServerMap[server.hostname] = server;\\n  }\\n  const commission = ns.stock.getConstants().StockMarketCommission;\\n\\n  while (true) {\\n    logStocks(ns, stocks);\\n\\n    for (const stock of stocks) {\\n      const position = getPosition(ns, stock.symbol);\\n      const askPrice = ns.stock.getAskPrice(stock.symbol);\\n\\n      // Sell longs.\\n      if (\\n        position.longs > 0 &&\\n        askPrice * position.longs >\\n          position.longPrice * position.longs + commission\\n      ) {\\n        ns.stock.sellStock(stock.symbol, position.longs);\\n      }\\n\\n      // Buy longs.\\n      if (stock.server) {\\n        const serverMoneyAvailable = ns.getServerMoneyAvailable(stock.server);\\n        const serverMaxMoney = hostnameToServerMap[stock.server].maxMoney;\\n        if (serverMoneyAvailable < serverMaxMoney / 2) buyLongs(ns, stock);\\n      }\\n      if (\\n        ns.stock.has4SDataTIXAPI() &&\\n        ns.stock.getForecast(stock.symbol) > 0.5\\n      ) {\\n        buyLongs(ns, stock);\\n      }\\n    }\\n\\n    await ns.stock.nextUpdate();\\n  }\\n}\\n\\n/**\\n * @param {NS} ns\\n * @param {import('database/stocks').Stock} stock\\n */\\nfunction buyLongs(ns, stock) {\\n  const sharesToBuy = Math.min(\\n    stock.maxShares - getPosition(ns, stock.symbol).longs,\\n    Math.floor(\\n      (ns.getServerMoneyAvailable(HOME_HOSTNAME) / 2 -\\n        ns.stock.getConstants().StockMarketCommission) /\\n        ns.stock.getAskPrice(stock.symbol)\\n    )\\n  );\\n  ns.stock.buyStock(stock.symbol, sharesToBuy);\\n}\\n\\n/**\\n * @typedef Position\\n * @property {number} longs\\n * @property {number} longPrice\\n * @property {number} shorts\\n * @property {number} shortPrice\\n *\\n * @param {NS} ns\\n * @param {string} symbol\\n * @returns {Position}\\n */\\nfunction getPosition(ns, symbol) {\\n  const position = ns.stock.getPosition(symbol);\\n  return {\\n    longs: position[0],\\n    longPrice: position[1],\\n    shorts: position[2],\\n    shortPrice: position[3],\\n  };\\n}\\n\\n/**\\n * Logs stock data to --tail.\\n *\\n * @param {NS} ns\\n * @param {import('database/stocks').Stock[]} stocks\\n */\\nfunction logStocks(ns, stocks) {\\n  ns.clearLog();\\n\\n  stocks.sort(\\n    (stock1, stock2) =>\\n      getPosition(ns, stock2.symbol).longs -\\n      getPosition(ns, stock1.symbol).longs\\n  );\\n\\n  const table = { rows: [] };\\n  for (const stock of stocks) {\\n    const position = getPosition(ns, stock.symbol);\\n    const row = {\\n      cells: [\\n        {\\n          column: { name: 'Symbol', style: {} },\\n          content: stock.symbol,\\n        },\\n        {\\n          column: { name: 'Organization', style: {} },\\n          content: stock.organization,\\n        },\\n        {\\n          column: { name: 'Server', style: {} },\\n          content: stock.server,\\n        },\\n        {\\n          column: { name: 'Longs', style: { textAlign: 'right' } },\\n          content:\\n            position.longs === 0 ? '-' : ns.formatNumber(position.longs, 0),\\n        },\\n        {\\n          column: { name: 'Avg. Long Price', style: { textAlign: 'right' } },\\n          content:\\n            position.longs === 0 ? '-' : formatMoney(ns, position.longPrice),\\n        },\\n        {\\n          column: { name: 'Ask Price', style: { textAlign: 'right' } },\\n          content: formatMoney(ns, ns.stock.getAskPrice(stock.symbol)),\\n        },\\n        {\\n          column: { name: 'Shorts', style: { textAlign: 'right' } },\\n          content:\\n            position.shorts === 0 ? '-' : ns.formatNumber(position.shorts, 0),\\n        },\\n        {\\n          column: { name: 'Avg. Short Price', style: { textAlign: 'right' } },\\n          content:\\n            position.shorts === 0 ? '-' : formatMoney(ns, position.shortPrice),\\n        },\\n        {\\n          column: { name: 'Max Shares', style: { textAlign: 'right' } },\\n          content: ns.formatNumber(stock.maxShares, 0),\\n        },\\n      ],\\n    };\\n    table.rows.push(row);\\n  }\\n  printTable(ns, table);\\n}\\n\",\"filename\":\"manage-stocks.js\",\"server\":\"home\"}}],[\"database/stocks.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getServers } from 'database/servers';\\n\\nconst STOCKS_FILENAME = 'database/stocks.txt';\\n\\n/**\\n * @typedef Stock\\n * @property {string} symbol\\n * @property {string} organization\\n * @property {string} server\\n * @property {number} maxShares\\n */\\n\\n/**\\n * Writes all stock symbols to file.\\n *\\n * @param {NS} ns\\n */\\nexport function writeStocks(ns) {\\n  const servers = getServers(ns);\\n  const organizationToServerMap = {};\\n  for (const server of servers) {\\n    organizationToServerMap[server.organization] = server.hostname;\\n  }\\n\\n  const stocks = ns.stock.getSymbols().map(symbol => {\\n    const organization = ns.stock.getOrganization(symbol);\\n    return {\\n      symbol: symbol,\\n      organization: organization,\\n      server: organizationToServerMap[organization],\\n      maxShares: ns.stock.getMaxShares(symbol),\\n    };\\n  });\\n  ns.write(STOCKS_FILENAME, JSON.stringify(stocks), 'w');\\n}\\n\\n/**\\n * @param {NS} ns\\n * @returns {Stock[]}\\n */\\nexport function getStocks(ns) {\\n  return JSON.parse(ns.read(STOCKS_FILENAME) || '[]');\\n}\\n\",\"filename\":\"database/stocks.js\",\"server\":\"home\"}}],[\"get-net-worth.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getStocks } from 'database/stocks';\\nimport { HOME_HOSTNAME } from 'utils/constants';\\nimport { formatMoney } from 'utils/format';\\n\\n/**\\n * Get net worth including stocks.\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  const moneyAvailable = ns.getServerMoneyAvailable(HOME_HOSTNAME);\\n  const moneyInStocks = getStocks(ns)\\n    .map(\\n      stock =>\\n        ns.stock.getAskPrice(stock.symbol) *\\n        ns.stock.getPosition(stock.symbol)[0]\\n    )\\n    .reduce((a, b) => a + b);\\n  ns.tprintf(`Total ${formatMoney(ns, moneyAvailable + moneyInStocks)}`);\\n  ns.tprintf(`Cash: ${formatMoney(ns, moneyAvailable)}`);\\n  ns.tprintf(`Stocks: ${formatMoney(ns, moneyInStocks)}`);\\n}\\n\",\"filename\":\"get-net-worth.js\",\"server\":\"home\"}}],[\"sell-all-stock.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getStocks } from 'database/stocks';\\nimport { HOME_HOSTNAME } from 'utils/constants';\\n\\n/**\\n * Sell all stock.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  ns.scriptKill('manage-stocks.js', HOME_HOSTNAME);\\n\\n  const symbols = getStocks(ns).map(stock => stock.symbol);\\n\\n  for (const symbol of symbols) {\\n    const position = ns.stock.getPosition(symbol);\\n\\n    // Sell longs.\\n    const longs = position[0];\\n    ns.stock.sellStock(symbol, position[0]);\\n\\n    // Sell shorts.\\n    try {\\n      ns.stock.sellShort(symbol, position[2]);\\n    } catch (_) {}\\n  }\\n}\\n\",\"filename\":\"sell-all-stock.js\",\"server\":\"home\"}}],[\"utils/servers.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"import { HOME_HOSTNAME } from 'utils/constants';\\n\\n/**\\n * Gets all hostnames available.\\n *\\n * @param {NS} ns\\n * @param {[string]} rootHostname\\n * @param {[string]} previousHostname\\n * @returns {string[]} all hostnames\\n */\\nexport function getAllHostnames(ns, rootHostname, previousHostname) {\\n  const childrenHostnames = ns\\n    .scan(rootHostname)\\n    .filter(hostname => hostname !== previousHostname);\\n  const allHostnames = [...childrenHostnames];\\n  for (const childHostname of childrenHostnames) {\\n    allHostnames.push(...getAllHostnames(ns, childHostname, rootHostname));\\n  }\\n  return [...new Set(allHostnames)];\\n}\\n\\n/**\\n * @typedef {@type string[]} Path\\n *\\n * Gets a list of all paths to hosts.\\n *\\n * @param {NS} ns\\n * @param {string} rootHostname\\n * @param {[Path]} path\\n * @returns {Path[]} all paths including home as the first server\\n */\\nexport function getAllPaths(ns, rootHostname, path) {\\n  path = path ?? [];\\n\\n  const childrenHostnames = ns\\n    .scan(rootHostname)\\n    .filter(hostname => hostname !== path[path.length - 1]);\\n  if (childrenHostnames.length === 0) return [];\\n\\n  const allPaths = [];\\n  for (const childHostname of childrenHostnames) {\\n    allPaths.push([...path, rootHostname, childHostname]);\\n    allPaths.push(...getAllPaths(ns, childHostname, [...path, rootHostname]));\\n  }\\n  return allPaths;\\n}\\n\",\"filename\":\"utils/servers.js\",\"server\":\"home\"}}],[\"contracts/spiralize-matrix.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Spiralize Matrix\\n *\\n * Given the following array of arrays of numbers representing a 2D matrix,\\n * return the elements of the matrix as an array in spiral order:\\n *\\n *     [\\n *         [25,20,16, 5,39,24,15,41,12,13,27,10]\\n *         [44,26,34,22,19,39,20,28,37,34,43,24]\\n *         [34, 1, 7,36,43,37,44,44, 5,36,49, 7]\\n *         [ 7,24,41,41, 3,44,20,50,31, 6, 9,15]\\n *         [36,13,47,41, 7,41,23, 2, 4,45,40,12]\\n *         [31,43,21,14,30,47,14, 6,43,49,25,12]\\n *         [47,40,25,46,13,39,41,48,46,45,34,25]\\n *         [22,26,29,24,24,38,40,30,13,38,34,46]\\n *         [47,34,17,16,36,16,24,27,16,50,13, 9]\\n *         [10,10,13,26,14,17,36,14,49,50,25,11]\\n *         [11,49, 7,25,43, 9, 2,42, 7,12,25,25]\\n *         [25,16,24,17,31,31,45,22, 9, 7,35,39]\\n *     ]\\n *\\n * Here is an example of what spiral order should be:\\n *\\n *     [\\n *         [1, 2, 3]\\n *         [4, 5, 6]\\n *         [7, 8, 9]\\n *     ]\\n *\\n * Answer: [1, 2, 3, 6, 9, 8 ,7, 4, 5]\\n *\\n * Note that the matrix will not always be square:\\n *\\n *     [\\n *         [1,  2,  3,  4]\\n *         [5,  6,  7,  8]\\n *         [9, 10, 11, 12]\\n *     ]\\n *\\n * Answer: [1, 2, 3, 4, 8, 12, 11, 10, 9, 5, 6, 7]\\n *\\n * @param {number[][]} matrix\\n * @returns {number[]}\\n */\\nexport default function spiralizeMatrix(matrix) {\\n  const elements = [];\\n  const totalElementCount = matrix.length * matrix[0].length;\\n\\n  let [x, y] = [0, 0];\\n  let direction = Direction.Right;\\n  do {\\n    if (isValidPosition(x, y, matrix)) {\\n      elements.push(matrix[y][x]);\\n      matrix[y][x] = null;\\n    }\\n\\n    switch (direction) {\\n      case Direction.Right:\\n        if (isValidPosition(x + 1, y, matrix)) {\\n          x++;\\n        } else {\\n          direction = Direction.Down;\\n        }\\n        break;\\n      case Direction.Down:\\n        if (isValidPosition(x, y + 1, matrix)) {\\n          y++;\\n        } else {\\n          direction = Direction.Left;\\n        }\\n        break;\\n      case Direction.Left:\\n        if (isValidPosition(x - 1, y, matrix)) {\\n          x--;\\n        } else {\\n          direction = Direction.Up;\\n        }\\n        break;\\n      case Direction.Up:\\n        if (isValidPosition(x, y - 1, matrix)) {\\n          y--;\\n        } else {\\n          direction = Direction.Right;\\n        }\\n        break;\\n    }\\n  } while (elements.length < totalElementCount);\\n\\n  return elements;\\n}\\n\\n/**\\n * @param {number} x\\n * @param {number} y\\n * @param {number[][]} matrix\\n * @returns\\n */\\nfunction isValidPosition(x, y, matrix) {\\n  return (\\n    x >= 0 &&\\n    y >= 0 &&\\n    y < matrix.length &&\\n    x < matrix[y].length &&\\n    matrix[y][x] !== null\\n  );\\n}\\n\\nconst Direction = Object.freeze({\\n  Right: Symbol('Right'),\\n  Down: Symbol('Down'),\\n  Left: Symbol('Left'),\\n  Up: Symbol('Up'),\\n});\\n\",\"filename\":\"contracts/spiralize-matrix.js\",\"server\":\"home\"}}],[\"utils/colors.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"class HSLA {\\n  /**\\n   * @param {number} h hue [0, 360]\\n   * @param {number} s saturation [0, 100]\\n   * @param {number} l luminosity [0, 100]\\n   * @param {[number]} a alpha [0.0, 1.0]\\n   */\\n  constructor(h, s, l, a) {\\n    this.h = h;\\n    this.s = s;\\n    this.l = l;\\n    this.a = a ?? 1;\\n  }\\n\\n  toString() {\\n    return `hsla(${this.h}, ${this.s}%, ${this.l}%, ${this.a})`;\\n  }\\n}\\n\\nclass RGBA {\\n  /**\\n   * @param {number} r [0, 255]\\n   * @param {number} g [0, 255]\\n   * @param {number} b [0, 255]\\n   * @param {[number]} a alpha [0.0, 1.0]\\n   */\\n  constructor(r, g, b, a) {\\n    this.r = r;\\n    this.g = g;\\n    this.b = b;\\n    this.a = a ?? 1;\\n  }\\n\\n  toString() {\\n    return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\\n  }\\n}\\n\\n/**\\n * Creates a random color based on the UI theme and a given string (such as a\\n * server name).\\n *\\n * @param {NS} ns\\n * @param {string} str\\n * @returns {string} color that can be used in CSS\\n */\\nexport function createColorForString(ns, str) {\\n  const primaryHsla = hexToHsla(ns.ui.getTheme().primary);\\n  const seed =\\n    str\\n      .split('')\\n      .map(character => character.charCodeAt(0))\\n      .reduce((a, b) => a + b) *\\n    (str.match(/\\\\d/g) ?? [str.length])\\n      .map(number => parseInt(number))\\n      .reduce((a, b) => a + b);\\n\\n  // Generate hue.\\n  const hue = seed % 360;\\n\\n  // Generate saturation.\\n  const minSaturation = Math.max(0, primaryHsla.s - 50);\\n  const maxSaturation = Math.min(100, primaryHsla.s + 50);\\n  const saturation =\\n    ((seed % 100) / 100) * (maxSaturation - minSaturation) + minSaturation;\\n\\n  // Generate luminosity.\\n  const minLuminosity = Math.max(0, primaryHsla.l - 10);\\n  const maxLuminosity = Math.min(100, primaryHsla.l + 10);\\n  const luminosity =\\n    ((seed % 100) / 100) * (maxLuminosity - minLuminosity) + minLuminosity;\\n\\n  return new HSLA(hue, saturation, luminosity);\\n}\\n\\n/**\\n * @param {string} hex (e.g. #000000 or with alpha #FFFFFF33)\\n * @returns {RGBA}\\n */\\nfunction hexToRgba(hex) {\\n  hex = hex.replace('#', '');\\n\\n  // Expand any shorted hex values (e.g. 000 or with alpha FFF3).\\n  if (hex.length <= 4) {\\n    hex = hex\\n      .split('')\\n      .map(part => part + part)\\n      .join('');\\n  }\\n\\n  // Add alpha if it doesn't exist.\\n  if (hex.length === 6) hex += 'FF';\\n\\n  return new RGBA(\\n    parseInt(hex.substring(0, 2), 16),\\n    parseInt(hex.substring(2, 4), 16),\\n    parseInt(hex.substring(4, 6), 16),\\n    Math.round((parseInt(hex.substring(6, 8), 16) / 255) * 100) / 100\\n  );\\n}\\n\\n/**\\n * @param {string} hex (e.g. #000000 or with alpha #FFFFFF33)\\n * @returns {HSLA}\\n */\\nfunction hexToHsla(hex) {\\n  return rgbaToHsla(hexToRgba(hex));\\n}\\n\\n/**\\n * @param {RGBA} rgba\\n * @returns {HSLA}\\n */\\nfunction rgbaToHsla(rgba) {\\n  // Make r, g, and b fractions of 1.\\n  const [r, g, b] = [rgba.r, rgba.g, rgba.b].map(part => part / 255);\\n\\n  // Find greatest and smallest channel values.\\n  const [cmin, cmax] = [Math.min, Math.max].map(fn => fn(r, g, b));\\n  const delta = cmax - cmin;\\n\\n  // Calculate hue.\\n  let h;\\n  if (delta === 0) h = 0;\\n  else if (cmax == r) h = ((g - b) / delta) % 6;\\n  else if (cmax == g) h = (b - r) / delta + 2;\\n  else h = (r - g) / delta + 4;\\n  h = Math.round(h * 60);\\n  if (h < 0) h += 360;\\n\\n  // Calculate lightness.\\n  let l = (cmax + cmin) / 2;\\n\\n  // Calculate saturation.\\n  let s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\\n\\n  // Multiply l and s by 100.\\n  s = Math.round(s * 100);\\n  l = Math.round(l * 100);\\n\\n  return new HSLA(h, s, l, rgba.a);\\n}\\n\",\"filename\":\"utils/colors.js\",\"server\":\"home\"}}],[\"contracts/encryption-i-caesar-cipher.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Encryption I: Caesar Cipher\\n *\\n * Caesar cipher is one of the simplest encryption technique. It is a type of\\n * substitution cipher in which each letter in the plaintext is replaced by a\\n * letter some fixed number of positions down the alphabet. For example, with a\\n * left shift of 3, D would be replaced by A, E would become B, and A would\\n * become X (because of rotation).\\n *\\n * You are given an array with two elements:\\n *   [\\\"ENTER MOUSE TRASH PASTE DEBUG\\\", 1]\\n * The first element is the plaintext, the second element is the left shift value.\\n *\\n * Return the ciphertext as uppercase string. Spaces remains the same.\\n *\\n * @param {(string | number)[]} input [plain text, left shift value]\\n * @returns {string} cipher\\n */\\nexport default function encryptionICaesarCipher(input) {\\n  const [plainText, leftShift] = input;\\n  const charCodeForA = 'A'.charCodeAt(0);\\n  const charCodeForZ = 'Z'.charCodeAt(0);\\n\\n  // Convert every character in plain text to a char code and shift it by left\\n  // shift value.\\n  /** @type {number[]} */ const shiftedCharCodes = [];\\n  for (let i = 0; i < plainText.length; i++) {\\n    const charCode = plainText.charCodeAt(i);\\n\\n    // Ignore characters that are outside of [A, Z].\\n    if (charCode < charCodeForA || charCode > charCodeForZ) {\\n      shiftedCharCodes.push(charCode);\\n      continue;\\n    }\\n\\n    let shiftedCharCode;\\n    if (charCode - leftShift < charCodeForA) {\\n      shiftedCharCode =\\n        charCodeForZ - (leftShift - (charCode - charCodeForA)) + 1;\\n    } else {\\n      shiftedCharCode = charCode - leftShift;\\n    }\\n    shiftedCharCodes.push(shiftedCharCode);\\n  }\\n\\n  return shiftedCharCodes\\n    .map(charCode => String.fromCharCode(charCode))\\n    .join('');\\n}\\n\",\"filename\":\"contracts/encryption-i-caesar-cipher.js\",\"server\":\"home\"}}],[\"contracts/merge-overlapping-intervals.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Merge Overlapping Intervals\\n *\\n * Given the following array of arrays of numbers representing a list of\\n * intervals, merge all overlapping intervals.\\n *\\n * [[7,12],[25,35],[9,15],[22,24],[18,23],[8,17],[11,21],[16,24],[9,10],[4,8]]\\n *\\n * Example:\\n *\\n * [[1, 3], [8, 10], [2, 6], [10, 16]]\\n *\\n * would merge into [[1, 6], [8, 16]].\\n *\\n * The intervals must be returned in ASCENDING order. You can assume that in an\\n * interval, the first number will always be smaller than the second.\\n *\\n * @typedef {[number, number]} Interval\\n *\\n * @param {Interval[]} input\\n */\\nexport default function mergeOverlappingIntervals(input) {\\n  const intervals = [...input];\\n\\n  // Sort intervals by first number.\\n  intervals.sort((a, b) => a[0] - b[0]);\\n\\n  let i = 0;\\n  while (i < intervals.length - 1) {\\n    const a = intervals[i];\\n    const b = intervals[i + 1];\\n    if (isOverlapping(a, b)) {\\n      intervals.splice(i, 2, mergeIntervals(a, b));\\n      i = 0;\\n    } else {\\n      i++;\\n    }\\n  }\\n  return intervals;\\n}\\n\\n/**\\n * @param {Interval} a\\n * @param {Interval} b\\n * @returns {boolean} whether the intervals are overlapping\\n */\\nfunction isOverlapping(a, b) {\\n  // If 'a' is inside 'b'.\\n  if (b[0] <= a[0] && a[1] <= b[1]) return true;\\n\\n  // If 'b' is inside 'a'.\\n  if (a[0] <= b[0] && b[1] <= a[1]) return true;\\n\\n  // If 'a' is before 'b'.\\n  if (b[0] <= a[1]) return true;\\n\\n  return false;\\n}\\n\\n/**\\n * @param {Interval} a\\n * @param {Interval} b\\n * @returns {Interval} merged interval\\n */\\nfunction mergeIntervals(a, b) {\\n  return [Math.min(a[0], b[0]), Math.max(a[1], b[1])];\\n}\\n\",\"filename\":\"contracts/merge-overlapping-intervals.js\",\"server\":\"home\"}}],[\"contracts/encryption-ii-vigenere-cipher.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Encryption II: Vigenère Cipher\\n *\\n * Vigenère cipher is a type of polyalphabetic substitution. It uses the\\n * Vigenère square to encrypt and decrypt plaintext with a keyword.\\n *\\n *   Vigenère square:\\n *          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\\n *        +----------------------------------------------------\\n *      A | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\\n *      B | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A\\n *      C | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\\n *      D | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\\n *      E | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\\n *                 ...\\n *      Y | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\\n *      Z | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\\n *\\n * For encryption each letter of the plaintext is paired with the corresponding\\n * letter of a repeating keyword. For example, the plaintext DASHBOARD is\\n * encrypted with the keyword LINUX:\\n *    Plaintext: DASHBOARD\\n *    Keyword:   LINUXLINU\\n * So, the first letter D is paired with the first letter of the key L.\\n * Therefore, row D and column L of the Vigenère square are used to get the\\n * first cipher letter O. This must be repeated for the whole ciphertext.\\n *\\n * You are given an array with two elements:\\n *   [\\\"POPUPENTERMOUSEINBOXMACRO\\\", \\\"BLOGGER\\\"]\\n * The first element is the plaintext, the second element is the keyword.\\n *\\n * Return the ciphertext as uppercase string.\\n *\\n * @param {[string, string]} input\\n */\\nexport default function encryptionIIVigenereCipher(input) {\\n  const cipher = createCipher();\\n\\n  // Make the keyword match the length of the plain text.\\n  const plainText = input[0];\\n  let keyword = input[1];\\n  while (keyword.length < plainText.length) {\\n    keyword += keyword;\\n  }\\n  keyword = keyword.substring(0, plainText.length);\\n\\n  // Encrypt.\\n  let encryptedMessage = '';\\n  for (let i = 0; i < plainText.length; i++) {\\n    encryptedMessage += cipher[plainText[i]][keyword[i]];\\n  }\\n  return encryptedMessage;\\n}\\n\\n/**\\n * @typedef {Object.<string, Object<string, string>} Cipher\\n *\\n * @returns {Cipher} cipher\\n */\\nfunction createCipher() {\\n  const charCodeAtA = 'A'.charCodeAt(0);\\n  const charCodeAtZ = 'Z'.charCodeAt(0);\\n\\n  const alphabet = [];\\n  for (let i = charCodeAtA; i <= charCodeAtZ; i++) {\\n    alphabet.push(String.fromCharCode(i));\\n  }\\n\\n  const cipher = {};\\n  for (let i = 0; i < alphabet.length; i++) {\\n    cipher[alphabet[i]] = {};\\n    const offsetAlphabet = [...alphabet.slice(i), ...alphabet.slice(0, i)];\\n    for (let j = 0; j < alphabet.length; j++) {\\n      cipher[alphabet[i]][alphabet[j]] = offsetAlphabet[j];\\n    }\\n  }\\n  return cipher;\\n}\\n\",\"filename\":\"contracts/encryption-ii-vigenere-cipher.js\",\"server\":\"home\"}}],[\"contracts/subarray-with-maximum-sum.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Subarray with Maximum Sum\\n *\\n * Given the following integer array, find the contiguous subarray (containing\\n * at least one number) which has the largest sum and return that sum. 'Sum'\\n * refers to the sum of all the numbers in the subarray.\\n *\\n * 9,-10,-5,3,-1,7,-3,8,5,9,5,-6,-5,-7,4,3,-4,-6,3,-7,10,-6,3,3,1,1,10,0,-8,2,3,-2,1\\n *\\n * @param {number[]} array\\n * @returns {number[]} subarray\\n */\\nexport default function subarrayWithMaximumSum(array) {\\n  return getMaxSumSubarray(array);\\n}\\n\\n/**\\n * @param {number[]} array\\n * @returns {number[]}\\n */\\nfunction getMaxSumSubarray(array) {\\n  if (array.length === 1) return array;\\n\\n  if (array.length === 2) {\\n    return determineMaxSumSubarray(array.slice(0, 1), array.slice(1), array);\\n  }\\n\\n  const maxSumSubarray = getMaxSumSubarray(array.slice(1));\\n}\\n\\n/**\\n * @param  {...number[]} subarrays\\n * @returns {number[]} subarray with max sum\\n */\\nfunction determineMaxSumSubarray(...subarrays) {\\n  console.log(`comparing ${subarrays.join('\\\\n')}`);\\n  let maxSum, maxSumSubarray;\\n  for (const subarray of subarrays) {\\n    const sum = subarray.reduce((a, b) => a + b);\\n    if (maxSum === undefined || sum > maxSum) {\\n      maxSum = sum;\\n      maxSumSubarray = subarray;\\n    }\\n  }\\n  return maxSumSubarray;\\n}\\n\\nconsole.log(subarrayWithMaximumSum([10, 6]));\\n\",\"filename\":\"contracts/subarray-with-maximum-sum.js\",\"server\":\"home\"}}],[\"contracts/total-ways-to-sum-ii.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Total Ways to Sum II\\n *\\n * How many different distinct ways can the number 193 be written as a sum of integers contained in the set:\\n *\\n * [1,2,3,4,5,6,9,10]?\\n *\\n * You may use each integer in the set zero or more times.\\n *\\n * @param {number} sum\\n * @returns {number} ways to sum\\n */\\nexport default function totalWaysToSumII(sum) {\\n  const addends = [1, 2, 3, 4, 5, 6, 9, 10];\\n  return getWaysToSum(sum, addends);\\n}\\n\\n/**\\n * @typdef {string[]} WayToSum\\n */\\n\\n/**\\n *\\n * @param {number} sum\\n * @param {number[]} addends\\n * @returns {WayToSum[]} ways to sum\\n */\\nfunction getWaysToSum(sum, addends) {\\n  const waysToSum = [];\\n\\n  const addendsLessThanSum = [];\\n\\n  // Remove all addends that are greater or equal to the sum.\\n  for (const addend of addends) {\\n    if (addend > sum) continue;\\n    if (addend === sum) {\\n      waysToSum.push([`${addend}*1`]);\\n      continue;\\n    }\\n    addendsLessThanSum.push(addend);\\n  }\\n\\n  for (const addend of addendsLessThanSum) {\\n    const maxTimesAddendGoesIntoSum = Math.floor(sum / addend);\\n    // console.log(`${addend} goes into ${sum} = ${maxTimesAddendGoesIntoSum}`);\\n    for (let i = 0; i <= maxTimesAddendGoesIntoSum; i++) {\\n      waysToSum.push(\\n        ...getWaysToSum(\\n          sum - addend * i,\\n          addendsLessThanSum.filter(a => a !== addend)\\n        ).map(ways => [`${addend}*${i}`, ...ways])\\n      );\\n    }\\n  }\\n\\n  return waysToSum;\\n}\\n\\nconsole.log(totalWaysToSumII(193));\\n\",\"filename\":\"contracts/total-ways-to-sum-ii.js\",\"server\":\"home\"}}]]},\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"lauren\",\"lauren-0\",\"lauren-1\",\"lauren-2\",\"lauren-3\",\"lauren-4\",\"lauren-5\",\"lauren-6\",\"lauren-7\",\"lauren-8\",\"lauren-9\",\"lauren-10\",\"lauren-11\",\"lauren-12\",\"lauren-13\",\"lauren-14\",\"lauren-15\",\"lauren-16\",\"lauren-17\",\"lauren-18\",\"lauren-19\",\"lauren-20\",\"lauren-21\",\"lauren-22\",\"darkweb\",\"lauren-23\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[[\"database/servers.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"database/servers.txt\",\"text\":\"[{\\\"hostname\\\":\\\"home\\\",\\\"path\\\":[],\\\"organization\\\":\\\"Home PC\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":262144,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"n00dles\\\",\\\"path\\\":[\\\"n00dles\\\"],\\\"organization\\\":\\\"Noodle Bar\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":4,\\\"maxMoney\\\":1750000,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"max-hardware\\\",\\\"path\\\":[\\\"n00dles\\\",\\\"max-hardware\\\"],\\\"organization\\\":\\\"Max Hardware Store\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":250000000,\\\"minSecurity\\\":5,\\\"baseSecurity\\\":15,\\\"hackingLevel\\\":80},{\\\"hostname\\\":\\\"foodnstuff\\\",\\\"path\\\":[\\\"foodnstuff\\\"],\\\"organization\\\":\\\"FoodNStuff\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":16,\\\"maxMoney\\\":50000000,\\\"minSecurity\\\":3,\\\"baseSecurity\\\":10,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"sigma-cosmetics\\\",\\\"path\\\":[\\\"sigma-cosmetics\\\"],\\\"organization\\\":\\\"Sigma Cosmetics\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":16,\\\"maxMoney\\\":57500000,\\\"minSecurity\\\":3,\\\"baseSecurity\\\":10,\\\"hackingLevel\\\":5},{\\\"hostname\\\":\\\"zer0\\\",\\\"path\\\":[\\\"sigma-cosmetics\\\",\\\"zer0\\\"],\\\"organization\\\":\\\"ZER0 Nightclub\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":187500000,\\\"minSecurity\\\":8,\\\"baseSecurity\\\":25,\\\"hackingLevel\\\":75},{\\\"hostname\\\":\\\"joesguns\\\",\\\"path\\\":[\\\"joesguns\\\"],\\\"organization\\\":\\\"Joe's Guns\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":16,\\\"maxMoney\\\":62500000,\\\"minSecurity\\\":5,\\\"baseSecurity\\\":15,\\\"hackingLevel\\\":10},{\\\"hostname\\\":\\\"nectar-net\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\"],\\\"organization\\\":\\\"Nectar Nightclub Network\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":16,\\\"maxMoney\\\":68750000,\\\"minSecurity\\\":7,\\\"baseSecurity\\\":20,\\\"hackingLevel\\\":20},{\\\"hostname\\\":\\\"neo-net\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"neo-net\\\"],\\\"organization\\\":\\\"Neo Nightclub Network\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":125000000,\\\"minSecurity\\\":8,\\\"baseSecurity\\\":25,\\\"hackingLevel\\\":50},{\\\"hostname\\\":\\\"the-hub\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"the-hub\\\"],\\\"organization\\\":\\\"The Hub\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":4469871425,\\\"minSecurity\\\":12,\\\"baseSecurity\\\":36,\\\"hackingLevel\\\":291},{\\\"hostname\\\":\\\"johnson-ortho\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"johnson-ortho\\\"],\\\"organization\\\":\\\"Johnson Orthopedics\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":1885264425,\\\"minSecurity\\\":21,\\\"baseSecurity\\\":64,\\\"hackingLevel\\\":281},{\\\"hostname\\\":\\\"crush-fitness\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"crush-fitness\\\"],\\\"organization\\\":\\\"Crush Fitness\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":1034704300,\\\"minSecurity\\\":14,\\\"baseSecurity\\\":43,\\\"hackingLevel\\\":234},{\\\"hostname\\\":\\\"summit-uni\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"neo-net\\\",\\\"crush-fitness\\\",\\\"summit-uni\\\"],\\\"organization\\\":\\\"Summit University\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":6021104725,\\\"minSecurity\\\":15,\\\"baseSecurity\\\":45,\\\"hackingLevel\\\":466},{\\\"hostname\\\":\\\"omega-net\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"omega-net\\\"],\\\"organization\\\":\\\"Omega Software\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":1671051700,\\\"minSecurity\\\":11,\\\"baseSecurity\\\":33,\\\"hackingLevel\\\":181},{\\\"hostname\\\":\\\"computek\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"omega-net\\\",\\\"computek\\\"],\\\"organization\\\":\\\"CompuTek\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":6123811200,\\\"minSecurity\\\":21,\\\"baseSecurity\\\":63,\\\"hackingLevel\\\":367},{\\\"hostname\\\":\\\"catalyst\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"omega-net\\\",\\\"computek\\\",\\\"catalyst\\\"],\\\"organization\\\":\\\"Catalyst Ventures\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":128,\\\"maxMoney\\\":10166280375,\\\"minSecurity\\\":21,\\\"baseSecurity\\\":63,\\\"hackingLevel\\\":410},{\\\"hostname\\\":\\\"millenium-fitness\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"omega-net\\\",\\\"computek\\\",\\\"catalyst\\\",\\\"millenium-fitness\\\"],\\\"organization\\\":\\\"Millenium Fitness Network\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":6250000000,\\\"minSecurity\\\":18,\\\"baseSecurity\\\":53,\\\"hackingLevel\\\":498},{\\\"hostname\\\":\\\"I.I.I.I\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"omega-net\\\",\\\"computek\\\",\\\"I.I.I.I\\\"],\\\"organization\\\":\\\"I.I.I.I\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":256,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":347},{\\\"hostname\\\":\\\"rho-construction\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"omega-net\\\",\\\"computek\\\",\\\"I.I.I.I\\\",\\\"rho-construction\\\"],\\\"organization\\\":\\\"Rho Construction\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":16,\\\"maxMoney\\\":16986848925,\\\"minSecurity\\\":18,\\\"baseSecurity\\\":55,\\\"hackingLevel\\\":515},{\\\"hostname\\\":\\\"aevum-police\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"omega-net\\\",\\\"computek\\\",\\\"I.I.I.I\\\",\\\"aevum-police\\\"],\\\"organization\\\":\\\"Aevum Police Headquarters\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":16,\\\"maxMoney\\\":9297405750,\\\"minSecurity\\\":26,\\\"baseSecurity\\\":78,\\\"hackingLevel\\\":406},{\\\"hostname\\\":\\\"galactic-cyber\\\",\\\"path\\\":[\\\"joesguns\\\",\\\"nectar-net\\\",\\\"omega-net\\\",\\\"computek\\\",\\\"I.I.I.I\\\",\\\"aevum-police\\\",\\\"galactic-cyber\\\"],\\\"organization\\\":\\\"Galactic Cybersystems\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":20421886950,\\\"minSecurity\\\":21,\\\"baseSecurity\\\":62,\\\"hackingLevel\\\":855},{\\\"hostname\\\":\\\"hong-fang-tea\\\",\\\"path\\\":[\\\"hong-fang-tea\\\"],\\\"organization\\\":\\\"HongFang Teahouse\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":16,\\\"maxMoney\\\":75000000,\\\"minSecurity\\\":5,\\\"baseSecurity\\\":15,\\\"hackingLevel\\\":30},{\\\"hostname\\\":\\\"CSEC\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\"],\\\"organization\\\":\\\"CyberSec\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":8,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":59},{\\\"hostname\\\":\\\"silver-helix\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\"],\\\"organization\\\":\\\"Silver Helix\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":1125000000,\\\"minSecurity\\\":10,\\\"baseSecurity\\\":30,\\\"hackingLevel\\\":150},{\\\"hostname\\\":\\\"netlink\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"netlink\\\"],\\\"organization\\\":\\\"NetLink Technologies\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":16,\\\"maxMoney\\\":6875000000,\\\"minSecurity\\\":25,\\\"baseSecurity\\\":76,\\\"hackingLevel\\\":422},{\\\"hostname\\\":\\\"zb-institute\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"netlink\\\",\\\"zb-institute\\\"],\\\"organization\\\":\\\"ZB Institute of Technology\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":128,\\\"maxMoney\\\":22934680475,\\\"minSecurity\\\":22,\\\"baseSecurity\\\":65,\\\"hackingLevel\\\":770},{\\\"hostname\\\":\\\"avmnite-02h\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\"],\\\"organization\\\":\\\"NiteSec\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":207},{\\\"hostname\\\":\\\"rothman-uni\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\"],\\\"organization\\\":\\\"Rothman University\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":5342380650,\\\"minSecurity\\\":18,\\\"baseSecurity\\\":54,\\\"hackingLevel\\\":425},{\\\"hostname\\\":\\\"lexo-corp\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"lexo-corp\\\"],\\\"organization\\\":\\\"LexoCorp\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":18064063525,\\\"minSecurity\\\":25,\\\"baseSecurity\\\":75,\\\"hackingLevel\\\":739},{\\\"hostname\\\":\\\"global-pharm\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"lexo-corp\\\",\\\"global-pharm\\\"],\\\"organization\\\":\\\"Global Pharmaceuticals\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":38759187275,\\\"minSecurity\\\":26,\\\"baseSecurity\\\":77,\\\"hackingLevel\\\":812},{\\\"hostname\\\":\\\"alpha-ent\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\"],\\\"organization\\\":\\\"Alpha Enterprises\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":17614208825,\\\"minSecurity\\\":23,\\\"baseSecurity\\\":68,\\\"hackingLevel\\\":505},{\\\"hostname\\\":\\\"aerocorp\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\"],\\\"organization\\\":\\\"AeroCorp\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":29181156600,\\\"minSecurity\\\":27,\\\"baseSecurity\\\":81,\\\"hackingLevel\\\":901},{\\\"hostname\\\":\\\"omnia\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\"],\\\"organization\\\":\\\"Omnia Cybersystems\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":24464913625,\\\"minSecurity\\\":29,\\\"baseSecurity\\\":86,\\\"hackingLevel\\\":854},{\\\"hostname\\\":\\\"solaris\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\"],\\\"organization\\\":\\\"Solaris Space Systems\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":21210645600,\\\"minSecurity\\\":26,\\\"baseSecurity\\\":77,\\\"hackingLevel\\\":783},{\\\"hostname\\\":\\\"taiyang-digital\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"taiyang-digital\\\"],\\\"organization\\\":\\\"Taiyang Digital\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":20271402500,\\\"minSecurity\\\":25,\\\"baseSecurity\\\":75,\\\"hackingLevel\\\":867},{\\\"hostname\\\":\\\"applied-energetics\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\"],\\\"organization\\\":\\\"Applied Energetics\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":19489147225,\\\"minSecurity\\\":25,\\\"baseSecurity\\\":74,\\\"hackingLevel\\\":780},{\\\"hostname\\\":\\\"stormtech\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"taiyang-digital\\\",\\\"applied-energetics\\\",\\\"stormtech\\\"],\\\"organization\\\":\\\"Storm Technologies\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":25880682950,\\\"minSecurity\\\":29,\\\"baseSecurity\\\":88,\\\"hackingLevel\\\":1045},{\\\"hostname\\\":\\\"run4theh111z\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"taiyang-digital\\\",\\\"run4theh111z\\\"],\\\"organization\\\":\\\"The Runners\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":520},{\\\"hostname\\\":\\\"zb-def\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\"],\\\"organization\\\":\\\"ZB Defense Industries\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":24343637325,\\\"minSecurity\\\":18,\\\"baseSecurity\\\":55,\\\"hackingLevel\\\":819},{\\\"hostname\\\":\\\"titan-labs\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"titan-labs\\\"],\\\"organization\\\":\\\"Titan Laboratories\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":19945352650,\\\"minSecurity\\\":25,\\\"baseSecurity\\\":74,\\\"hackingLevel\\\":843},{\\\"hostname\\\":\\\"helios\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"titan-labs\\\",\\\"helios\\\"],\\\"organization\\\":\\\"Helios Labs\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":14281905025,\\\"minSecurity\\\":32,\\\"baseSecurity\\\":95,\\\"hackingLevel\\\":877},{\\\"hostname\\\":\\\"omnitek\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"titan-labs\\\",\\\"helios\\\",\\\"omnitek\\\"],\\\"organization\\\":\\\"OmniTek Incorporated\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":128,\\\"maxMoney\\\":479512806950,\\\"minSecurity\\\":30,\\\"baseSecurity\\\":90,\\\"hackingLevel\\\":1077},{\\\"hostname\\\":\\\"powerhouse-fitness\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"titan-labs\\\",\\\"helios\\\",\\\"omnitek\\\",\\\"powerhouse-fitness\\\"],\\\"organization\\\":\\\"Powerhouse Fitness\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":22500000000,\\\"minSecurity\\\":21,\\\"baseSecurity\\\":63,\\\"hackingLevel\\\":988},{\\\"hostname\\\":\\\".\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"titan-labs\\\",\\\"helios\\\",\\\".\\\"],\\\"organization\\\":\\\".\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":16,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":515},{\\\"hostname\\\":\\\"nwo\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"titan-labs\\\",\\\"helios\\\",\\\".\\\",\\\"nwo\\\"],\\\"organization\\\":\\\"NWO\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":727586953075,\\\"minSecurity\\\":33,\\\"baseSecurity\\\":99,\\\"hackingLevel\\\":1206},{\\\"hostname\\\":\\\"megacorp\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"titan-labs\\\",\\\"helios\\\",\\\".\\\",\\\"nwo\\\",\\\"megacorp\\\"],\\\"organization\\\":\\\"MegaCorp\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":1003479929600,\\\"minSecurity\\\":33,\\\"baseSecurity\\\":99,\\\"hackingLevel\\\":1216},{\\\"hostname\\\":\\\"microdyne\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\"],\\\"organization\\\":\\\"Microdyne Technologies\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":12534206825,\\\"minSecurity\\\":23,\\\"baseSecurity\\\":68,\\\"hackingLevel\\\":817},{\\\"hostname\\\":\\\"fulcrumtech\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\",\\\"fulcrumtech\\\"],\\\"organization\\\":\\\"Fulcrum Technologies\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":1024,\\\"maxMoney\\\":42169450075,\\\"minSecurity\\\":30,\\\"baseSecurity\\\":91,\\\"hackingLevel\\\":1201},{\\\"hostname\\\":\\\"vitalife\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\",\\\"vitalife\\\"],\\\"organization\\\":\\\"VitaLife\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":64,\\\"maxMoney\\\":18503187925,\\\"minSecurity\\\":29,\\\"baseSecurity\\\":88,\\\"hackingLevel\\\":793},{\\\"hostname\\\":\\\"4sigma\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\",\\\"vitalife\\\",\\\"4sigma\\\"],\\\"organization\\\":\\\"Four Sigma\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":389602037250,\\\"minSecurity\\\":25,\\\"baseSecurity\\\":74,\\\"hackingLevel\\\":1158},{\\\"hostname\\\":\\\"blade\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\",\\\"vitalife\\\",\\\"4sigma\\\",\\\"blade\\\"],\\\"organization\\\":\\\"Blade Industries\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":256,\\\"maxMoney\\\":260068255750,\\\"minSecurity\\\":30,\\\"baseSecurity\\\":90,\\\"hackingLevel\\\":1107},{\\\"hostname\\\":\\\"ecorp\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\",\\\"vitalife\\\",\\\"4sigma\\\",\\\"blade\\\",\\\"ecorp\\\"],\\\"organization\\\":\\\"ECorp\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":1323772422600,\\\"minSecurity\\\":33,\\\"baseSecurity\\\":99,\\\"hackingLevel\\\":1254},{\\\"hostname\\\":\\\"kuai-gong\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\",\\\"vitalife\\\",\\\"kuai-gong\\\"],\\\"organization\\\":\\\"KuaiGong International\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":544622933975,\\\"minSecurity\\\":32,\\\"baseSecurity\\\":97,\\\"hackingLevel\\\":1215},{\\\"hostname\\\":\\\"b-and-a\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\",\\\"vitalife\\\",\\\"kuai-gong\\\",\\\"b-and-a\\\"],\\\"organization\\\":\\\"Bachman & Associates\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":430014669325,\\\"minSecurity\\\":26,\\\"baseSecurity\\\":79,\\\"hackingLevel\\\":937},{\\\"hostname\\\":\\\"The-Cave\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\",\\\"vitalife\\\",\\\"kuai-gong\\\",\\\"b-and-a\\\",\\\"The-Cave\\\"],\\\"organization\\\":\\\"Helios\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":925},{\\\"hostname\\\":\\\"clarkinc\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\",\\\"vitalife\\\",\\\"kuai-gong\\\",\\\"clarkinc\\\"],\\\"organization\\\":\\\"Clarke Incorporated\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":526505593050,\\\"minSecurity\\\":22,\\\"baseSecurity\\\":65,\\\"hackingLevel\\\":1098},{\\\"hostname\\\":\\\"fulcrumassets\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"zb-def\\\",\\\"microdyne\\\",\\\"vitalife\\\",\\\"kuai-gong\\\",\\\"clarkinc\\\",\\\"fulcrumassets\\\"],\\\"organization\\\":\\\"Fulcrum Technologies\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":25000000,\\\"minSecurity\\\":33,\\\"baseSecurity\\\":99,\\\"hackingLevel\\\":1315},{\\\"hostname\\\":\\\"nova-med\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"omnia\\\",\\\"solaris\\\",\\\"nova-med\\\"],\\\"organization\\\":\\\"Nova Medical\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":28325320550,\\\"minSecurity\\\":25,\\\"baseSecurity\\\":74,\\\"hackingLevel\\\":826},{\\\"hostname\\\":\\\"deltaone\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"deltaone\\\"],\\\"organization\\\":\\\"DeltaOne\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":40357895400,\\\"minSecurity\\\":25,\\\"baseSecurity\\\":75,\\\"hackingLevel\\\":803},{\\\"hostname\\\":\\\"defcomm\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"deltaone\\\",\\\"defcomm\\\"],\\\"organization\\\":\\\"DefComm\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":22845158450,\\\"minSecurity\\\":30,\\\"baseSecurity\\\":91,\\\"hackingLevel\\\":882},{\\\"hostname\\\":\\\"infocomm\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"deltaone\\\",\\\"defcomm\\\",\\\"infocomm\\\"],\\\"organization\\\":\\\"InfoComm\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":21283382525,\\\"minSecurity\\\":25,\\\"baseSecurity\\\":75,\\\"hackingLevel\\\":898},{\\\"hostname\\\":\\\"icarus\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"deltaone\\\",\\\"icarus\\\"],\\\"organization\\\":\\\"Icarus Microsystems\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":22627964150,\\\"minSecurity\\\":30,\\\"baseSecurity\\\":91,\\\"hackingLevel\\\":877},{\\\"hostname\\\":\\\"zeus-med\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"deltaone\\\",\\\"zeus-med\\\"],\\\"organization\\\":\\\"Zeus Medical\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":34797755925,\\\"minSecurity\\\":25,\\\"baseSecurity\\\":74,\\\"hackingLevel\\\":806},{\\\"hostname\\\":\\\"unitalife\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"unitalife\\\"],\\\"organization\\\":\\\"UnitaLife Group\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":26281657025,\\\"minSecurity\\\":24,\\\"baseSecurity\\\":73,\\\"hackingLevel\\\":820},{\\\"hostname\\\":\\\"univ-energy\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"aerocorp\\\",\\\"unitalife\\\",\\\"univ-energy\\\"],\\\"organization\\\":\\\"Universal Energy\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":128,\\\"maxMoney\\\":29883572350,\\\"minSecurity\\\":28,\\\"baseSecurity\\\":85,\\\"hackingLevel\\\":834},{\\\"hostname\\\":\\\"snap-fitness\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"rothman-uni\\\",\\\"alpha-ent\\\",\\\"snap-fitness\\\"],\\\"organization\\\":\\\"Snap Fitness\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":11250000000,\\\"minSecurity\\\":16,\\\"baseSecurity\\\":47,\\\"hackingLevel\\\":763},{\\\"hostname\\\":\\\"syscore\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"silver-helix\\\",\\\"avmnite-02h\\\",\\\"syscore\\\"],\\\"organization\\\":\\\"SysCore Securities\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":13905544800,\\\"minSecurity\\\":26,\\\"baseSecurity\\\":78,\\\"hackingLevel\\\":627},{\\\"hostname\\\":\\\"phantasy\\\",\\\"path\\\":[\\\"hong-fang-tea\\\",\\\"CSEC\\\",\\\"phantasy\\\"],\\\"organization\\\":\\\"Phantasy Club\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":600000000,\\\"minSecurity\\\":7,\\\"baseSecurity\\\":20,\\\"hackingLevel\\\":100},{\\\"hostname\\\":\\\"harakiri-sushi\\\",\\\"path\\\":[\\\"harakiri-sushi\\\"],\\\"organization\\\":\\\"HaraKiri Sushi Bar Network\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":16,\\\"maxMoney\\\":100000000,\\\"minSecurity\\\":5,\\\"baseSecurity\\\":15,\\\"hackingLevel\\\":40},{\\\"hostname\\\":\\\"iron-gym\\\",\\\"path\\\":[\\\"iron-gym\\\"],\\\"organization\\\":\\\"Iron Gym Network\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":32,\\\"maxMoney\\\":500000000,\\\"minSecurity\\\":10,\\\"baseSecurity\\\":30,\\\"hackingLevel\\\":100},{\\\"hostname\\\":\\\"lauren\\\",\\\"path\\\":[\\\"lauren\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":1048576,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-0\\\",\\\"path\\\":[\\\"lauren-0\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":262144,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-1\\\",\\\"path\\\":[\\\"lauren-1\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":131072,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-2\\\",\\\"path\\\":[\\\"lauren-2\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":65536,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-3\\\",\\\"path\\\":[\\\"lauren-3\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":65536,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-4\\\",\\\"path\\\":[\\\"lauren-4\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":32768,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-5\\\",\\\"path\\\":[\\\"lauren-5\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":8192,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-6\\\",\\\"path\\\":[\\\"lauren-6\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":8192,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-7\\\",\\\"path\\\":[\\\"lauren-7\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":8192,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-8\\\",\\\"path\\\":[\\\"lauren-8\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":4096,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-9\\\",\\\"path\\\":[\\\"lauren-9\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":4096,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-10\\\",\\\"path\\\":[\\\"lauren-10\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":2048,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-11\\\",\\\"path\\\":[\\\"lauren-11\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":2048,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-12\\\",\\\"path\\\":[\\\"lauren-12\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":1024,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-13\\\",\\\"path\\\":[\\\"lauren-13\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":1024,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-14\\\",\\\"path\\\":[\\\"lauren-14\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":512,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-15\\\",\\\"path\\\":[\\\"lauren-15\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":512,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-16\\\",\\\"path\\\":[\\\"lauren-16\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":4096,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-17\\\",\\\"path\\\":[\\\"lauren-17\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":512,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-18\\\",\\\"path\\\":[\\\"lauren-18\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":4096,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-19\\\",\\\"path\\\":[\\\"lauren-19\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":256,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-20\\\",\\\"path\\\":[\\\"lauren-20\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":4096,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-21\\\",\\\"path\\\":[\\\"lauren-21\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":256,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-22\\\",\\\"path\\\":[\\\"lauren-22\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":4096,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"darkweb\\\",\\\"path\\\":[\\\"darkweb\\\"],\\\"organization\\\":\\\"darkweb\\\",\\\"isPurchased\\\":false,\\\"maxRam\\\":0,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1},{\\\"hostname\\\":\\\"lauren-23\\\",\\\"path\\\":[\\\"lauren-23\\\"],\\\"organization\\\":\\\"\\\",\\\"isPurchased\\\":true,\\\"maxRam\\\":128,\\\"maxMoney\\\":0,\\\"minSecurity\\\":1,\\\"baseSecurity\\\":1,\\\"hackingLevel\\\":1}]\"}}],[\"database/stocks.txt\",{\"ctor\":\"TextFile\",\"data\":{\"filename\":\"database/stocks.txt\",\"text\":\"[{\\\"symbol\\\":\\\"ECP\\\",\\\"organization\\\":\\\"ECorp\\\",\\\"server\\\":\\\"ecorp\\\",\\\"maxShares\\\":21400000},{\\\"symbol\\\":\\\"MGCP\\\",\\\"organization\\\":\\\"MegaCorp\\\",\\\"server\\\":\\\"megacorp\\\",\\\"maxShares\\\":15700000},{\\\"symbol\\\":\\\"BLD\\\",\\\"organization\\\":\\\"Blade Industries\\\",\\\"server\\\":\\\"blade\\\",\\\"maxShares\\\":13500000},{\\\"symbol\\\":\\\"CLRK\\\",\\\"organization\\\":\\\"Clarke Incorporated\\\",\\\"server\\\":\\\"clarkinc\\\",\\\"maxShares\\\":16700000},{\\\"symbol\\\":\\\"OMTK\\\",\\\"organization\\\":\\\"OmniTek Incorporated\\\",\\\"server\\\":\\\"omnitek\\\",\\\"maxShares\\\":11000000},{\\\"symbol\\\":\\\"FSIG\\\",\\\"organization\\\":\\\"Four Sigma\\\",\\\"server\\\":\\\"4sigma\\\",\\\"maxShares\\\":6000000},{\\\"symbol\\\":\\\"KGI\\\",\\\"organization\\\":\\\"KuaiGong International\\\",\\\"server\\\":\\\"kuai-gong\\\",\\\"maxShares\\\":19500000},{\\\"symbol\\\":\\\"FLCM\\\",\\\"organization\\\":\\\"Fulcrum Technologies\\\",\\\"server\\\":\\\"fulcrumassets\\\",\\\"maxShares\\\":13300000},{\\\"symbol\\\":\\\"STM\\\",\\\"organization\\\":\\\"Storm Technologies\\\",\\\"server\\\":\\\"stormtech\\\",\\\"maxShares\\\":10900000},{\\\"symbol\\\":\\\"DCOMM\\\",\\\"organization\\\":\\\"DefComm\\\",\\\"server\\\":\\\"defcomm\\\",\\\"maxShares\\\":12300000},{\\\"symbol\\\":\\\"HLS\\\",\\\"organization\\\":\\\"Helios Labs\\\",\\\"server\\\":\\\"helios\\\",\\\"maxShares\\\":14300000},{\\\"symbol\\\":\\\"VITA\\\",\\\"organization\\\":\\\"VitaLife\\\",\\\"server\\\":\\\"vitalife\\\",\\\"maxShares\\\":17200000},{\\\"symbol\\\":\\\"ICRS\\\",\\\"organization\\\":\\\"Icarus Microsystems\\\",\\\"server\\\":\\\"icarus\\\",\\\"maxShares\\\":7500000},{\\\"symbol\\\":\\\"UNV\\\",\\\"organization\\\":\\\"Universal Energy\\\",\\\"server\\\":\\\"univ-energy\\\",\\\"maxShares\\\":6200000},{\\\"symbol\\\":\\\"AERO\\\",\\\"organization\\\":\\\"AeroCorp\\\",\\\"server\\\":\\\"aerocorp\\\",\\\"maxShares\\\":7600000},{\\\"symbol\\\":\\\"OMN\\\",\\\"organization\\\":\\\"Omnia Cybersystems\\\",\\\"server\\\":\\\"omnia\\\",\\\"maxShares\\\":10000000},{\\\"symbol\\\":\\\"SLRS\\\",\\\"organization\\\":\\\"Solaris Space Systems\\\",\\\"server\\\":\\\"solaris\\\",\\\"maxShares\\\":5100000},{\\\"symbol\\\":\\\"GPH\\\",\\\"organization\\\":\\\"Global Pharmaceuticals\\\",\\\"server\\\":\\\"global-pharm\\\",\\\"maxShares\\\":6800000},{\\\"symbol\\\":\\\"NVMD\\\",\\\"organization\\\":\\\"Nova Medical\\\",\\\"server\\\":\\\"nova-med\\\",\\\"maxShares\\\":7400000},{\\\"symbol\\\":\\\"WDS\\\",\\\"organization\\\":\\\"Watchdog Security\\\",\\\"maxShares\\\":22400000},{\\\"symbol\\\":\\\"LXO\\\",\\\"organization\\\":\\\"LexoCorp\\\",\\\"server\\\":\\\"lexo-corp\\\",\\\"maxShares\\\":10500000},{\\\"symbol\\\":\\\"RHOC\\\",\\\"organization\\\":\\\"Rho Construction\\\",\\\"server\\\":\\\"rho-construction\\\",\\\"maxShares\\\":18000000},{\\\"symbol\\\":\\\"APHE\\\",\\\"organization\\\":\\\"Alpha Enterprises\\\",\\\"server\\\":\\\"alpha-ent\\\",\\\"maxShares\\\":7300000},{\\\"symbol\\\":\\\"SYSC\\\",\\\"organization\\\":\\\"SysCore Securities\\\",\\\"server\\\":\\\"syscore\\\",\\\"maxShares\\\":11700000},{\\\"symbol\\\":\\\"CTK\\\",\\\"organization\\\":\\\"CompuTek\\\",\\\"server\\\":\\\"computek\\\",\\\"maxShares\\\":17600000},{\\\"symbol\\\":\\\"NTLK\\\",\\\"organization\\\":\\\"NetLink Technologies\\\",\\\"server\\\":\\\"netlink\\\",\\\"maxShares\\\":4100000},{\\\"symbol\\\":\\\"OMGA\\\",\\\"organization\\\":\\\"Omega Software\\\",\\\"server\\\":\\\"omega-net\\\",\\\"maxShares\\\":1900000},{\\\"symbol\\\":\\\"FNS\\\",\\\"organization\\\":\\\"FoodNStuff\\\",\\\"server\\\":\\\"foodnstuff\\\",\\\"maxShares\\\":5200000},{\\\"symbol\\\":\\\"JGN\\\",\\\"organization\\\":\\\"Joe's Guns\\\",\\\"server\\\":\\\"joesguns\\\",\\\"maxShares\\\":17400000},{\\\"symbol\\\":\\\"SGC\\\",\\\"organization\\\":\\\"Sigma Cosmetics\\\",\\\"server\\\":\\\"sigma-cosmetics\\\",\\\"maxShares\\\":2100000},{\\\"symbol\\\":\\\"CTYS\\\",\\\"organization\\\":\\\"Catalyst Ventures\\\",\\\"server\\\":\\\"catalyst\\\",\\\"maxShares\\\":43700000},{\\\"symbol\\\":\\\"MDYN\\\",\\\"organization\\\":\\\"Microdyne Technologies\\\",\\\"server\\\":\\\"microdyne\\\",\\\"maxShares\\\":2400000},{\\\"symbol\\\":\\\"TITN\\\",\\\"organization\\\":\\\"Titan Laboratories\\\",\\\"server\\\":\\\"titan-labs\\\",\\\"maxShares\\\":3800000}]\"}}]]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[30],\"dataMap\":{},\"filename\":\"manage-hacking.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":426623988.2713668,\"onlineMoneyMade\":4873455125129.025,\"onlineRunningTime\":685.810000000019,\"ramUsage\":8.7,\"server\":\"home\",\"scriptKey\":\"manage-hacking.js*[30]\",\"title\":\"manage-hacking.js 30\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":223.80999999999582,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"weaken.js applied-energetics\",\"threads\":27,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":253.20999999999415,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"taiyang-digital\\\"]\",\"title\":\"weaken.js taiyang-digital\",\"threads\":26,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"manage-stocks.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":-153230696929.76547,\"onlineRunningTime\":443.40999999998337,\"ramUsage\":14.25,\"server\":\"home\",\"scriptKey\":\"manage-stocks.js*[]\",\"title\":\"manage-stocks.js \",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":262.20999999999367,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"lexo-corp\\\"]\",\"title\":\"weaken.js lexo-corp\",\"threads\":73,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":322.8099999999902,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"blade\\\"]\",\"title\":\"weaken.js blade\",\"threads\":200,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":305.8099999999912,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"fulcrumtech\\\"]\",\"title\":\"weaken.js fulcrumtech\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":300.6099999999915,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"fulcrumtech\\\"]\",\"title\":\"weaken.js fulcrumtech\",\"threads\":171,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":259.20999999999384,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"kuai-gong\\\"]\",\"title\":\"weaken.js kuai-gong\",\"threads\":60,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":245.00999999999462,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"microdyne\\\"]\",\"title\":\"weaken.js microdyne\",\"threads\":1164,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":147.21000000000018,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"microdyne\\\"]\",\"title\":\"weaken.js microdyne\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":217.80999999999617,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"fulcrumassets\\\"]\",\"title\":\"weaken.js fulcrumassets\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"fulcrumassets\\\"]\",\"title\":\"weaken.js fulcrumassets\",\"threads\":1320,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":205.80999999999685,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"weaken.js powerhouse-fitness\",\"threads\":1236,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":137.21000000000075,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"weaken.js powerhouse-fitness\",\"threads\":13,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":127.01000000000127,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"weaken.js clarkinc\",\"threads\":1162,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":86.6100000000007,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"weaken.js clarkinc\",\"threads\":13,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":40.41000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"weaken.js clarkinc\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":121.01000000000118,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"weaken.js galactic-cyber\",\"threads\":1201,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":84.61000000000067,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"weaken.js galactic-cyber\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.41000000000018,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"weaken.js galactic-cyber\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":120.01000000000117,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":87.61000000000071,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":11,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.61000000000034,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"grow.js*[\\\"max-hardware\\\"]\",\"title\":\"grow.js max-hardware\",\"threads\":111,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"grow.js*[\\\"max-hardware\\\"]\",\"title\":\"grow.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"grow.js*[\\\"max-hardware\\\"]\",\"title\":\"grow.js max-hardware\",\"threads\":464,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"grow.js*[\\\"max-hardware\\\"]\",\"title\":\"grow.js max-hardware\",\"threads\":477,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"grow.js*[\\\"max-hardware\\\"]\",\"title\":\"grow.js max-hardware\",\"threads\":111,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"grow.js*[\\\"max-hardware\\\"]\",\"title\":\"grow.js max-hardware\",\"threads\":496,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"grow.js*[\\\"max-hardware\\\"]\",\"title\":\"grow.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":1436,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":52.41000000000021,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":13,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.41000000000001,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":36,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":44,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":11,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"home\",\"scriptKey\":\"hack.js*[\\\"max-hardware\\\"]\",\"title\":\"hack.js max-hardware\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"sigma-cosmetics\\\"]\",\"title\":\"weaken.js sigma-cosmetics\",\"threads\":1645,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"weaken.js*[\\\"sigma-cosmetics\\\"]\",\"title\":\"weaken.js sigma-cosmetics\",\"threads\":285,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"home\",\"scriptKey\":\"grow.js*[\\\"sigma-cosmetics\\\"]\",\"title\":\"grow.js sigma-cosmetics\",\"threads\":837,\"temporary\":false}}]}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"2.7.1.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":34.16799999999999,\"minDifficulty\":33,\"moneyAvailable\":171722614142.47974,\"moneyMax\":1323772422600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1254,\"serverGrowth\":99,\"runningScripts\":[]}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"1.1.9.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":34.21600000000001,\"minDifficulty\":33,\"moneyAvailable\":85342870148.79935,\"moneyMax\":1003479929600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1216,\"serverGrowth\":99,\"runningScripts\":[]}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"55.8.4.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":79,\"hackDifficulty\":26.043999999999997,\"minDifficulty\":26,\"moneyAvailable\":198485745232.02536,\"moneyMax\":430014669325,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":937,\"serverGrowth\":61,\"runningScripts\":[]}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"48.4.7.7\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"blade\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"blade\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"blade\"}}]]},\"serversOnNetwork\":[\"4sigma\",\"ecorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":90,\"hackDifficulty\":42.59,\"minDifficulty\":30,\"moneyAvailable\":33203846978.691948,\"moneyMax\":260068255750,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1107,\"serverGrowth\":57,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":372.4099999999874,\"ramUsage\":1.75,\"server\":\"blade\",\"scriptKey\":\"weaken.js*[\\\"stormtech\\\"]\",\"title\":\"weaken.js stormtech\",\"threads\":23,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":253.20999999999415,\"ramUsage\":1.75,\"server\":\"blade\",\"scriptKey\":\"weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"weaken.js applied-energetics\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"blade\",\"scriptKey\":\"weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"weaken.js titan-labs\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":203.60999999999697,\"ramUsage\":1.75,\"server\":\"blade\",\"scriptKey\":\"weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"weaken.js b-and-a\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"blade\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":17,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.41000000000017,\"ramUsage\":1.7,\"server\":\"blade\",\"scriptKey\":\"hack.js*[\\\"infocomm\\\"]\",\"title\":\"hack.js infocomm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.7,\"server\":\"blade\",\"scriptKey\":\"hack.js*[\\\"catalyst\\\"]\",\"title\":\"hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.209999999999965,\"ramUsage\":1.7,\"server\":\"blade\",\"scriptKey\":\"hack.js*[\\\"blade\\\"]\",\"title\":\"hack.js blade\",\"threads\":15,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.7,\"server\":\"blade\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"blade\",\"scriptKey\":\"hack.js*[\\\"alpha-ent\\\"]\",\"title\":\"hack.js alpha-ent\",\"threads\":19,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.7,\"server\":\"blade\",\"scriptKey\":\"hack.js*[\\\"alpha-ent\\\"]\",\"title\":\"hack.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"blade\",\"scriptKey\":\"hack.js*[\\\"alpha-ent\\\"]\",\"title\":\"hack.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"blade\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":15,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.7,\"server\":\"blade\",\"scriptKey\":\"hack.js*[\\\"crush-fitness\\\"]\",\"title\":\"hack.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"blade\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":22,\"temporary\":false}}]}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"88.9.6.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\".\",\"megacorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":34.216000000000015,\"minDifficulty\":33,\"moneyAvailable\":66206094760.9057,\"moneyMax\":727586953075,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1206,\"serverGrowth\":85,\"runningScripts\":[]}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"73.6.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":65,\"hackDifficulty\":81.574,\"minDifficulty\":22,\"moneyAvailable\":101651139105.13672,\"moneyMax\":526505593050,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1098,\"serverGrowth\":74,\"runningScripts\":[]}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"80.1.4.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"omnitek\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"omnitek\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"omnitek\"}}]]},\"serversOnNetwork\":[\"helios\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":90,\"hackDifficulty\":40.76399999999998,\"minDifficulty\":30,\"moneyAvailable\":26554047768.912758,\"moneyMax\":479512806950,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1077,\"serverGrowth\":95,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":369.4099999999876,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"weaken.js*[\\\"megacorp\\\"]\",\"title\":\"weaken.js megacorp\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":253.20999999999415,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"weaken.js applied-energetics\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"omnitek\",\"scriptKey\":\"weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"weaken.js titan-labs\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.7,\"server\":\"omnitek\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"omnitek\",\"scriptKey\":\"hack.js*[\\\"computek\\\"]\",\"title\":\"hack.js computek\",\"threads\":1,\"temporary\":false}}]}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"66.7.1.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"vitalife\",\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":74,\"hackDifficulty\":85.964,\"minDifficulty\":25,\"moneyAvailable\":350975257875.62573,\"moneyMax\":389602037250,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1158,\"serverGrowth\":90,\"runningScripts\":[]}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"24.6.4.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"vitalife\",\"b-and-a\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":97,\"hackDifficulty\":35.22399999999999,\"minDifficulty\":32,\"moneyAvailable\":39775227448.34162,\"moneyMax\":544622933975,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1215,\"serverGrowth\":97,\"runningScripts\":[]}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"75.5.5.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"fulcrumtech\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"fulcrumtech\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"fulcrumtech\"}}]]},\"serversOnNetwork\":[\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":91,\"hackDifficulty\":40.16400000000001,\"minDifficulty\":30,\"moneyAvailable\":5225351195.856011,\"moneyMax\":42169450075,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1201,\"serverGrowth\":87,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":372.4099999999874,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"weaken.js*[\\\"stormtech\\\"]\",\"title\":\"weaken.js stormtech\",\"threads\":104,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":253.20999999999415,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"weaken.js applied-energetics\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.2100000000004,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"weaken.js powerhouse-fitness\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.81000000000103,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"weaken.js clarkinc\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.20999999999995,\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"scriptKey\":\"hack.js*[\\\"stormtech\\\"]\",\"title\":\"hack.js stormtech\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"scriptKey\":\"hack.js*[\\\"alpha-ent\\\"]\",\"title\":\"hack.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"scriptKey\":\"hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"hack.js lexo-corp\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"scriptKey\":\"hack.js*[\\\"taiyang-digital\\\"]\",\"title\":\"hack.js taiyang-digital\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":278,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"fulcrumtech\",\"scriptKey\":\"grow.js*[\\\"joesguns\\\"]\",\"title\":\"grow.js joesguns\",\"threads\":5,\"temporary\":false}}]}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"42.1.7.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":99,\"hackDifficulty\":100,\"minDifficulty\":33,\"moneyAvailable\":11724005.058405533,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1315,\"serverGrowth\":1,\"runningScripts\":[]}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"6.6.3.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"applied-energetics\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":88,\"hackDifficulty\":41.673999999999985,\"minDifficulty\":29,\"moneyAvailable\":1522721005.5345938,\"moneyMax\":25880682950,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1045,\"serverGrowth\":87,\"runningScripts\":[]}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"72.1.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\",\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":91,\"hackDifficulty\":30.513999999999996,\"minDifficulty\":30,\"moneyAvailable\":734997.0669894003,\"moneyMax\":22845158450,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":882,\"serverGrowth\":55,\"runningScripts\":[]}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"79.3.7.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"defcomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":75,\"hackDifficulty\":75.79200000000002,\"minDifficulty\":25,\"moneyAvailable\":15504617.670385748,\"moneyMax\":21283382525,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":898,\"serverGrowth\":55,\"runningScripts\":[]}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"41.4.1.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"helios\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"helios\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"helios\"}}]]},\"serversOnNetwork\":[\"titan-labs\",\"omnitek\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":95,\"hackDifficulty\":36.81,\"minDifficulty\":32,\"moneyAvailable\":907942392.8349073,\"moneyMax\":14281905025,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":877,\"serverGrowth\":80,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":372.4099999999874,\"ramUsage\":1.75,\"server\":\"helios\",\"scriptKey\":\"weaken.js*[\\\"stormtech\\\"]\",\"title\":\"weaken.js stormtech\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"ramUsage\":1.75,\"server\":\"helios\",\"scriptKey\":\"weaken.js*[\\\"megacorp\\\"]\",\"title\":\"weaken.js megacorp\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"helios\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.209999999999965,\"ramUsage\":1.7,\"server\":\"helios\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"helios\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.7,\"server\":\"helios\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.7,\"server\":\"helios\",\"scriptKey\":\"hack.js*[\\\"kuai-gong\\\"]\",\"title\":\"hack.js kuai-gong\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"helios\",\"scriptKey\":\"hack.js*[\\\"crush-fitness\\\"]\",\"title\":\"hack.js crush-fitness\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"helios\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":1,\"temporary\":false}}]}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"42.2.5.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"vitalife\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"vitalife\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"vitalife\"}}]]},\"serversOnNetwork\":[\"microdyne\",\"4sigma\",\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":88,\"hackDifficulty\":37.11400000000003,\"minDifficulty\":29,\"moneyAvailable\":562234730.0080779,\"moneyMax\":18503187925,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":793,\"serverGrowth\":61,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":372.4099999999874,\"ramUsage\":1.75,\"server\":\"vitalife\",\"scriptKey\":\"weaken.js*[\\\"stormtech\\\"]\",\"title\":\"weaken.js stormtech\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":253.20999999999415,\"ramUsage\":1.75,\"server\":\"vitalife\",\"scriptKey\":\"weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"weaken.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"vitalife\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.2100000000004,\"ramUsage\":1.75,\"server\":\"vitalife\",\"scriptKey\":\"weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"weaken.js powerhouse-fitness\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.209999999999923,\"ramUsage\":1.7,\"server\":\"vitalife\",\"scriptKey\":\"hack.js*[\\\"ecorp\\\"]\",\"title\":\"hack.js ecorp\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"vitalife\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\"]\",\"title\":\"hack.js global-pharm\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"vitalife\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.7,\"server\":\"vitalife\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"vitalife\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"vitalife\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":8,\"temporary\":false}}]}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"73.1.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":91,\"hackDifficulty\":30.505999999999993,\"minDifficulty\":30,\"moneyAvailable\":586796.8367332179,\"moneyMax\":22627964150,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":877,\"serverGrowth\":94,\"runningScripts\":[]}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"30.8.3.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"univ-energy\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"univ-energy\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"univ-energy\"}}]]},\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":85,\"hackDifficulty\":28.483999999999998,\"minDifficulty\":28,\"moneyAvailable\":918181.0674648167,\"moneyMax\":29883572350,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":834,\"serverGrowth\":90,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.81000000000103,\"ramUsage\":1.75,\"server\":\"univ-energy\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.7,\"server\":\"univ-energy\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.209999999999965,\"ramUsage\":1.7,\"server\":\"univ-energy\",\"scriptKey\":\"hack.js*[\\\"blade\\\"]\",\"title\":\"hack.js blade\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.7,\"server\":\"univ-energy\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":11,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"univ-energy\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.7,\"server\":\"univ-energy\",\"scriptKey\":\"hack.js*[\\\"syscore\\\"]\",\"title\":\"hack.js syscore\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"univ-energy\",\"scriptKey\":\"hack.js*[\\\"omnia\\\"]\",\"title\":\"hack.js omnia\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.7,\"server\":\"univ-energy\",\"scriptKey\":\"hack.js*[\\\"aerocorp\\\"]\",\"title\":\"hack.js aerocorp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"univ-energy\",\"scriptKey\":\"hack.js*[\\\"neo-net\\\"]\",\"title\":\"hack.js neo-net\",\"threads\":17,\"temporary\":false}}]}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"68.0.3.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"titan-labs\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"titan-labs\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"titan-labs\"}}]]},\"serversOnNetwork\":[\"zb-def\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":74,\"hackDifficulty\":27.69000000000001,\"minDifficulty\":25,\"moneyAvailable\":1386356653.6153393,\"moneyMax\":19945352650,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":843,\"serverGrowth\":66,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"ramUsage\":1.75,\"server\":\"titan-labs\",\"scriptKey\":\"weaken.js*[\\\"megacorp\\\"]\",\"title\":\"weaken.js megacorp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":242.0099999999948,\"ramUsage\":1.75,\"server\":\"titan-labs\",\"scriptKey\":\"weaken.js*[\\\"solaris\\\"]\",\"title\":\"weaken.js solaris\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.209999999999965,\"ramUsage\":1.7,\"server\":\"titan-labs\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.7,\"server\":\"titan-labs\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.7,\"server\":\"titan-labs\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.7,\"server\":\"titan-labs\",\"scriptKey\":\"hack.js*[\\\"kuai-gong\\\"]\",\"title\":\"hack.js kuai-gong\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"titan-labs\",\"scriptKey\":\"hack.js*[\\\"crush-fitness\\\"]\",\"title\":\"hack.js crush-fitness\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.7,\"server\":\"titan-labs\",\"scriptKey\":\"hack.js*[\\\"crush-fitness\\\"]\",\"title\":\"hack.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"titan-labs\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":2,\"temporary\":false}}]}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"24.1.5.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"microdyne\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"microdyne\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"microdyne\"}}]]},\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":68,\"hackDifficulty\":83,\"minDifficulty\":23,\"moneyAvailable\":6476104925.96938,\"moneyMax\":12534206825,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":817,\"serverGrowth\":86,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.7,\"server\":\"microdyne\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.7,\"server\":\"microdyne\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.7,\"server\":\"microdyne\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"microdyne\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.7,\"server\":\"microdyne\",\"scriptKey\":\"hack.js*[\\\"nwo\\\"]\",\"title\":\"hack.js nwo\",\"threads\":27,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.7,\"server\":\"microdyne\",\"scriptKey\":\"hack.js*[\\\"crush-fitness\\\"]\",\"title\":\"hack.js crush-fitness\",\"threads\":1,\"temporary\":false}}]}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"19.7.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"solaris\",\"applied-energetics\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":75,\"hackDifficulty\":26.966000000000005,\"minDifficulty\":25,\"moneyAvailable\":2663628008.3745847,\"moneyMax\":20271402500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":867,\"serverGrowth\":80,\"runningScripts\":[]}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"90.0.3.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":62,\"hackDifficulty\":82.72400000000002,\"minDifficulty\":21,\"moneyAvailable\":8948853482.909662,\"moneyMax\":20421886950,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":855,\"serverGrowth\":70,\"runningScripts\":[]}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"10.1.9.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"alpha-ent\",\"omnia\",\"deltaone\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":81,\"hackDifficulty\":34.55000000000003,\"minDifficulty\":27,\"moneyAvailable\":1594706217.3955379,\"moneyMax\":29181156600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":901,\"serverGrowth\":59,\"runningScripts\":[]}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"83.3.2.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"omnia\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"omnia\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"omnia\"}}]]},\"serversOnNetwork\":[\"aerocorp\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":86,\"hackDifficulty\":35.916000000000025,\"minDifficulty\":29,\"moneyAvailable\":1029848857.9015266,\"moneyMax\":24464913625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":854,\"serverGrowth\":64,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":369.4099999999876,\"ramUsage\":1.75,\"server\":\"omnia\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":253.20999999999415,\"ramUsage\":1.75,\"server\":\"omnia\",\"scriptKey\":\"weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"weaken.js applied-energetics\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.20999999999995,\"ramUsage\":1.7,\"server\":\"omnia\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"omnia\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"omnia\",\"scriptKey\":\"hack.js*[\\\"crush-fitness\\\"]\",\"title\":\"hack.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.7,\"server\":\"omnia\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"omnia\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.7,\"server\":\"omnia\",\"scriptKey\":\"hack.js*[\\\"omnitek\\\"]\",\"title\":\"hack.js omnitek\",\"threads\":17,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.7,\"server\":\"omnia\",\"scriptKey\":\"hack.js*[\\\"aevum-police\\\"]\",\"title\":\"hack.js aevum-police\",\"threads\":3,\"temporary\":false}}]}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"75.2.1.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"solaris\",\"titan-labs\",\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":55,\"hackDifficulty\":75.7299999999999,\"minDifficulty\":18,\"moneyAvailable\":7061394272.934128,\"moneyMax\":24343637325,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":819,\"serverGrowth\":74,\"runningScripts\":[]}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"75.5.6.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"taiyang-digital\",\"stormtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":74,\"hackDifficulty\":28.982000000000006,\"minDifficulty\":25,\"moneyAvailable\":1704620916.9799204,\"moneyMax\":19489147225,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":780,\"serverGrowth\":75,\"runningScripts\":[]}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"99.1.0.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"solaris\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"solaris\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"solaris\"}}]]},\"serversOnNetwork\":[\"omnia\",\"taiyang-digital\",\"zb-def\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":77,\"hackDifficulty\":29.484000000000005,\"minDifficulty\":26,\"moneyAvailable\":1399594107.4141686,\"moneyMax\":21210645600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":783,\"serverGrowth\":70,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":253.20999999999415,\"ramUsage\":1.75,\"server\":\"solaris\",\"scriptKey\":\"weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"weaken.js applied-energetics\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"solaris\",\"scriptKey\":\"weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"weaken.js clarkinc\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"solaris\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.7,\"server\":\"solaris\",\"scriptKey\":\"hack.js*[\\\"catalyst\\\"]\",\"title\":\"hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.7,\"server\":\"solaris\",\"scriptKey\":\"hack.js*[\\\"omnitek\\\"]\",\"title\":\"hack.js omnitek\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"solaris\",\"scriptKey\":\"hack.js*[\\\"crush-fitness\\\"]\",\"title\":\"hack.js crush-fitness\",\"threads\":6,\"temporary\":false}}]}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-445171-JoesGuns.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")a()((a))a))a)(a)\",\"reward\":{\"type\":2,\"name\":\"Joe's Guns\"}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"92.5.2.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"aerocorp\",\"defcomm\",\"icarus\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":75,\"hackDifficulty\":75.89799999999997,\"minDifficulty\":25,\"moneyAvailable\":19390739.126084503,\"moneyMax\":40357895400,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":803,\"serverGrowth\":51,\"runningScripts\":[]}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"66.5.5.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"global-pharm\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"global-pharm\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"global-pharm\"}}]]},\"serversOnNetwork\":[\"lexo-corp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":77,\"hackDifficulty\":30.052,\"minDifficulty\":26,\"moneyAvailable\":4550112290.568136,\"moneyMax\":38759187275,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":812,\"serverGrowth\":86,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":354.20999999998844,\"ramUsage\":1.75,\"server\":\"global-pharm\",\"scriptKey\":\"weaken.js*[\\\"omnitek\\\"]\",\"title\":\"weaken.js omnitek\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"global-pharm\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"global-pharm\",\"scriptKey\":\"hack.js*[\\\"zer0\\\"]\",\"title\":\"hack.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"global-pharm\",\"scriptKey\":\"hack.js*[\\\"catalyst\\\"]\",\"title\":\"hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"global-pharm\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":4,\"temporary\":false}}]}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"26.6.4.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":74,\"hackDifficulty\":75.12599999999999,\"minDifficulty\":25,\"moneyAvailable\":2338608.5005397885,\"moneyMax\":28325320550,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":826,\"serverGrowth\":72,\"runningScripts\":[]}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"89.1.9.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":74,\"hackDifficulty\":74.77599999999998,\"minDifficulty\":25,\"moneyAvailable\":19610594.631236542,\"moneyMax\":34797755925,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":806,\"serverGrowth\":79,\"runningScripts\":[]}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"46.1.9.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"unitalife\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"unitalife\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"unitalife\"}}]]},\"serversOnNetwork\":[\"aerocorp\",\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":73,\"hackDifficulty\":73.81,\"minDifficulty\":24,\"moneyAvailable\":10507653.926052528,\"moneyMax\":26281657025,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":820,\"serverGrowth\":70,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":278.40999999999275,\"ramUsage\":1.75,\"server\":\"unitalife\",\"scriptKey\":\"weaken.js*[\\\"nwo\\\"]\",\"title\":\"weaken.js nwo\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.209999999999965,\"ramUsage\":1.7,\"server\":\"unitalife\",\"scriptKey\":\"hack.js*[\\\"blade\\\"]\",\"title\":\"hack.js blade\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.7,\"server\":\"unitalife\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.7,\"server\":\"unitalife\",\"scriptKey\":\"hack.js*[\\\"syscore\\\"]\",\"title\":\"hack.js syscore\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.7,\"server\":\"unitalife\",\"scriptKey\":\"hack.js*[\\\"aerocorp\\\"]\",\"title\":\"hack.js aerocorp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"unitalife\",\"scriptKey\":\"hack.js*[\\\"neo-net\\\"]\",\"title\":\"hack.js neo-net\",\"threads\":1,\"temporary\":false}}]}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"60.6.2.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lexo-corp\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lexo-corp\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lexo-corp\"}}]]},\"serversOnNetwork\":[\"rothman-uni\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":75,\"hackDifficulty\":35.945,\"minDifficulty\":25,\"moneyAvailable\":1852693190.6469035,\"moneyMax\":18064063525,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":739,\"serverGrowth\":55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":372.4099999999874,\"ramUsage\":1.75,\"server\":\"lexo-corp\",\"scriptKey\":\"weaken.js*[\\\"stormtech\\\"]\",\"title\":\"weaken.js stormtech\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":354.20999999998844,\"ramUsage\":1.75,\"server\":\"lexo-corp\",\"scriptKey\":\"weaken.js*[\\\"omnitek\\\"]\",\"title\":\"weaken.js omnitek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":253.20999999999415,\"ramUsage\":1.75,\"server\":\"lexo-corp\",\"scriptKey\":\"weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"weaken.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.7,\"server\":\"lexo-corp\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"lexo-corp\",\"scriptKey\":\"hack.js*[\\\"computek\\\"]\",\"title\":\"hack.js computek\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lexo-corp\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":7,\"temporary\":false}}]}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"74.2.7.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"rho-construction\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"rho-construction\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"rho-construction\"}}]]},\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":55,\"hackDifficulty\":69.14200000000018,\"minDifficulty\":18,\"moneyAvailable\":3309931614.5407615,\"moneyMax\":16986848925,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":515,\"serverGrowth\":53,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"rho-construction\",\"scriptKey\":\"weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"weaken.js powerhouse-fitness\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"rho-construction\",\"scriptKey\":\"hack.js*[\\\"the-hub\\\"]\",\"title\":\"hack.js the-hub\",\"threads\":2,\"temporary\":false}}]}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"37.8.3.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"alpha-ent\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"alpha-ent\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"alpha-ent\"}}]]},\"serversOnNetwork\":[\"rothman-uni\",\"aerocorp\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":68,\"hackDifficulty\":42.4245,\"minDifficulty\":23,\"moneyAvailable\":1369395925.3329906,\"moneyMax\":17614208825,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":505,\"serverGrowth\":55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.7,\"server\":\"alpha-ent\",\"scriptKey\":\"hack.js*[\\\"omnitek\\\"]\",\"title\":\"hack.js omnitek\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"alpha-ent\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"alpha-ent\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"alpha-ent\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":2,\"temporary\":false}}]}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"22.7.4.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"aevum-police\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"aevum-police\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"aevum-police\"}}]]},\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":78,\"hackDifficulty\":66.00100000000005,\"minDifficulty\":26,\"moneyAvailable\":1711169451.1017005,\"moneyMax\":9297405750,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":406,\"serverGrowth\":39,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":203.60999999999697,\"ramUsage\":1.75,\"server\":\"aevum-police\",\"scriptKey\":\"weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"weaken.js b-and-a\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.41000000000025,\"ramUsage\":1.75,\"server\":\"aevum-police\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"aevum-police\",\"scriptKey\":\"hack.js*[\\\"the-hub\\\"]\",\"title\":\"hack.js the-hub\",\"threads\":6,\"temporary\":false}}]}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"17.5.7.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"rothman-uni\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"rothman-uni\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"rothman-uni\"}}]]},\"serversOnNetwork\":[\"avmnite-02h\",\"lexo-corp\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":54,\"hackDifficulty\":29.23450000000007,\"minDifficulty\":18,\"moneyAvailable\":51161481.99070713,\"moneyMax\":5342380650,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":425,\"serverGrowth\":43,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":372.4099999999874,\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"scriptKey\":\"weaken.js*[\\\"stormtech\\\"]\",\"title\":\"weaken.js stormtech\",\"threads\":16,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":253.20999999999415,\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"scriptKey\":\"weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"weaken.js applied-energetics\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"rothman-uni\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":11,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"rothman-uni\",\"scriptKey\":\"hack.js*[\\\"computek\\\"]\",\"title\":\"hack.js computek\",\"threads\":4,\"temporary\":false}}]}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"53.8.3.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"zb-institute\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"zb-institute\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"zb-institute\"}}]]},\"serversOnNetwork\":[\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":65,\"hackDifficulty\":85.34799999999997,\"minDifficulty\":22,\"moneyAvailable\":13424795091.590157,\"moneyMax\":22934680475,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":770,\"serverGrowth\":82,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":372.4099999999874,\"ramUsage\":1.75,\"server\":\"zb-institute\",\"scriptKey\":\"weaken.js*[\\\"stormtech\\\"]\",\"title\":\"weaken.js stormtech\",\"threads\":17,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":354.20999999998844,\"ramUsage\":1.75,\"server\":\"zb-institute\",\"scriptKey\":\"weaken.js*[\\\"omnitek\\\"]\",\"title\":\"weaken.js omnitek\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"zb-institute\",\"scriptKey\":\"weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"weaken.js titan-labs\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"zb-institute\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.41000000000025,\"ramUsage\":1.75,\"server\":\"zb-institute\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"zb-institute\",\"scriptKey\":\"hack.js*[\\\"zer0\\\"]\",\"title\":\"hack.js zer0\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"zb-institute\",\"scriptKey\":\"hack.js*[\\\"computek\\\"]\",\"title\":\"hack.js computek\",\"threads\":13,\"temporary\":false}}]}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"52.8.6.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"summit-uni\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"summit-uni\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"summit-uni\"}}]]},\"serversOnNetwork\":[\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":45,\"hackDifficulty\":28.65600000000005,\"minDifficulty\":15,\"moneyAvailable\":815704876.6406941,\"moneyMax\":6021104725,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":466,\"serverGrowth\":45,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"scriptKey\":\"weaken.js*[\\\"megacorp\\\"]\",\"title\":\"weaken.js megacorp\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.4099999999992,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":126.01000000000126,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"scriptKey\":\"weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"weaken.js clarkinc\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.20999999999995,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"summit-uni\",\"scriptKey\":\"hack.js*[\\\"zer0\\\"]\",\"title\":\"hack.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"summit-uni\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":1,\"temporary\":false}}]}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"92.2.9.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":78,\"hackDifficulty\":79.24199999999999,\"minDifficulty\":26,\"moneyAvailable\":1750361.446855124,\"moneyMax\":13905544800,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":627,\"serverGrowth\":60,\"runningScripts\":[]}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"38.3.2.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"catalyst\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"catalyst\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"catalyst\"}}]]},\"serversOnNetwork\":[\"computek\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":63,\"hackDifficulty\":54.60300000000008,\"minDifficulty\":21,\"moneyAvailable\":1855551425.3854227,\"moneyMax\":10166280375,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":410,\"serverGrowth\":43,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":372.4099999999874,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"weaken.js*[\\\"stormtech\\\"]\",\"title\":\"weaken.js stormtech\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":278.40999999999275,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"weaken.js*[\\\"nwo\\\"]\",\"title\":\"weaken.js nwo\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":263.2099999999936,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"weaken.js*[\\\"lexo-corp\\\"]\",\"title\":\"weaken.js lexo-corp\",\"threads\":15,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":254.2099999999941,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"weaken.js*[\\\"taiyang-digital\\\"]\",\"title\":\"weaken.js taiyang-digital\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":253.20999999999415,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"weaken.js*[\\\"applied-energetics\\\"]\",\"title\":\"weaken.js applied-energetics\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.20999999999995,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"weaken.js galactic-cyber\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"catalyst\",\"scriptKey\":\"hack.js*[\\\"zer0\\\"]\",\"title\":\"hack.js zer0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"catalyst\",\"scriptKey\":\"grow.js*[\\\"joesguns\\\"]\",\"title\":\"grow.js joesguns\",\"threads\":10,\"temporary\":false}}]}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"68.4.6.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"the-hub\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"the-hub\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"the-hub\"}}]]},\"serversOnNetwork\":[\"neo-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":36,\"hackDifficulty\":18.026499999999977,\"minDifficulty\":12,\"moneyAvailable\":754068575.6170906,\"moneyMax\":4469871425,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":291,\"serverGrowth\":46,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":263.2099999999936,\"ramUsage\":1.75,\"server\":\"the-hub\",\"scriptKey\":\"weaken.js*[\\\"lexo-corp\\\"]\",\"title\":\"weaken.js lexo-corp\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":369.4099999999876,\"ramUsage\":1.75,\"server\":\"the-hub\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":254.2099999999941,\"ramUsage\":1.75,\"server\":\"the-hub\",\"scriptKey\":\"weaken.js*[\\\"taiyang-digital\\\"]\",\"title\":\"weaken.js taiyang-digital\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"the-hub\",\"scriptKey\":\"weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"weaken.js titan-labs\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"the-hub\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":14,\"temporary\":false}}]}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":true,\"ip\":\"13.0.4.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omega-net\",\"catalyst\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":63,\"hackDifficulty\":50.59150000000006,\"minDifficulty\":21,\"moneyAvailable\":974632894.5179312,\"moneyMax\":6123811200,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":367,\"serverGrowth\":57,\"runningScripts\":[]}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"2.8.9.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"netlink\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"netlink\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"netlink\"}}]]},\"serversOnNetwork\":[\"silver-helix\",\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":76,\"hackDifficulty\":64.4720000000001,\"minDifficulty\":25,\"moneyAvailable\":1151848368.668464,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":422,\"serverGrowth\":72,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":369.4099999999876,\"ramUsage\":1.75,\"server\":\"netlink\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"netlink\",\"scriptKey\":\"hack.js*[\\\"zer0\\\"]\",\"title\":\"hack.js zer0\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"netlink\",\"scriptKey\":\"hack.js*[\\\"computek\\\"]\",\"title\":\"hack.js computek\",\"threads\":1,\"temporary\":false}}]}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"77.6.2.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"neo-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":64,\"hackDifficulty\":36.48749999999998,\"minDifficulty\":21,\"moneyAvailable\":266174957.2020899,\"moneyMax\":1885264425,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":281,\"serverGrowth\":39,\"runningScripts\":[]}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"64.5.2.1\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"n00dles\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"n00dles\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"n00dles\"}}]]},\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":83.19799999999937,\"minDifficulty\":1,\"moneyAvailable\":855603.2368038341,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":3000,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"n00dles\",\"scriptKey\":\"hack.js*[\\\"max-hardware\\\"]\",\"title\":\"hack.js max-hardware\",\"threads\":2,\"temporary\":false}}]}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"52.6.3.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"foodnstuff\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"foodnstuff\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"foodnstuff\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":20.356,\"minDifficulty\":3,\"moneyAvailable\":36266547.33516835,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":58.410000000000295,\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"scriptKey\":\"weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"weaken.js galactic-cyber\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"scriptKey\":\"weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"weaken.js galactic-cyber\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"foodnstuff\",\"scriptKey\":\"hack.js*[\\\"max-hardware\\\"]\",\"title\":\"hack.js max-hardware\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":1,\"temporary\":false}}]}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"19.0.1.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"sigma-cosmetics\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"sigma-cosmetics\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"sigma-cosmetics\"}}]]},\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":99.47800000000002,\"minDifficulty\":3,\"moneyAvailable\":36718071.84062481,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":5,\"serverGrowth\":10,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":4,\"temporary\":false}}]}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"71.7.3.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"joesguns\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"joesguns\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"joesguns\"}}]]},\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":11.434000000000003,\"minDifficulty\":5,\"moneyAvailable\":10025608.3726342,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":10,\"serverGrowth\":20,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":278.40999999999275,\"ramUsage\":1.75,\"server\":\"joesguns\",\"scriptKey\":\"weaken.js*[\\\"nwo\\\"]\",\"title\":\"weaken.js nwo\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.75,\"server\":\"joesguns\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":2,\"temporary\":false}}]}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"63.6.6.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"zer0\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"zer0\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"zer0\"}}]]},\"serversOnNetwork\":[\"sigma-cosmetics\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":25,\"hackDifficulty\":40.22250000000001,\"minDifficulty\":8,\"moneyAvailable\":42189676.02550714,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":75,\"serverGrowth\":40,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":369.4099999999876,\"ramUsage\":1.75,\"server\":\"zer0\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"zer0\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"zer0\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":4,\"temporary\":false}}]}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"81.8.8.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"nectar-net\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"nectar-net\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"nectar-net\"}}]]},\"serversOnNetwork\":[\"joesguns\",\"neo-net\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":20,\"hackDifficulty\":28.58300000000001,\"minDifficulty\":7,\"moneyAvailable\":11573702.357386693,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":20,\"serverGrowth\":25,\"runningScripts\":[]}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"73.8.2.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"neo-net\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"neo-net\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"neo-net\"}}]]},\"serversOnNetwork\":[\"nectar-net\",\"the-hub\",\"johnson-ortho\",\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":25,\"hackDifficulty\":84.6065000000001,\"minDifficulty\":8,\"moneyAvailable\":57145904.033749215,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":50,\"serverGrowth\":25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":186.60999999999794,\"ramUsage\":1.75,\"server\":\"neo-net\",\"scriptKey\":\"weaken.js*[\\\"microdyne\\\"]\",\"title\":\"weaken.js microdyne\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.4099999999992,\"ramUsage\":1.75,\"server\":\"neo-net\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":126.01000000000126,\"ramUsage\":1.75,\"server\":\"neo-net\",\"scriptKey\":\"weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"weaken.js clarkinc\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"neo-net\",\"scriptKey\":\"weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"weaken.js powerhouse-fitness\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":34.20999999999995,\"ramUsage\":1.75,\"server\":\"neo-net\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":3,\"temporary\":false}}]}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"69.8.9.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"silver-helix\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"silver-helix\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"silver-helix\"}}]]},\"serversOnNetwork\":[\"CSEC\",\"netlink\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":50.69000000000001,\"minDifficulty\":10,\"moneyAvailable\":240883925.4800446,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":150,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":354.20999999998844,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"scriptKey\":\"weaken.js*[\\\"omnitek\\\"]\",\"title\":\"weaken.js omnitek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"scriptKey\":\"weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"weaken.js titan-labs\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":109.81000000000103,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"scriptKey\":\"hack.js*[\\\"the-hub\\\"]\",\"title\":\"hack.js the-hub\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":23,\"temporary\":false}}]}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"70.3.3.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"hong-fang-tea\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"hong-fang-tea\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"hong-fang-tea\"}}]]},\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":13.775999999999998,\"minDifficulty\":5,\"moneyAvailable\":5608876.511865178,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":30,\"serverGrowth\":20,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":242.0099999999948,\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"scriptKey\":\"weaken.js*[\\\"solaris\\\"]\",\"title\":\"weaken.js solaris\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"hong-fang-tea\",\"scriptKey\":\"hack.js*[\\\"the-hub\\\"]\",\"title\":\"hack.js the-hub\",\"threads\":1,\"temporary\":false}}]}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"1.3.3.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"harakiri-sushi\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"harakiri-sushi\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"harakiri-sushi\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":31.222000000000005,\"minDifficulty\":5,\"moneyAvailable\":955914.7199624934,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":40,\"serverGrowth\":40,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"harakiri-sushi\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"scriptKey\":\"hack.js*[\\\"omnia\\\"]\",\"title\":\"hack.js omnia\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"scriptKey\":\"hack.js*[\\\"neo-net\\\"]\",\"title\":\"hack.js neo-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"scriptKey\":\"hack.js*[\\\"johnson-ortho\\\"]\",\"title\":\"hack.js johnson-ortho\",\"threads\":2,\"temporary\":false}}]}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"92.9.1.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"phantasy\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"phantasy\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"phantasy\"}}]]},\"serversOnNetwork\":[\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":20,\"hackDifficulty\":66.35600000000002,\"minDifficulty\":7,\"moneyAvailable\":914802.7866118684,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.7,\"server\":\"phantasy\",\"scriptKey\":\"hack.js*[\\\"aevum-police\\\"]\",\"title\":\"hack.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.7,\"server\":\"phantasy\",\"scriptKey\":\"hack.js*[\\\"syscore\\\"]\",\"title\":\"hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"phantasy\",\"scriptKey\":\"hack.js*[\\\"omnia\\\"]\",\"title\":\"hack.js omnia\",\"threads\":11,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.7,\"server\":\"phantasy\",\"scriptKey\":\"hack.js*[\\\"aerocorp\\\"]\",\"title\":\"hack.js aerocorp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"phantasy\",\"scriptKey\":\"hack.js*[\\\"neo-net\\\"]\",\"title\":\"hack.js neo-net\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"phantasy\",\"scriptKey\":\"hack.js*[\\\"johnson-ortho\\\"]\",\"title\":\"hack.js johnson-ortho\",\"threads\":2,\"temporary\":false}}]}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"12.2.7.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"max-hardware\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"max-hardware\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"max-hardware\"}}]]},\"serversOnNetwork\":[\"n00dles\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":15,\"hackDifficulty\":71.732,\"minDifficulty\":5,\"moneyAvailable\":60907341.00894412,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":80,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":110.81000000000104,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"scriptKey\":\"hack.js*[\\\"max-hardware\\\"]\",\"title\":\"hack.js max-hardware\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"scriptKey\":\"hack.js*[\\\"max-hardware\\\"]\",\"title\":\"hack.js max-hardware\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"scriptKey\":\"hack.js*[\\\"max-hardware\\\"]\",\"title\":\"hack.js max-hardware\",\"threads\":6,\"temporary\":false}}]}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"89.4.5.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"omega-net\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"omega-net\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"omega-net\"}}]]},\"serversOnNetwork\":[\"nectar-net\",\"computek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":33,\"hackDifficulty\":91.78300000000021,\"minDifficulty\":11,\"moneyAvailable\":1427351117.419323,\"moneyMax\":1671051700,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":181,\"serverGrowth\":34,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":263.2099999999936,\"ramUsage\":1.75,\"server\":\"omega-net\",\"scriptKey\":\"weaken.js*[\\\"lexo-corp\\\"]\",\"title\":\"weaken.js lexo-corp\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"omega-net\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"omega-net\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"omega-net\",\"scriptKey\":\"grow.js*[\\\"joesguns\\\"]\",\"title\":\"grow.js joesguns\",\"threads\":1,\"temporary\":false}}]}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"15.8.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"neo-net\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":43,\"hackDifficulty\":47.60250000000004,\"minDifficulty\":14,\"moneyAvailable\":153357563.6839189,\"moneyMax\":1034704300,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":234,\"serverGrowth\":27,\"runningScripts\":[]}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"15.9.8.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"iron-gym\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"iron-gym\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"iron-gym\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":30,\"hackDifficulty\":20.84600000000007,\"minDifficulty\":10,\"moneyAvailable\":639053.2738080489,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":20,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":236.00999999999513,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"scriptKey\":\"weaken.js*[\\\"microdyne\\\"]\",\"title\":\"weaken.js microdyne\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\"]\",\"title\":\"hack.js global-pharm\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"scriptKey\":\"hack.js*[\\\"syscore\\\"]\",\"title\":\"hack.js syscore\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"scriptKey\":\"hack.js*[\\\"omnia\\\"]\",\"title\":\"hack.js omnia\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"scriptKey\":\"hack.js*[\\\"aerocorp\\\"]\",\"title\":\"hack.js aerocorp\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"scriptKey\":\"hack.js*[\\\"johnson-ortho\\\"]\",\"title\":\"hack.js johnson-ortho\",\"threads\":1,\"temporary\":false}}]}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"95.9.3.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"millenium-fitness\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"millenium-fitness\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"millenium-fitness\"}}]]},\"serversOnNetwork\":[\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":53,\"hackDifficulty\":74.71200000000015,\"minDifficulty\":18,\"moneyAvailable\":1445683589.7899482,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":498,\"serverGrowth\":44,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":354.20999999998844,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"weaken.js*[\\\"omnitek\\\"]\",\"title\":\"weaken.js omnitek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":203.60999999999697,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"weaken.js b-and-a\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":143.2100000000004,\"ramUsage\":1.75,\"server\":\"millenium-fitness\",\"scriptKey\":\"weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"weaken.js powerhouse-fitness\",\"threads\":4,\"temporary\":false}}]}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"13.0.4.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"powerhouse-fitness\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"powerhouse-fitness\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"powerhouse-fitness\"}}]]},\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":63,\"hackDifficulty\":88.05599999999998,\"minDifficulty\":21,\"moneyAvailable\":15445361626.724472,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":988,\"serverGrowth\":54,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"powerhouse-fitness\",\"scriptKey\":\"weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"weaken.js titan-labs\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.4099999999992,\"ramUsage\":1.75,\"server\":\"powerhouse-fitness\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"powerhouse-fitness\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"powerhouse-fitness\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.7,\"server\":\"powerhouse-fitness\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"powerhouse-fitness\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.7,\"server\":\"powerhouse-fitness\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":2,\"temporary\":false}}]}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"7.7.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":47,\"hackDifficulty\":47.58,\"minDifficulty\":16,\"moneyAvailable\":772521.6049948483,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":763,\"serverGrowth\":57,\"runningScripts\":[]}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"46.6.0.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"run4theh111z\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"run4theh111z\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"run4theh111z\"}}]]},\"serversOnNetwork\":[\"taiyang-digital\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":520,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":372.4099999999874,\"ramUsage\":1.75,\"server\":\"run4theh111z\",\"scriptKey\":\"weaken.js*[\\\"stormtech\\\"]\",\"title\":\"weaken.js stormtech\",\"threads\":13,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"scriptKey\":\"hack.js*[\\\"kuai-gong\\\"]\",\"title\":\"hack.js kuai-gong\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"scriptKey\":\"hack.js*[\\\"crush-fitness\\\"]\",\"title\":\"hack.js crush-fitness\",\"threads\":2,\"temporary\":false}}]}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"54.0.9.2\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"I.I.I.I\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"I.I.I.I\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"I.I.I.I\"}}]]},\"serversOnNetwork\":[\"computek\",\"rho-construction\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":347,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":243.00999999999473,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"weaken.js*[\\\"solaris\\\"]\",\"title\":\"weaken.js solaris\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"weaken.js*[\\\"global-pharm\\\"]\",\"title\":\"weaken.js global-pharm\",\"threads\":23,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":263.2099999999936,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"weaken.js*[\\\"lexo-corp\\\"]\",\"title\":\"weaken.js lexo-corp\",\"threads\":13,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"weaken.js titan-labs\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"weaken.js powerhouse-fitness\",\"threads\":24,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.41000000000027,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":16,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"I.I.I.I\",\"scriptKey\":\"grow.js*[\\\"joesguns\\\"]\",\"title\":\"grow.js joesguns\",\"threads\":2,\"temporary\":false}}]}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"0.0.9.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"avmnite-02h\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"avmnite-02h\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"avmnite-02h\"}}]]},\"serversOnNetwork\":[\"silver-helix\",\"rothman-uni\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":207,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":372.4099999999874,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"scriptKey\":\"weaken.js*[\\\"stormtech\\\"]\",\"title\":\"weaken.js stormtech\",\"threads\":13,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"scriptKey\":\"weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"weaken.js titan-labs\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.4099999999992,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"avmnite-02h\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"scriptKey\":\"hack.js*[\\\"zer0\\\"]\",\"title\":\"hack.js zer0\",\"threads\":3,\"temporary\":false}}]}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"17.9.5.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\".\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\".\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\".\"}}]]},\"serversOnNetwork\":[\"helios\",\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":515,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"ramUsage\":1.7,\"server\":\".\",\"scriptKey\":\"hack.js*[\\\"omnia\\\"]\",\"title\":\"hack.js omnia\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.7,\"server\":\".\",\"scriptKey\":\"hack.js*[\\\"aevum-police\\\"]\",\"title\":\"hack.js aevum-police\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\".\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.7,\"server\":\".\",\"scriptKey\":\"hack.js*[\\\"helios\\\"]\",\"title\":\"hack.js helios\",\"threads\":2,\"temporary\":false}}]}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"46.6.3.1\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"CSEC\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"CSEC\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"CSEC\"}}]]},\"serversOnNetwork\":[\"hong-fang-tea\",\"silver-helix\",\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":59,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"CSEC\",\"scriptKey\":\"hack.js*[\\\"the-hub\\\"]\",\"title\":\"hack.js the-hub\",\"threads\":4,\"temporary\":false}}]}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"20.3.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":1,\"runningScripts\":[]}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"88.2.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1,\"runningScripts\":[]}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"40.3.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"lauren\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren\",\"httpPortOpen\":true,\"ip\":\"80.0.3.6\",\"isConnectedTo\":false,\"maxRam\":1048576,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":369.4099999999876,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":1124,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"4sigma\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.4099999999992,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"4sigma\\\"]\",\"title\":\"weaken.js 4sigma\",\"threads\":37,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":354.20999999998844,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"omnitek\\\"]\",\"title\":\"weaken.js omnitek\",\"threads\":169,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":278.40999999999275,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"nwo\\\"]\",\"title\":\"weaken.js nwo\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":242.0099999999948,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"microdyne\\\"]\",\"title\":\"weaken.js microdyne\",\"threads\":28,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"titan-labs\\\"]\",\"title\":\"weaken.js titan-labs\",\"threads\":24,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":203.60999999999697,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"weaken.js b-and-a\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":1142,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"clarkinc\\\"]\",\"title\":\"weaken.js clarkinc\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":18,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.41000000000025,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"infocomm\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.41000000000017,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"infocomm\\\"]\",\"title\":\"hack.js infocomm\",\"threads\":66,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":31.209999999999923,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"ecorp\\\"]\",\"title\":\"hack.js ecorp\",\"threads\":16,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"applied-energetics\\\"]\",\"title\":\"hack.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"computek\\\"]\",\"title\":\"hack.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"global-pharm\\\"]\",\"title\":\"hack.js global-pharm\",\"threads\":19,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":88,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"syscore\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"syscore\\\"]\",\"title\":\"hack.js syscore\",\"threads\":55,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"omnia\\\"]\",\"title\":\"hack.js omnia\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"aerocorp\\\"]\",\"title\":\"hack.js aerocorp\",\"threads\":18,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"neo-net\\\"]\",\"title\":\"hack.js neo-net\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"weaken.js*[\\\"neo-net\\\"]\",\"title\":\"weaken.js neo-net\",\"threads\":1143,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"grow.js*[\\\"nectar-net\\\"]\",\"title\":\"grow.js nectar-net\",\"threads\":444,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"lauren\",\"scriptKey\":\"hack.js*[\\\"johnson-ortho\\\"]\",\"title\":\"hack.js johnson-ortho\",\"threads\":15,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren\",\"scriptKey\":\"grow.js*[\\\"joesguns\\\"]\",\"title\":\"grow.js joesguns\",\"threads\":448,\"temporary\":false}}]}},\"lauren-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-0\",\"httpPortOpen\":true,\"ip\":\"18.3.7.9\",\"isConnectedTo\":false,\"maxRam\":262144,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-0\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-0\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-0\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":239.00999999999496,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"weaken.js*[\\\"ecorp\\\"]\",\"title\":\"weaken.js ecorp\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.60999999999714,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"weaken.js*[\\\"b-and-a\\\"]\",\"title\":\"weaken.js b-and-a\",\"threads\":55,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":145.2100000000003,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"weaken.js powerhouse-fitness\",\"threads\":30,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.81000000000093,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.41000000000025,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"weaken.js*[\\\"galactic-cyber\\\"]\",\"title\":\"weaken.js galactic-cyber\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"deltaone\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.41000000000018,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"deltaone\\\"]\",\"title\":\"hack.js deltaone\",\"threads\":65,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":84,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":36,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.20999999999992,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"omnia\\\"]\",\"title\":\"hack.js omnia\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"catalyst\\\"]\",\"title\":\"hack.js catalyst\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"catalyst\\\"]\",\"title\":\"hack.js catalyst\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"catalyst\\\"]\",\"title\":\"hack.js catalyst\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"titan-labs\\\"]\",\"title\":\"hack.js titan-labs\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"grow.js johnson-ortho\",\"threads\":63,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":349,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":128,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"megacorp\\\"]\",\"title\":\"hack.js megacorp\",\"threads\":27,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"silver-helix\\\"]\",\"title\":\"hack.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"the-hub\\\"]\",\"title\":\"hack.js the-hub\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"weaken.js*[\\\"omega-net\\\"]\",\"title\":\"weaken.js omega-net\",\"threads\":13,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"grow.js*[\\\"neo-net\\\"]\",\"title\":\"grow.js neo-net\",\"threads\":118,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"lauren-0\",\"scriptKey\":\"hack.js*[\\\"crush-fitness\\\"]\",\"title\":\"hack.js crush-fitness\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-0\",\"scriptKey\":\"grow.js*[\\\"nectar-net\\\"]\",\"title\":\"grow.js nectar-net\",\"threads\":463,\"temporary\":false}}]}},\"lauren-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-1\",\"httpPortOpen\":true,\"ip\":\"90.6.8.4\",\"isConnectedTo\":false,\"maxRam\":131072,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-1\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-1\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-1\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":108.81000000000101,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":275,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.20999999999998,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.8100000000009,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"weaken.js*[\\\"zb-institute\\\"]\",\"title\":\"weaken.js zb-institute\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"weaken.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.41000000000025,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"weaken.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"weaken.js powerhouse-fitness\",\"threads\":19,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":44,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":734,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"summit-uni\\\"]\",\"title\":\"grow.js summit-uni\",\"threads\":24,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"summit-uni\\\"]\",\"title\":\"grow.js summit-uni\",\"threads\":305,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.41,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":256,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"aevum-police\\\"]\",\"title\":\"hack.js aevum-police\",\"threads\":25,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"b-and-a\\\"]\",\"title\":\"hack.js b-and-a\",\"threads\":22,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"grow.js johnson-ortho\",\"threads\":315,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"grow.js johnson-ortho\",\"threads\":74,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"grow.js johnson-ortho\",\"threads\":392,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"grow.js johnson-ortho\",\"threads\":452,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"computek\\\"]\",\"title\":\"hack.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"computek\\\"]\",\"title\":\"hack.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"johnson-ortho\\\"]\",\"title\":\"hack.js johnson-ortho\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"neo-net\\\"]\",\"title\":\"grow.js neo-net\",\"threads\":569,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"lauren-1\",\"scriptKey\":\"hack.js*[\\\"summit-uni\\\"]\",\"title\":\"hack.js summit-uni\",\"threads\":19,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"zer0\\\"]\",\"title\":\"grow.js zer0\",\"threads\":342,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-1\",\"scriptKey\":\"grow.js*[\\\"the-hub\\\"]\",\"title\":\"grow.js the-hub\",\"threads\":82,\"temporary\":false}}]}},\"lauren-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-2\",\"httpPortOpen\":true,\"ip\":\"75.1.7.0\",\"isConnectedTo\":false,\"maxRam\":65536,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-2\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-2\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-2\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999737,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":7587,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.41000000000014,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":123,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.20999999999998,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":132,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":121,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":44.410000000000096,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.41000000000008,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":100.8100000000009,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"zb-institute\\\"]\",\"title\":\"grow.js zb-institute\",\"threads\":70,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":43.41000000000008,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":276,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.41,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":105,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":16,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":15,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.81000000000083,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":556,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":94.81000000000081,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":14,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.81000000000076,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"zb-def\\\"]\",\"title\":\"grow.js zb-def\",\"threads\":358,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":22,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nova-med\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":42.41000000000007,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"nova-med\\\"]\",\"title\":\"hack.js nova-med\",\"threads\":64,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":41.41000000000005,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"omnitek\\\"]\",\"title\":\"hack.js omnitek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.20999999999993,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":471,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":670,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"netlink\\\"]\",\"title\":\"grow.js netlink\",\"threads\":107,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"solaris\\\"]\",\"title\":\"hack.js solaris\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\"]\",\"title\":\"grow.js global-pharm\",\"threads\":161,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"the-hub\\\"]\",\"title\":\"grow.js the-hub\",\"threads\":143,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"vitalife\\\"]\",\"title\":\"grow.js vitalife\",\"threads\":1570,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"computek\\\"]\",\"title\":\"hack.js computek\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-2\",\"scriptKey\":\"grow.js*[\\\"summit-uni\\\"]\",\"title\":\"grow.js summit-uni\",\"threads\":348,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"lauren-2\",\"scriptKey\":\"hack.js*[\\\"catalyst\\\"]\",\"title\":\"hack.js catalyst\",\"threads\":3,\"temporary\":false}}]}},\"lauren-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-3\",\"httpPortOpen\":true,\"ip\":\"44.2.1.8\",\"isConnectedTo\":false,\"maxRam\":65536,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-3\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-3\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-3\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":230.00999999999547,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":24491,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":197.6099999999973,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":2515,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999737,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":573,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.4099999999984,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":2022,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":67.61000000000043,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":19,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":49.41000000000017,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":216,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":47.41000000000014,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":39,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":180,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.81000000000094,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.81000000000085,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.8100000000008,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.41,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":31,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":188.60999999999783,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"grow.js galactic-cyber\",\"threads\":144,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":173,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":99,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":109,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":95.81000000000083,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"omnia\\\"]\",\"title\":\"grow.js omnia\",\"threads\":726,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.41000000000001,\"ramUsage\":1.7,\"server\":\"lauren-3\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":29.20999999999993,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"summit-uni\\\"]\",\"title\":\"grow.js summit-uni\",\"threads\":223,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"summit-uni\\\"]\",\"title\":\"grow.js summit-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53.410000000000224,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"netlink\\\"]\",\"title\":\"grow.js netlink\",\"threads\":415,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.7,\"server\":\"lauren-3\",\"scriptKey\":\"hack.js*[\\\"aevum-police\\\"]\",\"title\":\"hack.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.7,\"server\":\"lauren-3\",\"scriptKey\":\"hack.js*[\\\"aevum-police\\\"]\",\"title\":\"hack.js aevum-police\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.7,\"server\":\"lauren-3\",\"scriptKey\":\"hack.js*[\\\"aevum-police\\\"]\",\"title\":\"hack.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":316,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":722,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":166,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.7,\"server\":\"lauren-3\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":420,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"lauren-3\",\"scriptKey\":\"hack.js*[\\\"catalyst\\\"]\",\"title\":\"hack.js catalyst\",\"threads\":18,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":145,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":319,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":198,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.7,\"server\":\"lauren-3\",\"scriptKey\":\"hack.js*[\\\"applied-energetics\\\"]\",\"title\":\"hack.js applied-energetics\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"the-hub\\\"]\",\"title\":\"grow.js the-hub\",\"threads\":197,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"the-hub\\\"]\",\"title\":\"grow.js the-hub\",\"threads\":47,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":24,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":485,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"zb-def\\\"]\",\"title\":\"grow.js zb-def\",\"threads\":161,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"neo-net\\\"]\",\"title\":\"grow.js neo-net\",\"threads\":399,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":260,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.7,\"server\":\"lauren-3\",\"scriptKey\":\"hack.js*[\\\"silver-helix\\\"]\",\"title\":\"hack.js silver-helix\",\"threads\":17,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"lauren-3\",\"scriptKey\":\"grow.js*[\\\"blade\\\"]\",\"title\":\"grow.js blade\",\"threads\":1082,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"lauren-3\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":2,\"temporary\":false}}]}},\"lauren-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-4\",\"httpPortOpen\":true,\"ip\":\"17.1.0.4\",\"isConnectedTo\":false,\"maxRam\":32768,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-4\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-4\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-4\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":395.6099999999861,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":60,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":356.2099999999883,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":408,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":230.00999999999547,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":2709,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":197.6099999999973,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":926,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.4099999999984,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":7290,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.40999999999931,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":302,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.40999999999937,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":11,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.81000000000095,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"grow.js galactic-cyber\",\"threads\":144,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.81000000000094,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":26,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.61000000000051,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":115,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":231.00999999999542,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"clarkinc\\\"]\",\"title\":\"grow.js clarkinc\",\"threads\":487,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":167.40999999999903,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"zb-institute\\\"]\",\"title\":\"grow.js zb-institute\",\"threads\":85,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.81000000000077,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"stormtech\\\"]\",\"title\":\"grow.js stormtech\",\"threads\":174,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":102.81000000000093,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":28,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":93.8100000000008,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":206,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":79,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.6100000000004,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":29,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":16,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"grow.js lexo-corp\",\"threads\":692,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"netlink\\\"]\",\"title\":\"grow.js netlink\",\"threads\":56,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"netlink\\\"]\",\"title\":\"grow.js netlink\",\"threads\":88,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.41000000000025,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":51,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":59,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":30,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":183,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":27,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":163,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"johnson-ortho\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"johnson-ortho\\\"]\",\"title\":\"grow.js johnson-ortho\",\"threads\":25,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":73,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":37.41,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":151,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"scriptKey\":\"hack.js*[\\\"alpha-ent\\\"]\",\"title\":\"hack.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"scriptKey\":\"hack.js*[\\\"millenium-fitness\\\"]\",\"title\":\"hack.js millenium-fitness\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"taiyang-digital\\\"]\",\"title\":\"grow.js taiyang-digital\",\"threads\":309,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"taiyang-digital\\\"]\",\"title\":\"grow.js taiyang-digital\",\"threads\":52,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.7,\"server\":\"lauren-4\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"titan-labs\\\"]\",\"title\":\"grow.js titan-labs\",\"threads\":824,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":448,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":88,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":39,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"omnia\\\"]\",\"title\":\"grow.js omnia\",\"threads\":240,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"ecorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"lauren-4\",\"scriptKey\":\"grow.js*[\\\"ecorp\\\"]\",\"title\":\"grow.js ecorp\",\"threads\":500,\"temporary\":false}}]}},\"lauren-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-5\",\"httpPortOpen\":true,\"ip\":\"53.5.3.4\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-5\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-5\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-5\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":356.2099999999883,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":231.00999999999542,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":230.00999999999547,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":166,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":197.6099999999973,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":400,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.40999999999835,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":162,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":168.40999999999897,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":381,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.40999999999931,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":529,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":161.40999999999937,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":37,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.6100000000004,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.41000000000025,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":60,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":75.61000000000054,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":77,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":73.61000000000051,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":27,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":70.61000000000047,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":89,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.41000000000018,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":74,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":212.80999999999645,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"clarkinc\\\"]\",\"title\":\"grow.js clarkinc\",\"threads\":136,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":204.8099999999969,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"grow.js powerhouse-fitness\",\"threads\":109,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":97.81000000000085,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.41000000000027,\"ramUsage\":1.7,\"server\":\"lauren-5\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.81000000000094,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":79.6100000000006,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":59,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.61000000000055,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":54.41000000000024,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":310,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":19,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":19,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":61,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":276,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":104.81000000000095,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"grow.js galactic-cyber\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":30.209999999999926,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":98,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":82,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":156,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.7,\"server\":\"lauren-5\",\"scriptKey\":\"hack.js*[\\\"titan-labs\\\"]\",\"title\":\"hack.js titan-labs\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"grow.js lexo-corp\",\"threads\":63,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"lexo-corp\\\"]\",\"title\":\"grow.js lexo-corp\",\"threads\":27,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.7,\"server\":\"lauren-5\",\"scriptKey\":\"hack.js*[\\\"rho-construction\\\"]\",\"title\":\"hack.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"grow.js applied-energetics\",\"threads\":200,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"grow.js applied-energetics\",\"threads\":307,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.7,\"server\":\"lauren-5\",\"scriptKey\":\"hack.js*[\\\"aevum-police\\\"]\",\"title\":\"hack.js aevum-police\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.7,\"server\":\"lauren-5\",\"scriptKey\":\"hack.js*[\\\"aerocorp\\\"]\",\"title\":\"hack.js aerocorp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.7,\"server\":\"lauren-5\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.7,\"server\":\"lauren-5\",\"scriptKey\":\"hack.js*[\\\"netlink\\\"]\",\"title\":\"hack.js netlink\",\"threads\":19,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":325,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":32,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"omnitek\\\"]\",\"title\":\"grow.js omnitek\",\"threads\":36,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-5\",\"scriptKey\":\"grow.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"grow.js hong-fang-tea\",\"threads\":173,\"temporary\":false}}]}},\"lauren-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-6\",\"httpPortOpen\":true,\"ip\":\"31.2.2.4\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-6\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-6\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-6\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":395.6099999999861,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":243,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":356.2099999999883,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":330,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":231.00999999999542,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":105,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":228.00999999999559,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":206,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.8099999999965,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":39,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":198.60999999999726,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999737,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.40999999999835,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":1020,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":162.40999999999931,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":185.609999999998,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"grow.js galactic-cyber\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":55.41000000000025,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"grow.js galactic-cyber\",\"threads\":82,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":212.80999999999645,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"clarkinc\\\"]\",\"title\":\"grow.js clarkinc\",\"threads\":74,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":204.8099999999969,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"clarkinc\\\"]\",\"title\":\"grow.js clarkinc\",\"threads\":95,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":88.81000000000073,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":94,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":78,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":202.60999999999703,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"b-and-a\\\"]\",\"title\":\"grow.js b-and-a\",\"threads\":105,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.4099999999983,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"microdyne\\\"]\",\"title\":\"grow.js microdyne\",\"threads\":354,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.61000000000055,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":116,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.6100000000004,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":28,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":56,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.61000000000048,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":107,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":25,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.81000000000091,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"zb-institute\\\"]\",\"title\":\"grow.js zb-institute\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":28,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.20999999999992,\"ramUsage\":1.7,\"server\":\"lauren-6\",\"scriptKey\":\"hack.js*[\\\"fulcrumtech\\\"]\",\"title\":\"hack.js fulcrumtech\",\"threads\":6,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\"]\",\"title\":\"grow.js global-pharm\",\"threads\":358,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\"]\",\"title\":\"grow.js global-pharm\",\"threads\":17,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.7,\"server\":\"lauren-6\",\"scriptKey\":\"hack.js*[\\\"helios\\\"]\",\"title\":\"hack.js helios\",\"threads\":23,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"omnitek\\\"]\",\"title\":\"grow.js omnitek\",\"threads\":237,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.7,\"server\":\"lauren-6\",\"scriptKey\":\"hack.js*[\\\"alpha-ent\\\"]\",\"title\":\"hack.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"nwo\\\"]\",\"title\":\"grow.js nwo\",\"threads\":160,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"megacorp\\\"]\",\"title\":\"grow.js megacorp\",\"threads\":578,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":10,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"lauren-6\",\"scriptKey\":\"hack.js*[\\\"silver-helix\\\"]\",\"title\":\"hack.js silver-helix\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-6\",\"scriptKey\":\"grow.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"grow.js hong-fang-tea\",\"threads\":19,\"temporary\":false}}]}},\"lauren-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-7\",\"httpPortOpen\":true,\"ip\":\"3.9.4.8\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-7\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-7\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-7\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":231.00999999999542,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":228.00999999999559,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":331,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":212.80999999999645,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":747,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.8099999999965,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":92,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.60999999999714,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":198.60999999999726,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":170,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":197.6099999999973,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":139,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.40999999999835,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.40999999999926,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":126,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.81000000000077,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"stormtech\\\"]\",\"title\":\"grow.js stormtech\",\"threads\":80,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"stormtech\\\"]\",\"title\":\"grow.js stormtech\",\"threads\":449,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":204.8099999999969,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"clarkinc\\\"]\",\"title\":\"grow.js clarkinc\",\"threads\":11,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"b-and-a\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":202.60999999999703,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"b-and-a\\\"]\",\"title\":\"grow.js b-and-a\",\"threads\":10,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":185.609999999998,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"grow.js galactic-cyber\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":174.40999999999863,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"grow.js galactic-cyber\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":129.0100000000012,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"grow.js galactic-cyber\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"netlink\\\"]\",\"title\":\"grow.js netlink\",\"threads\":97,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.61000000000055,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":245,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.6100000000004,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":67,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.41000000000018,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":153,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":299,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":71.61000000000048,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":75,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zeus-med\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":59.41000000000031,\"ramUsage\":1.7,\"server\":\"lauren-7\",\"scriptKey\":\"hack.js*[\\\"zeus-med\\\"]\",\"title\":\"hack.js zeus-med\",\"threads\":63,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":36.20999999999998,\"ramUsage\":1.7,\"server\":\"lauren-7\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.7,\"server\":\"lauren-7\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":46,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":147,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":27,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":130,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.20999999999992,\"ramUsage\":1.7,\"server\":\"lauren-7\",\"scriptKey\":\"hack.js*[\\\"fulcrumtech\\\"]\",\"title\":\"hack.js fulcrumtech\",\"threads\":24,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\"]\",\"title\":\"grow.js global-pharm\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"omega-net\\\"]\",\"title\":\"grow.js omega-net\",\"threads\":71,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":379,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.7,\"server\":\"lauren-7\",\"scriptKey\":\"hack.js*[\\\"aevum-police\\\"]\",\"title\":\"hack.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"grow.js applied-energetics\",\"threads\":44,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":21.209999999999958,\"ramUsage\":1.7,\"server\":\"lauren-7\",\"scriptKey\":\"hack.js*[\\\"solaris\\\"]\",\"title\":\"hack.js solaris\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"lauren-7\",\"scriptKey\":\"hack.js*[\\\"solaris\\\"]\",\"title\":\"hack.js solaris\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.7,\"server\":\"lauren-7\",\"scriptKey\":\"hack.js*[\\\"vitalife\\\"]\",\"title\":\"hack.js vitalife\",\"threads\":24,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.7,\"server\":\"lauren-7\",\"scriptKey\":\"hack.js*[\\\"taiyang-digital\\\"]\",\"title\":\"hack.js taiyang-digital\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":50,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"megacorp\\\"]\",\"title\":\"grow.js megacorp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"lauren-7\",\"scriptKey\":\"hack.js*[\\\"rothman-uni\\\"]\",\"title\":\"hack.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-7\",\"scriptKey\":\"grow.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"grow.js hong-fang-tea\",\"threads\":502,\"temporary\":false}}]}},\"lauren-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-8\",\"httpPortOpen\":true,\"ip\":\"55.7.8.1\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-8\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-8\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-8\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":389.6099999999864,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":866,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":356.2099999999883,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":26,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":231.00999999999542,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":230.00999999999547,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":83,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":212.80999999999645,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":48,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":204.8099999999969,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.4099999999984,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":165,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.41000000000018,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.41000000000001,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"summit-uni\\\"]\",\"title\":\"grow.js summit-uni\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":86,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":89,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"omnia\\\"]\",\"title\":\"grow.js omnia\",\"threads\":33,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":51,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"stormtech\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"stormtech\\\"]\",\"title\":\"grow.js stormtech\",\"threads\":37,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":17.209999999999972,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":97,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":59,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":106,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"omnitek\\\"]\",\"title\":\"grow.js omnitek\",\"threads\":80,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"lauren-8\",\"scriptKey\":\"hack.js*[\\\"lexo-corp\\\"]\",\"title\":\"hack.js lexo-corp\",\"threads\":22,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.75,\"server\":\"lauren-8\",\"scriptKey\":\"grow.js*[\\\"neo-net\\\"]\",\"title\":\"grow.js neo-net\",\"threads\":465,\"temporary\":false}}]}},\"lauren-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-9\",\"httpPortOpen\":true,\"ip\":\"85.7.3.9\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-9\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-9\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-9\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":389.6099999999864,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":68,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":212.80999999999645,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":364,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":204.8099999999969,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":36,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.60999999999714,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":719,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999737,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":22,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.40999999999835,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":96,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.40999999999926,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":193,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.81000000000077,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"zb-def\\\"]\",\"title\":\"grow.js zb-def\",\"threads\":64,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":65.6100000000004,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":50.41000000000018,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":95,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":61.61000000000034,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":43,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.20999999999992,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":10,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":421,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"omnia\\\"]\",\"title\":\"grow.js omnia\",\"threads\":72,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.7,\"server\":\"lauren-9\",\"scriptKey\":\"hack.js*[\\\"zb-def\\\"]\",\"title\":\"hack.js zb-def\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-9\",\"scriptKey\":\"grow.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"grow.js hong-fang-tea\",\"threads\":128,\"temporary\":false}}]}},\"lauren-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-10\",\"httpPortOpen\":true,\"ip\":\"64.2.8.4\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-10\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-10\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-10\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":395.6099999999861,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":136,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":389.6099999999864,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":26,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999737,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":24,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.4099999999983,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":40,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.40999999999835,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":17,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":91.81000000000077,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"zb-def\\\"]\",\"title\":\"grow.js zb-def\",\"threads\":35,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"zb-def\\\"]\",\"title\":\"grow.js zb-def\",\"threads\":18,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":56.41000000000027,\"ramUsage\":1.7,\"server\":\"lauren-10\",\"scriptKey\":\"hack.js*[\\\"unitalife\\\"]\",\"title\":\"hack.js unitalife\",\"threads\":60,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":38.41000000000001,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"summit-uni\\\"]\",\"title\":\"grow.js summit-uni\",\"threads\":15,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"crush-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":32.20999999999992,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"crush-fitness\\\"]\",\"title\":\"grow.js crush-fitness\",\"threads\":19,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":363,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":293,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.7,\"server\":\"lauren-10\",\"scriptKey\":\"hack.js*[\\\"vitalife\\\"]\",\"title\":\"hack.js vitalife\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":18,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-10\",\"scriptKey\":\"grow.js*[\\\"hong-fang-tea\\\"]\",\"title\":\"grow.js hong-fang-tea\",\"threads\":95,\"temporary\":false}}]}},\"lauren-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-11\",\"httpPortOpen\":true,\"ip\":\"45.5.4.1\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-11\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-11\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-11\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.60999999999714,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":149,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.4099999999992,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":536,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.81000000000088,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":30,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":35,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":104,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":125,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":89,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"scriptKey\":\"grow.js*[\\\"nwo\\\"]\",\"title\":\"grow.js nwo\",\"threads\":88,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-11\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":14,\"temporary\":false}}]}},\"lauren-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-12\",\"httpPortOpen\":true,\"ip\":\"68.6.9.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-12\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-12\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-12\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.4099999999992,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":524,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.40999999999926,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"scriptKey\":\"grow.js*[\\\"netlink\\\"]\",\"title\":\"grow.js netlink\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"scriptKey\":\"grow.js*[\\\"zb-def\\\"]\",\"title\":\"grow.js zb-def\",\"threads\":49,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-12\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":7,\"temporary\":false}}]}},\"lauren-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-13\",\"httpPortOpen\":true,\"ip\":\"35.8.9.8\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-13\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-13\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-13\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.60999999999714,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":77,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.4099999999983,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.4099999999984,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":62,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.4099999999992,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":230,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":99.81000000000088,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":49,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.7,\"server\":\"lauren-13\",\"scriptKey\":\"hack.js*[\\\"aerocorp\\\"]\",\"title\":\"hack.js aerocorp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"grow.js applied-energetics\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"netlink\\\"]\",\"title\":\"grow.js netlink\",\"threads\":71,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"lauren-13\",\"scriptKey\":\"grow.js*[\\\"megacorp\\\"]\",\"title\":\"grow.js megacorp\",\"threads\":29,\"temporary\":false}}]}},\"lauren-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-14\",\"httpPortOpen\":true,\"ip\":\"55.5.1.0\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-14\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-14\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-14\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":389.6099999999864,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":64,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.4099999999992,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":30,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"scriptKey\":\"grow.js*[\\\"clarkinc\\\"]\",\"title\":\"grow.js clarkinc\",\"threads\":71,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-14\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":118,\"temporary\":false}}]}},\"lauren-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-15\",\"httpPortOpen\":true,\"ip\":\"66.2.8.0\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-15\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-15\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-15\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":179.40999999999835,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":90,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":35,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"scriptKey\":\"grow.js*[\\\"omnia\\\"]\",\"title\":\"grow.js omnia\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":38,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":68,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"megacorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"scriptKey\":\"grow.js*[\\\"megacorp\\\"]\",\"title\":\"grow.js megacorp\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"lauren-15\",\"scriptKey\":\"grow.js*[\\\"kuai-gong\\\"]\",\"title\":\"grow.js kuai-gong\",\"threads\":51,\"temporary\":false}}]}},\"lauren-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-16\",\"httpPortOpen\":true,\"ip\":\"97.6.4.1\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-16\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-16\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-16\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":389.6099999999864,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":231.00999999999542,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":60,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":212.80999999999645,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":23,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.8099999999965,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":202.60999999999703,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":146,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999737,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":92,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.4099999999983,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":1039,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":178.4099999999984,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":116,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.40999999999926,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":25,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"clarkinc\\\"]\",\"title\":\"grow.js clarkinc\",\"threads\":29,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":106,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":129.0100000000012,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"grow.js galactic-cyber\",\"threads\":36,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":101.81000000000091,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"zb-institute\\\"]\",\"title\":\"grow.js zb-institute\",\"threads\":98,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":29,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":23.20999999999995,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":52,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":18,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.7,\"server\":\"lauren-16\",\"scriptKey\":\"hack.js*[\\\"blade\\\"]\",\"title\":\"hack.js blade\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"applied-energetics\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":22.209999999999955,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"applied-energetics\\\"]\",\"title\":\"grow.js applied-energetics\",\"threads\":138,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"zb-def\\\"]\",\"title\":\"grow.js zb-def\",\"threads\":29,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":8.010000000000005,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"nwo\\\"]\",\"title\":\"grow.js nwo\",\"threads\":36,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":94,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"lauren-16\",\"scriptKey\":\"grow.js*[\\\"fulcrumtech\\\"]\",\"title\":\"grow.js fulcrumtech\",\"threads\":144,\"temporary\":false}}]}},\"lauren-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-17\",\"httpPortOpen\":true,\"ip\":\"22.0.0.4\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-17\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-17\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-17\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":118,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":13.209999999999987,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":28,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"lauren-17\",\"scriptKey\":\"hack.js*[\\\"alpha-ent\\\"]\",\"title\":\"hack.js alpha-ent\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"scriptKey\":\"grow.js*[\\\"neo-net\\\"]\",\"title\":\"grow.js neo-net\",\"threads\":40,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-17\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":105,\"temporary\":false}}]}},\"lauren-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-18\",\"httpPortOpen\":true,\"ip\":\"31.8.7.7\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-18\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-18\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-18\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":395.6099999999861,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":268,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":389.6099999999864,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":178,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.4099999999983,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":164.4099999999992,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":142,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.40999999999823,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"zb-def\\\"]\",\"title\":\"grow.js zb-def\",\"threads\":88,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-def\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":18.20999999999997,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"zb-def\\\"]\",\"title\":\"grow.js zb-def\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"galactic-cyber\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":129.0100000000012,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"galactic-cyber\\\"]\",\"title\":\"grow.js galactic-cyber\",\"threads\":207,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"netlink\\\"]\",\"title\":\"grow.js netlink\",\"threads\":116,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"netlink\\\"]\",\"title\":\"grow.js netlink\",\"threads\":130,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":96.81000000000084,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":89.81000000000074,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":32,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":110,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":16.209999999999976,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":45,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"alpha-ent\\\"]\",\"title\":\"grow.js alpha-ent\",\"threads\":123,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"omnia\\\"]\",\"title\":\"grow.js omnia\",\"threads\":108,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":42,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"lauren-18\",\"scriptKey\":\"grow.js*[\\\"nwo\\\"]\",\"title\":\"grow.js nwo\",\"threads\":245,\"temporary\":false}}]}},\"lauren-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-19\",\"httpPortOpen\":true,\"ip\":\"46.8.9.9\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-19\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-19\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-19\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.40999999999914,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.40999999999926,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":27,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.61000000000053,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":20,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"lauren-19\",\"scriptKey\":\"grow.js*[\\\"omnitek\\\"]\",\"title\":\"grow.js omnitek\",\"threads\":83,\"temporary\":false}}]}},\"lauren-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-20\",\"httpPortOpen\":true,\"ip\":\"44.4.1.3\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-20\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-20\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-20\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":395.6099999999861,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":601,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":389.6099999999864,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":348,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":228.00999999999559,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":86,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":211.8099999999965,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":200,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":196.60999999999737,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":73,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.40999999999914,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":7,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.40999999999926,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.61000000000053,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":186,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":81,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":20.20999999999996,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"taiyang-digital\\\"]\",\"title\":\"grow.js taiyang-digital\",\"threads\":24,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"taiyang-digital\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":19.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"taiyang-digital\\\"]\",\"title\":\"grow.js taiyang-digital\",\"threads\":104,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":15,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"omnitek\\\"]\",\"title\":\"grow.js omnitek\",\"threads\":466,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.21,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"nwo\\\"]\",\"title\":\"grow.js nwo\",\"threads\":4,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"catalyst\\\"]\",\"title\":\"grow.js catalyst\",\"threads\":24,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-20\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":37,\"temporary\":false}}]}},\"lauren-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-21\",\"httpPortOpen\":true,\"ip\":\"70.3.5.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-21\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-21\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-21\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.61000000000055,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":74.61000000000053,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"scriptKey\":\"grow.js*[\\\"aevum-police\\\"]\",\"title\":\"grow.js aevum-police\",\"threads\":19,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":57.41000000000028,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"scriptKey\":\"grow.js*[\\\"millenium-fitness\\\"]\",\"title\":\"grow.js millenium-fitness\",\"threads\":16,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.41000000000011,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":18,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":28.209999999999933,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":17,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":34,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-21\",\"scriptKey\":\"grow.js*[\\\"nwo\\\"]\",\"title\":\"grow.js nwo\",\"threads\":1,\"temporary\":false}}]}},\"lauren-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-22\",\"httpPortOpen\":true,\"ip\":\"17.6.9.3\",\"isConnectedTo\":false,\"maxRam\":4096,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-22\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-22\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-22\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":389.6099999999864,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":135,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":228.00999999999559,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":121,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":204.8099999999969,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":47,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":200.60999999999714,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":10,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":180.4099999999983,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":64,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":165.40999999999914,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":15,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumassets\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":163.40999999999926,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"fulcrumassets\\\"]\",\"title\":\"grow.js fulcrumassets\",\"threads\":220,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"clarkinc\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":213.8099999999964,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"clarkinc\\\"]\",\"title\":\"grow.js clarkinc\",\"threads\":48,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":233.0099999999953,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"powerhouse-fitness\\\"]\",\"title\":\"grow.js powerhouse-fitness\",\"threads\":154,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":90.81000000000076,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":82,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":14.209999999999983,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":12,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":12.20999999999999,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"helios\\\"]\",\"title\":\"grow.js helios\",\"threads\":9,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"computek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":45.41000000000011,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"computek\\\"]\",\"title\":\"grow.js computek\",\"threads\":5,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":35.209999999999965,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"netlink\\\"]\",\"title\":\"grow.js netlink\",\"threads\":26,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":33.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":43,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":15.20999999999998,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"rothman-uni\\\"]\",\"title\":\"grow.js rothman-uni\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aerocorp\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":27.209999999999937,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"aerocorp\\\"]\",\"title\":\"grow.js aerocorp\",\"threads\":337,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":26.20999999999994,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"omnia\\\"]\",\"title\":\"grow.js omnia\",\"threads\":130,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":8,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":11.209999999999994,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"omnitek\\\"]\",\"title\":\"grow.js omnitek\",\"threads\":21,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10.209999999999997,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"nwo\\\"]\",\"title\":\"grow.js nwo\",\"threads\":10,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nwo\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"nwo\\\"]\",\"title\":\"grow.js nwo\",\"threads\":146,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"fulcrumtech\\\"]\",\"title\":\"grow.js fulcrumtech\",\"threads\":570,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"kuai-gong\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"kuai-gong\\\"]\",\"title\":\"grow.js kuai-gong\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\"],\"dataMap\":{},\"filename\":\"hack.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.7,\"server\":\"lauren-22\",\"scriptKey\":\"hack.js*[\\\"omnia\\\"]\",\"title\":\"hack.js omnia\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"summit-uni\\\"]\",\"title\":\"grow.js summit-uni\",\"threads\":3,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"rho-construction\\\"]\",\"title\":\"grow.js rho-construction\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"ramUsage\":1.75,\"server\":\"lauren-22\",\"scriptKey\":\"grow.js*[\\\"silver-helix\\\"]\",\"title\":\"grow.js silver-helix\",\"threads\":64,\"temporary\":false}}]}},\"lauren-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lauren-23\",\"httpPortOpen\":true,\"ip\":\"8.7.4.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"hack.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Hacks a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.hack(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"hack.js\",\"server\":\"lauren-23\"}}],[\"grow.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Grows a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.grow(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"grow.js\",\"server\":\"lauren-23\"}}],[\"weaken.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Weakens a given server.\\n *\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n  try {\\n    await ns.weaken(ns.args[0], { stock: true });\\n  } catch (_) {\\n    return;\\n  }\\n}\\n\\nexport const autocomplete = data => data.servers;\\n\",\"filename\":\"weaken.js\",\"server\":\"lauren-23\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":181.40999999999823,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"scriptKey\":\"grow.js*[\\\"microdyne\\\"]\",\"title\":\"grow.js microdyne\",\"threads\":69,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":25.209999999999944,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"scriptKey\":\"grow.js*[\\\"global-pharm\\\"]\",\"title\":\"grow.js global-pharm\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\"],\"dataMap\":{},\"filename\":\"grow.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":24.209999999999948,\"ramUsage\":1.75,\"server\":\"lauren-23\",\"scriptKey\":\"grow.js*[\\\"solaris\\\"]\",\"title\":\"grow.js solaris\",\"threads\":2,\"temporary\":false}}]}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":15.4602,\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":89.2349,\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"favor\":19.9703,\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":36799.460444988785}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"favor\":17.8362,\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"favor\":39.2336,\"playerReputation\":13213.224037200143}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0.7361,\"playerReputation\":0}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"favor\":0.8941,\"playerReputation\":0}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":16.6318,\"playerReputation\":36337.646382708816}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"favor\":2.7933,\"playerReputation\":0}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"favor\":0.0878,\"playerReputation\":0}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"favor\":1.56,\"playerReputation\":0}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"favor\":0.1056,\"playerReputation\":0}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"favor\":0.7368,\"playerReputation\":0}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0.02,\"playerReputation\":0}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"favor\":30.8139,\"playerReputation\":0}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"favor\":0.7892,\"playerReputation\":0}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"favor\":4.0671,\"playerReputation\":0}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"favor\":42.9111,\"playerReputation\":0}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"favor\":0.0575,\"playerReputation\":0}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"favor\":22.9525,\"playerReputation\":1.187834009067504}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"favor\":3.7057,\"playerReputation\":25675.226500272027}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"favor\":0.0171,\"playerReputation\":0}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"favor\":190.4417,\"discovery\":\"known\",\"playerReputation\":458759.10986072366}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"favor\":224.6979,\"discovery\":\"known\",\"playerReputation\":93427.47697704565}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"favor\":397.1378,\"discovery\":\"known\",\"playerReputation\":224231.36423620995}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"favor\":200.042,\"discovery\":\"known\",\"playerReputation\":135232.24172305735}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"favor\":33.7413,\"discovery\":\"known\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"favor\":54.247,\"discovery\":\"known\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"favor\":37.8375,\"discovery\":\"known\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"known\",\"playerReputation\":11734.474578114547}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"favor\":129.8795,\"discovery\":\"known\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"favor\":52.0353,\"discovery\":\"known\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"rumored\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"favor\":69.8322,\"discovery\":\"known\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"favor\":112.5188,\"discovery\":\"known\",\"playerReputation\":27193.214711897417}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"favor\":160.3013,\"discovery\":\"known\",\"playerReputation\":94647.35901802682}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"favor\":194.7587,\"discovery\":\"known\",\"playerReputation\":140628.91441110955}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"favor\":163.3806,\"discovery\":\"known\",\"playerReputation\":124222.22983750934}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"favor\":198.4665,\"discovery\":\"known\",\"playerReputation\":134571.94481655245}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"favor\":0,\"discovery\":\"unknown\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":20326.36541694913,\"lastPrice\":20336.310372046562,\"playerShares\":16254061,\"playerAvgPx\":20395.259640728953,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.42,\"b\":false,\"otlkMag\":5,\"otlkMagForecast\":31.200414000731055,\"cap\":390915369,\"spreadPerc\":0.3,\"shareTxForMovement\":38837,\"shareTxUntilMovement\":25992,\"totalShares\":107200000,\"maxShares\":21400000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":20307.224666564594,\"lastPrice\":20317.869941801233,\"playerShares\":15700000,\"playerAvgPx\":20379.087663274746,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.45,\"b\":false,\"otlkMag\":14.078147742398315,\"otlkMagForecast\":30.28254619099136,\"cap\":313093684,\"spreadPerc\":0.2,\"shareTxForMovement\":63042,\"shareTxUntilMovement\":44120,\"totalShares\":78700000,\"maxShares\":15700000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":19496.41080741937,\"lastPrice\":19478.711810965055,\"playerShares\":13500000,\"playerAvgPx\":19720.92742350095,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.78,\"b\":true,\"otlkMag\":5.087566356701433,\"otlkMagForecast\":62.832125608907255,\"cap\":539275045,\"spreadPerc\":0.5,\"shareTxForMovement\":53531,\"shareTxUntilMovement\":32399,\"totalShares\":67400000,\"maxShares\":13500000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":19800.09132977977,\"lastPrice\":19784.64956359278,\"playerShares\":16700000,\"playerAvgPx\":19951.55271621814,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":true,\"otlkMag\":5.426215862601346,\"otlkMagForecast\":61.31154351069601,\"cap\":120936330,\"spreadPerc\":0.2,\"shareTxForMovement\":78190,\"shareTxUntilMovement\":4373,\"totalShares\":83700000,\"maxShares\":16700000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":31297.506600531524,\"lastPrice\":31274.190288661553,\"playerShares\":2427173,\"playerAvgPx\":31422.696626933648,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":false,\"otlkMag\":5.774828711241712,\"otlkMagForecast\":37.490756400179414,\"cap\":489325094,\"spreadPerc\":0.4,\"shareTxForMovement\":64829,\"shareTxUntilMovement\":7232,\"totalShares\":55100000,\"maxShares\":11000000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":59350.55090985897,\"lastPrice\":59275.285754643955,\"playerShares\":57092,\"playerAvgPx\":66289.29363494631,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.09,\"b\":false,\"otlkMag\":16.867978984644353,\"otlkMagForecast\":31.57793052772631,\"cap\":554016927,\"spreadPerc\":0.9,\"shareTxForMovement\":55231,\"shareTxUntilMovement\":40619,\"totalShares\":30200000,\"maxShares\":6000000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":23570.697564107242,\"lastPrice\":23592.663829673384,\"playerShares\":19500000,\"playerAvgPx\":23655.615911089124,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":4.567283323148144,\"otlkMagForecast\":59.79123450205476,\"cap\":390096007,\"spreadPerc\":0.2,\"shareTxForMovement\":51042,\"shareTxUntilMovement\":20787,\"totalShares\":97500000,\"maxShares\":19500000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":37742.75892101285,\"lastPrice\":37797.71774909025,\"playerShares\":13300000,\"playerAvgPx\":38711.86724801953,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.25,\"b\":true,\"otlkMag\":8.511336640832205,\"otlkMagForecast\":66.51329561463098,\"cap\":532659341,\"spreadPerc\":0.1,\"shareTxForMovement\":57701,\"shareTxUntilMovement\":49348,\"totalShares\":66700000,\"maxShares\":13300000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":16057.94417476242,\"lastPrice\":16074.405561692216,\"playerShares\":10900000,\"playerAvgPx\":16898.72064402473,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.88,\"b\":false,\"otlkMag\":5.304967947179026,\"otlkMagForecast\":43.27670177322404,\"cap\":528318526,\"spreadPerc\":0.7,\"shareTxForMovement\":61685,\"shareTxUntilMovement\":21635,\"totalShares\":54700000,\"maxShares\":10900000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":16950.332639667144,\"lastPrice\":16963.75970015642,\"playerShares\":12300000,\"playerAvgPx\":17398.37394232465,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.68,\"b\":true,\"otlkMag\":5.03910565837569,\"otlkMagForecast\":59.710984312120985,\"cap\":118692144,\"spreadPerc\":1,\"shareTxForMovement\":39519,\"shareTxUntilMovement\":17984,\"totalShares\":61500000,\"maxShares\":12300000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":10700.606828750471,\"lastPrice\":10693.257361848835,\"playerShares\":14300000,\"playerAvgPx\":10930.08360066339,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":false,\"otlkMag\":5.033040277804872,\"otlkMagForecast\":41.332731147023615,\"cap\":209006089,\"spreadPerc\":0.3,\"shareTxForMovement\":39275,\"shareTxUntilMovement\":3241,\"totalShares\":71500000,\"maxShares\":14300000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":16112.689778894448,\"lastPrice\":16097.687843325693,\"playerShares\":17200000,\"playerAvgPx\":16273.816676683393,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":5,\"otlkMagForecast\":57.002914221373125,\"cap\":81523469,\"spreadPerc\":1,\"shareTxForMovement\":103472,\"shareTxUntilMovement\":43813,\"totalShares\":86200000,\"maxShares\":17200000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":25164.385171583835,\"lastPrice\":25145.93068060338,\"playerShares\":7500000,\"playerAvgPx\":25492.943197227367,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.63,\"b\":true,\"otlkMag\":5.266827783710402,\"otlkMagForecast\":57.57207787177954,\"cap\":466438527,\"spreadPerc\":0.3,\"shareTxForMovement\":52481,\"shareTxUntilMovement\":31147,\"totalShares\":37400000,\"maxShares\":7500000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":25561.498648713372,\"lastPrice\":25543.64496129425,\"playerShares\":6200000,\"playerAvgPx\":25828.757378964965,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":5.0580918704961375,\"otlkMagForecast\":60.12889086787655,\"cap\":185888807,\"spreadPerc\":0.5,\"shareTxForMovement\":76673,\"shareTxUntilMovement\":67991,\"totalShares\":31100000,\"maxShares\":6200000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":18917.588618486796,\"lastPrice\":18903.935315768325,\"playerShares\":7600000,\"playerAvgPx\":19236.401151521986,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.62,\"b\":false,\"otlkMag\":5.198700959718798,\"otlkMagForecast\":43.2763771767324,\"cap\":188382704,\"spreadPerc\":0.5,\"shareTxForMovement\":111463,\"shareTxUntilMovement\":27347,\"totalShares\":37800000,\"maxShares\":7600000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":12754.993210263037,\"lastPrice\":12744.600756942553,\"playerShares\":10000000,\"playerAvgPx\":13379.060742668586,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":5.151397716092335,\"otlkMagForecast\":54.66486727240804,\"cap\":173480604,\"spreadPerc\":0.4,\"shareTxForMovement\":82608,\"shareTxUntilMovement\":24665,\"totalShares\":50100000,\"maxShares\":10000000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":24211.284120246542,\"lastPrice\":24233.847368331844,\"playerShares\":5100000,\"playerAvgPx\":24738.16972427884,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":7.360266362092597,\"otlkMagForecast\":58.67962105121078,\"cap\":663439422,\"spreadPerc\":1,\"shareTxForMovement\":67999,\"shareTxUntilMovement\":13699,\"totalShares\":25300000,\"maxShares\":5100000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":22483.352694559584,\"lastPrice\":22467.648969333648,\"playerShares\":6800000,\"playerAvgPx\":22719.284710544893,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":false,\"otlkMag\":8.83107027134039,\"otlkMagForecast\":39.01247455690617,\"cap\":379603023,\"spreadPerc\":0.8,\"shareTxForMovement\":110811,\"shareTxUntilMovement\":9532,\"totalShares\":34100000,\"maxShares\":6800000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":14233.483350345361,\"lastPrice\":14245.753128903165,\"playerShares\":7400000,\"playerAvgPx\":14447.3582353536,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.74,\"b\":false,\"otlkMag\":4.307745049126726,\"otlkMagForecast\":46.35189737680661,\"cap\":370631716,\"spreadPerc\":0.9,\"shareTxForMovement\":107551,\"shareTxUntilMovement\":32405,\"totalShares\":36900000,\"maxShares\":7400000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":1207.8055497108285,\"lastPrice\":1211.3793028081868,\"playerShares\":22400000,\"playerAvgPx\":1284.2558601299406,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.54,\"b\":true,\"otlkMag\":2.4359647840057375,\"otlkMagForecast\":50.3116213262248,\"cap\":67264152,\"spreadPerc\":1.1,\"shareTxForMovement\":30968,\"shareTxUntilMovement\":15680,\"totalShares\":111800000,\"maxShares\":22400000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":9128.80826203207,\"lastPrice\":9115.322683711067,\"playerShares\":8824746,\"playerAvgPx\":9220.09634465239,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.27,\"b\":false,\"otlkMag\":4.992602797076454,\"otlkMagForecast\":44.997159464535684,\"cap\":137294878,\"spreadPerc\":1,\"shareTxForMovement\":42631,\"shareTxUntilMovement\":36873,\"totalShares\":52700000,\"maxShares\":10500000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":1958.97115437708,\"lastPrice\":1957.7852158020494,\"playerShares\":18000000,\"playerAvgPx\":1995.0036252283355,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.52,\"b\":false,\"otlkMag\":1.0054269024376192,\"otlkMagForecast\":50.53765569791031,\"cap\":30221030,\"spreadPerc\":0.6,\"shareTxForMovement\":120576,\"shareTxUntilMovement\":17801,\"totalShares\":89800000,\"maxShares\":18000000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":6556.7073733166235,\"lastPrice\":6542.68351410123,\"playerShares\":7300000,\"playerAvgPx\":7234.565458414655,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.84,\"b\":false,\"otlkMag\":6.274588580333281,\"otlkMagForecast\":39.482988580751766,\"cap\":145035522,\"spreadPerc\":1.5,\"shareTxForMovement\":85509,\"shareTxUntilMovement\":82596,\"totalShares\":36700000,\"maxShares\":7300000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":4191.91984258684,\"lastPrice\":4184.023918206507,\"playerShares\":11700000,\"playerAvgPx\":4217.071361642361,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.62,\"b\":true,\"otlkMag\":5,\"otlkMagForecast\":53.28692224365141,\"cap\":29424461,\"spreadPerc\":0.6,\"shareTxForMovement\":54212,\"shareTxUntilMovement\":43280,\"totalShares\":58300000,\"maxShares\":11700000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":1251.9301692468453,\"lastPrice\":1250.6480996333864,\"playerShares\":17600000,\"playerAvgPx\":1269.8514094607463,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.88,\"b\":false,\"otlkMag\":5.416544592364065,\"otlkMagForecast\":47.48823232031147,\"cap\":18910606,\"spreadPerc\":1.1,\"shareTxForMovement\":78175,\"shareTxUntilMovement\":51319,\"totalShares\":88000000,\"maxShares\":17600000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":1717.2090678144727,\"lastPrice\":1722.6501575007774,\"playerShares\":4100000,\"playerAvgPx\":1815.1323541216843,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.72,\"b\":true,\"otlkMag\":2.709560449326764,\"otlkMagForecast\":52.87159392606345,\"cap\":22004197,\"spreadPerc\":1.5,\"shareTxForMovement\":24266,\"shareTxUntilMovement\":17821,\"totalShares\":20700000,\"maxShares\":4100000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":5577.958110040662,\"lastPrice\":5571.986496557495,\"playerShares\":1900000,\"playerAvgPx\":5678.800599212,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.92,\"b\":true,\"otlkMag\":1.6608679921500258,\"otlkMagForecast\":51.28017214575848,\"cap\":74363466,\"spreadPerc\":0.4,\"shareTxForMovement\":63097,\"shareTxUntilMovement\":52168,\"totalShares\":9400000,\"maxShares\":1900000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":1696.349099340023,\"lastPrice\":1694.8485913705993,\"playerShares\":5200000,\"playerAvgPx\":1709.9198921347431,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":true,\"otlkMag\":1.1381328189405622,\"otlkMagForecast\":52.33899298715649,\"cap\":28965730,\"spreadPerc\":0.8,\"shareTxForMovement\":96475,\"shareTxUntilMovement\":20683,\"totalShares\":25900000,\"maxShares\":5200000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":2805.240680576798,\"lastPrice\":2812.429980740569,\"playerShares\":2100000,\"playerAvgPx\":3152.372640573389,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.2,\"b\":false,\"otlkMag\":1.481889583702944,\"otlkMagForecast\":54.216074903830936,\"cap\":56360480,\"spreadPerc\":0.8,\"shareTxForMovement\":21855,\"shareTxUntilMovement\":12366,\"totalShares\":10700000,\"maxShares\":2100000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":526.0049003329352,\"lastPrice\":524.6481032883179,\"playerShares\":17400000,\"playerAvgPx\":597.776760362416,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.22,\"b\":false,\"otlkMag\":5.792299502009445,\"otlkMagForecast\":51.46445506127803,\"cap\":3273285,\"spreadPerc\":0.6,\"shareTxForMovement\":27165,\"shareTxUntilMovement\":27165,\"totalShares\":87100000,\"maxShares\":17400000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":359.0352260429188,\"lastPrice\":358.3797799813028,\"playerShares\":43700000,\"playerAvgPx\":377.84286704444685,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.57,\"b\":true,\"otlkMag\":6.092213781783279,\"otlkMagForecast\":65.0423065078736,\"cap\":9078236,\"spreadPerc\":1.3,\"shareTxForMovement\":58688,\"shareTxUntilMovement\":15687,\"totalShares\":218300000,\"maxShares\":43700000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":31924.052843460904,\"lastPrice\":31895.07193494062,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.78,\"b\":false,\"otlkMag\":9.060441350898888,\"otlkMagForecast\":41.30158159203811,\"cap\":134378547,\"spreadPerc\":0.3,\"shareTxForMovement\":180293,\"shareTxUntilMovement\":83580,\"totalShares\":12200000,\"maxShares\":2400000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":18982.186604055874,\"lastPrice\":18971.136734125743,\"playerShares\":3800000,\"playerAvgPx\":19168.039325042275,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.5,\"b\":false,\"otlkMag\":9.271139125198825,\"otlkMagForecast\":38.36032283365261,\"cap\":75088108,\"spreadPerc\":0.4,\"shareTxForMovement\":94547,\"shareTxUntilMovement\":80070,\"totalShares\":18800000,\"maxShares\":3800000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":11,\"lastUpdate\":1704753912138,\"ticksUntilCycle\":4}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutoexecScript\":\"init.js\",\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":true,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":true,\"EnableHistorySearch\":true,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":true,\"SuppressFactionInvites\":true,\"SuppressMessages\":true,\"SuppressTravelConfirmation\":true,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":true,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#EA9062\",\"primary\":\"#DD7B4A\",\"primarydark\":\"#D3591C\",\"successlight\":\"#6ACF6A\",\"success\":\"#43BF43\",\"successdark\":\"#3E913E\",\"errorlight\":\"#C15757\",\"error\":\"#B34141\",\"errordark\":\"#752525\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#E6E69D\",\"warning\":\"#DADA56\",\"warningdark\":\"#A1A106\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#AD84CF\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#76C6B7\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Operator Mono, agave Nerd Font mono, monospace\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true},\"EditorTheme\":{\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}},\"base\":\"vs-dark\",\"inherit\":true},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":true,\"MonacoTabSize\":2,\"MonacoDetectIndentation\":false,\"MonacoFontFamily\":\"Lucida Console\",\"MonacoFontSize\":20,\"MonacoFontLigatures\":false,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"MonacoCursorStyle\":\"line\",\"MonacoCursorBlinking\":\"blink\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"37","AllGangsSave":"","LastExportBonus":"1704726982281","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"isBonusCharging\":false,\"storedCycles\":0}}"}}